#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page Home                                                                  #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_HOME: '1UL << 17'
  PAGE_ID_HOME: '1'

globals:
  ##### Date/time formats #####
  - id: home_date_color
    type: uint16_t
    restore_value: true
    initial_value: '65535'
  - id: mui_time_format
    type: std::string
    restore_value: true
    max_restore_data_length: 20
    initial_value: '"%H:%M"'
  - id: home_time_color
    type: uint16_t
    restore_value: true
    initial_value: '65535'
  - id: mui_meridiem_am
    type: std::string
    restore_value: true
    max_restore_data_length: 5
    initial_value: '"AM"'
  - id: mui_meridiem_pm
    type: std::string
    restore_value: true
    max_restore_data_length: 5
    initial_value: '"PM"'

  - id: last_weather_pic
    type: uint8_t
    restore_value: false
    initial_value: '1'

script:
  - id: !extend boot_progress_dump
    then:
      - lambda: |-
          boot_progress_dump_item->execute(${BOOT_STEP_PAGE_HOME}, "Page Home");

  - id: !extend boot_sequence
    then:
      - if:
          condition:
            - lambda: return id(current_page_id) == ${PAGE_ID_BOOT};
            - lambda: return wakeup_page_name->state == "home";
          then:
            - wait_until:
                condition:
                  - lambda: return id(display_mode) > 0;
                timeout: 180s
            - lambda: |-
                ESP_LOGI("script.boot_sequence (page home)", "Jump to Home page");
                goto_page_id->execute(${PAGE_ID_HOME}, true);
                set_variable_value->execute("wakeup_page_id", ${PAGE_ID_HOME});
      - wait_until:
          condition:
            - lambda: return (id(current_page_id) != ${PAGE_ID_BOOT});
          timeout: 2s
      - lambda: |-
          boot_progress->execute(${BOOT_STEP_PAGE_HOME}, "Page Home");

  - id: !extend page_changed
    then:
      - lambda: |-
          if (id(current_page_id) == ${PAGE_ID_HOME})
            page_home->execute();

  - id: page_home
    mode: restart
    then:
    #  - lambda: |-
    #      page_home_chips->execute();
    #      page_home_custom_buttons->execute();
    # Extended by:
    #   - nspanel_esphome_core_datetime.yaml
    #   - nspanel_esphome_core_hw_relays.yaml
    #   - nspanel_esphome_core_hw_wifi.yaml
    #   - nspanel_esphome_core_page_entities.yaml
    #   - nspanel_esphome_core_page_notification.yaml
    #   - nspanel_esphome_core_page_qrcode.yaml
    #   - nspanel_esphome_core_page_weather.yaml

  - id: page_home_chips
    mode: restart
    then:
      - lambda: |-
          ESP_LOGD("script.page_home_chips", "Rendering chips");
          char component[7] = "\0";

          for (uint8_t component_id = 1; component_id <= 7; component_id++) {
              sprintf(component, "chip%02d", component_id); // Constructing "chip01" to "chip07"

              ESP_LOGD("script.page_home_chips", "Getting %s", component);
              DisplayComponent* icon = get_component(${PAGE_ID_HOME}, component);
              if (icon && icon->initialized) {
                  ESP_LOGD("script.page_home_chips", "Updating %s", component);
                  display_component_send->execute(icon);
              }
          }

  - id: page_home_custom_buttons
    mode: restart
    then:
      - lambda: |-
          ESP_LOGD("script.page_home_chips", "Rendering custom buttons");
          char component[9] = "\0";

          for (uint8_t component_id = 1; component_id <= 7; component_id++) {
              sprintf(component, "button%02d", component_id); // Constructing "button01" to "button08"

              DisplayComponent* icon = get_component(${PAGE_ID_HOME}, component);
              if (icon && icon->initialized) {
                  ESP_LOGD("script.page_home_custom_buttons", "Updating %s", component);
                  display_component_send->execute(icon);
              }
          }

  - id: !extend refresh_datetime  # Defined by nspanel_esphome_core_datetime.yaml
    mode: restart
    then:
      - lambda: |-
          std::string time_format_str = process_time_format(id(mui_time_format).c_str(), id(time_provider).now().hour,
                                                            id(mui_meridiem_am).c_str(), id(mui_meridiem_pm).c_str());
          std::string meridiem_text = (id(time_provider).now().hour<12) ? id(mui_meridiem_am) : id(mui_meridiem_pm);
          set_component_text->execute(${PAGE_ID_HOME}, "meridiem", (time_format_str.find("%p") != std::string::npos) ?
                                                            meridiem_text.c_str() : " ");
          set_component_text->execute(${PAGE_ID_HOME}, "time", id(time_provider).now().strftime(time_format_str).c_str());

  - id: !extend stop_all
    then:
      - lambda: |-
          page_home->stop();
          page_home_chips->stop();
          page_home_custom_buttons->stop();
...
