#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page Entities                                                              #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_ENTITIES: '1UL << 15'
  half_width_chars: "iljtIf '-,;:!.\\\"|()[]{}*^~\\\\/_"

globals:
  - id: page_entity_value_horizontal_alignment
    type: uint8_t
    restore_value: false
    initial_value: '1'  # Horizontal alignment:0-Left;1-Center;2-Right

script:
  - id: !extend boot_progress_dump
    then:
      - lambda: |-
          boot_progress_dump_item->execute(${BOOT_STEP_PAGE_ENTITIES}, "Page Entities");

  - id: !extend page_changed
    then:
      - lambda: |-
          if (current_page->state == "entitypage01") page_entitypage01->execute();
          else if (current_page->state == "entitypage02") page_entitypage02->execute();
          else if (current_page->state == "entitypage03") page_entitypage03->execute();
          else if (current_page->state == "entitypage04") page_entitypage04->execute();

  - id: page_entitypage
    mode: restart
    parameters:
      page_number: uint
    then:
      - lambda: |-
          if (id(page_entity_value_horizontal_alignment) != 1)
            page_entitypage_aligh_values->execute();

  - id: page_entitypage_aligh_values
    mode: restart
    then:
      - if:
          condition:
            - lambda: |-
                return (current_page->state.find("entitypage") == 0);
          then:
            - repeat:
                count: 8
                then:
                  - delay: !lambda return (10*(id(nextion_queue)+disp1->queue_size()+tf_uart->available()));
                  - lambda: |-
                      disp1->send_command_printf("value%02" PRIu32 ".xcen=%" PRIu8, iteration,
                                                id(page_entity_value_horizontal_alignment));

  - id: page_entitypage01
    mode: restart
    then:
      - script.execute:
          id: page_entitypage
          page_number: 1
  - id: page_entitypage02
    mode: restart
    then:
      - script.execute:
          id: page_entitypage
          page_number: 2
  - id: page_entitypage03
    mode: restart
    then:
      - script.execute:
          id: page_entitypage
          page_number: 3
  - id: page_entitypage04
    mode: restart
    then:
      - script.execute:
          id: page_entitypage
          page_number: 4

  - id: !extend set_component_text
    then:
      - lambda: |-
          if (!text.empty() and current_page->state == page and current_page->state.find("entitypage") == 0) {
            // Adjusted length starts at 0
            float adjusted_length = 0.0;

            // Iterate over each character in the string
            for (char const &c: text) {
              // Check if character is a space or other specified exceptions
              if (id(display_charset)== 2 or std::string("${half_width_chars}").find(c) != std::string::npos) {
                adjusted_length += 0.5; // Count these as half
              } else {
                adjusted_length += 1.0; // Count all other characters as 1
              }
            }
            // Decide which font to use based on adjusted length
            if (adjusted_length > 8.0)
              set_component_font->execute(page.c_str(), component.c_str(), adjusted_length <= 12.0 ? 1 : 0);
          }

  - id: !extend set_var_int
    then:
      - lambda: |-
          if (component == "page_entity_value_horizontal_alignment") {
            if (id(page_entity_value_horizontal_alignment) != val and val >= 0 and val <= 2) {
              id(page_entity_value_horizontal_alignment) = static_cast<uint8_t>(val);
              page_entitypage_aligh_values->execute();
            }
            boot_progress->execute(${BOOT_STEP_PAGE_ENTITIES}, "Page Entities");
          }

  - id: !extend stop_all
    then:
      - script.stop: page_entitypage
      - script.stop: page_entitypage01
      - script.stop: page_entitypage02
      - script.stop: page_entitypage03
      - script.stop: page_entitypage04
...
