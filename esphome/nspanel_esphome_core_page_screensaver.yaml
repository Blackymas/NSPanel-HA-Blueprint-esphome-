#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page Screensaver                                                           #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_SCREENSAVER: '1UL << 23'
  PAGE_ID_SCREENSAVER: '9'

esphome:
  platformio_options:
    build_flags:
      - -D NSPANEL_HA_BLUEPRINT_CORE_PAGE_SCREENSAVER
  on_boot:
    - priority: 900.23
      then:
        - lambda: |-
            id(screensaver_text) = get_component(${PAGE_ID_SCREENSAVER}, "text");

globals:
  ##### Screensaver #####
  - id: screensaver_display_time
    type: bool
    restore_value: true
    initial_value: 'false'
  - id: screensaver_display_time_format
    type: std::string
    restore_value: true
    max_restore_data_length: 15
    initial_value: '""'
  - id: screensaver_display_time_font
    type: uint8_t
    restore_value: true
    initial_value: '6'
  - id: screensaver_display_time_color
    type: uint16_t
    restore_value: true
    initial_value: '16904'
  - id: screensaver_text
    type: DisplayComponent*
    restore_value: false

script:
  - id: !extend boot_progress_dump
    then:
      - lambda: |-
          boot_progress_dump_item->execute(${BOOT_STEP_PAGE_SCREENSAVER}, "Page Screensaver");

  - id: !extend page_changed
    then:
      - lambda: |-
          if (current_page_id == ${PAGE_ID_SCREENSAVER})
            page_screensaver->execute();

  - id: page_screensaver
    mode: restart
    then:
      - lambda: |-
          if (current_page_id == ${PAGE_ID_SCREENSAVER}) {
            disp1->send_command_printf("wakeup_page_id=%" PRIu8, get_page_id(wakeup_page_name->state.c_str()));
            if (id(screensaver_display_time)) {
              display_component_update_font->execute(id(screensaver_text), id(screensaver_display_time_font));
              display_component_update_color->execute(id(screensaver_text), id(screensaver_display_time_color));
              refresh_datetime->execute();
            }
            display_component_update_visibility->execute(id(screensaver_text), id(screensaver_display_time));
            set_brightness->execute(display_sleep_brightness->state);
          }

  - id: !extend refresh_datetime  # Defined by nspanel_esphome_core_datetime.yaml
    mode: restart
    then:
      - lambda: |-
          if (id(screensaver_display_time)) {
            std::string time_format_str = process_time_format(
                          (id(screensaver_display_time_format) == "same" or id(screensaver_display_time_format).empty())
                                            ? id(mui_time_format).c_str() : id(screensaver_display_time_format).c_str(),
                          id(time_provider).now().hour,
                          id(mui_meridiem_am).c_str(), id(mui_meridiem_pm).c_str());
            std::string meridiem_text = (id(time_provider).now().hour<12) ? id(mui_meridiem_am) : id(mui_meridiem_pm);
            if (time_format_str.find("%p") != std::string::npos)
              time_format_str.replace(time_format_str.find("%p"), sizeof("%p")-1, meridiem_text.c_str());
            display_component_update_text->execute(id(screensaver_text),
                                                    id(time_provider).now().strftime(time_format_str).c_str());
          }

  - id: !extend set_component_font_color  # Defined by nspanel_esphome_core_hw_display.yaml
    then:
      - lambda: |-
          if (page_id == ${PAGE_ID_SCREENSAVER} and component == "text")
            id(screensaver_display_time_color) = color;

  - id: !extend set_var_bool
    then:
      - lambda: |-
          if (component == "screensaver_display_time") {
            id(screensaver_display_time) = val;
            boot_progress->execute(${BOOT_STEP_PAGE_SCREENSAVER}, "Page Screensaver - Display time enabler");
            page_screensaver->execute();
          }

  - id: !extend set_var_number
    then:
      - lambda: |-
          if (component == "screensaver_display_time_font" and val >= 0 and val <= 255) {
            id(screensaver_display_time_font) = static_cast<uint8_t>(val);
            boot_progress->execute(${BOOT_STEP_PAGE_SCREENSAVER}, "Page Screensaver - Display time font");
            page_screensaver->execute();
          }

  - id: !extend set_var_string
    then:
      - lambda: |-
          if (component == "screensaver_display_time_format") {
            id(screensaver_display_time_format) = val;
            boot_progress->execute(${BOOT_STEP_PAGE_SCREENSAVER}, "Page Screensaver - Display time format");
            page_screensaver->execute();
          }

  - id: !extend stop_all
    then:
      - script.stop: page_screensaver
...
