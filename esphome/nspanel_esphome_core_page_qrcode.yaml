#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - QRCODE                                                                     #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_QRCODE: '1UL << 22'
  PAGE_ID_QRCODE: '17'

api:
  id: !extend api_server
  actions:
    # Dynamically displays QR codes on the ESPHome UI for sharing information such as WiFi passwords or website links.
    - action: qrcode
      variables:
        title: string   # Heading or title for the QR code, offering context or instructions.
        qrcode: string  # Data or URL to be encoded into the QR code.
        show: bool      # Flag to immediately display the QR code page upon action invocation.
      then:
        - lambda: |-
            id(qrcode_string) = qrcode;
            set_component_visibility->execute("home", "bt_qrcode", not id(qrcode_string).empty());
            set_component_text->execute("qrcode", "qrcode_label", title.c_str());
            if (show)
              goto_page_id->execute(${PAGE_ID_QRCODE}, true);
            boot_progress->execute(${BOOT_STEP_PAGE_QRCODE}, "Page QRcode - Action");

globals:
  - id: qrcode_enabled
    type: bool
    restore_value: false
    initial_value: 'false'

  - id: qrcode_string
    type: std::string
    restore_value: false
    max_restore_data_length: 254
    initial_value: '""'

script:
  - id: !extend boot_progress_dump
    then:
      - lambda: |-
          boot_progress_dump_item->execute(${BOOT_STEP_PAGE_QRCODE}, "Page QRcode");

  - id: !extend page_changed
    then:
      - lambda: |-
          if (id(current_page_id) == ${PAGE_ID_QRCODE})
            page_qrcode->execute();

  - id: !extend page_home
    then:
      - script.execute:
          id: set_component_visibility
          page: home
          component: bt_qrcode
          show: !lambda return id(qrcode_enabled);

  # Load the QRCode page
  - id: page_qrcode
    mode: restart
    then:
      - lambda: |-
          if (!id(qrcode_string).empty())
            disp1->qrcode(25, 25, id(qrcode_string).c_str());

  - id: !extend set_var_bool
    then:
      - lambda: |-
          if (component == "qrcode_enabled") {
            id(qrcode_enabled) = val;
            set_component_visibility->execute("home", "bt_qrcode", id(qrcode_enabled));
            if (!val) boot_progress->execute(${BOOT_STEP_PAGE_QRCODE}, "Page QRcode - Enabler");
          }

  - id: !extend stop_all
    then:
      - script.stop: page_qrcode
...
