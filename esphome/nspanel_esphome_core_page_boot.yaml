#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page keyb_num                                                              #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_BOOT: '1UL << 29'

script:
  - id: boot_log
    mode: queued
    # max_runs: 15
    parameters:
      category: string
      log_message: string
    then:
      - lambda: |-
          ESP_LOGI("script.boot_log", "%s: %s", category.c_str(), log_message.c_str());
          if (current_page->state == "boot"){
            std::string combined_log = category + ": " + log_message;
            if (combined_log.length() > 40) {
              combined_log = combined_log.substr(0, 40);
            }
            disp1->send_command_printf("log_body.txt+=\"%s\\r\"", combined_log.c_str());
            boot_log_scroll->execute();
          }

  - id: boot_log_scroll
    mode: restart
    then:
      - delay: 1s
      - lambda: |-
          disp1->send_command("click log_box,1");

  - id: !extend boot_progress
    then:
      - lambda: |-
          if (current_page->state == "boot")
            set_component_value->execute("boot", "progress", get_boot_progress_percentage());

  - id: !extend boot_progress_dump
    then:
      - lambda: |-
          boot_progress_dump_item->execute(${BOOT_STEP_PAGE_BOOT}, "Page Boot");

  - id: page_boot
    mode: restart
    then:
      - lambda: |-
          page_boot_exit->execute();
          send_command->execute("esphome=0");
          set_component_text->execute("boot", "esp_version", "FW: ${version}");  // ESPHome version
          #ifdef ARDUINO
          set_component_text->execute("boot", "sys_framework", "Framework: Arduino");
          #else
          set_component_text->execute("boot", "sys_framework", "Framework: ESP-IDF");
          #endif
          boot_progress->execute(${BOOT_STEP_PAGE_BOOT}, "Page Boot");

  - id: page_boot_exit
    mode: restart
    then:
      - wait_until:
          condition:
            - lambda: |-
                return current_page->state != "boot";
          timeout: 180s
      - lambda: |-
          if (current_page->state == "boot") {
            ESP_LOGI("script.page_boot_exit", "Jump to wake-up page: %s", wakeup_page_name->state.c_str());
            goto_page->execute(wakeup_page_name->state, true);
            set_variable_value->execute("wakeup_page_id", get_page_id(wakeup_page_name->state.c_str()));
          }

  - id: !extend stop_all
    then:
      - lambda: |-
          boot_log->stop();
          page_boot->stop();
          page_boot_exit->stop();
...
