#############################################################
##### START - INPUT #####
#############################################################

blueprint:
  name: NSPanel Configuration
  description: '# Configuration and synchronization NSPanel via Blueprint

This project allows you to configure your complete NSPanel via a Blueprint with UI.

### *That means you dont have to customize any code or change any lines in the code.*

So you have a nice graphical interface where you can build your NSPanel.
And the best thing is, the installation takes only a few minutes.


The goal was to create a version that allows everyone to use the NSpanel fully local without having to deal with programming or reading hours of documentation - *AND YES WE DID IT!!!!* ;)


üìï Full documentation and installation video is available here [NSPanel Configuration, Setup and HowTo](https://github.com/Blackymas/NSPanel_HA_Blueprint/wiki).


üìå Step by Step - [Setup Video](https://www.youtube.com/watch?v=3afPFg6kUdc)


üöÄ How to create "Issues" when I have a problem [WIKI HowTo](https://github.com/Blackymas/NSPanel_HA_Blueprint/wiki)


‚≠ê All Feature Requests can be found here [All Feature Request](https://github.com/Blackymas/NSPanel_HA_Blueprint/labels/new%20feature%20request)


üéâ Roadmap Roadmap can be found here [Roadmap](https://github.com/Blackymas/NSPanel_HA_Blueprint/labels/roadmap)


‚ÑπÔ∏è Version: v.3.2.3

'

  source_url: https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/nspnael_blueprint.yaml
  domain: automation
  homeassistant:
    min_version: 2022.11.1
  input:

    ##### MAIN NAME #####
          nspanel_name:
            name: (REQUIRED) NSPanel device
            description: '* *"SYSTEM" - Please select the ESPHome device reated to the NSPanel to be controlled by this automation*'
            default: []
            selector:
              device:
                filter:
                  - integration: esphome
                    model: esp32dev
                multiple: false

    ##### SYSTEM SETTINGS #####
          language:
            name: Language for NSPanel
            description: '* *"SYSTEM" - select the language for your NSPanel*'
            default: 'ENG'
            selector:
              select:
                mode: dropdown
                options:
                  - label: 'Bulgarian'
                    value: BGR
                  - label: 'Czech'
                    value: CZE
                  - label: 'Croatian'
                    value: HRV
                  - label: 'Danish'
                    value: DNK
                  - label: 'Dutch'
                    value: NLD
                  - label: 'English'
                    value: ENG
                  - label: 'Estonian'
                    value: EST
                  - label: 'Finnish'
                    value: FIN
                  - label: 'French'
                    value: FRA
                  - label: 'German'
                    value: DEU
                  - label: 'Greek'
                    value: GRC
                  - label: 'Hebrew'
                    value: HEB
                  - label: 'Hungarian'
                    value: HUN
                  - label: 'Indonesian'
                    value: IDN
                  - label: 'Italian'
                    value: ITA
                  - label: 'Latvian'
                    value: LVA
                  - label: 'Lithuanian'
                    value: LTU
                  - label: 'Norwegian'
                    value: NOR
                  - label: 'Polish'
                    value: POL
                  - label: 'Portuguese'
                    value: PRT
                  - label: 'Romanian'
                    value: ROU
                  - label: 'Russian'
                    value: RUS
                  - label: 'Slovak'
                    value: SVK
                  - label: 'Slovene'
                    value: SVN
                  - label: 'Spanish'
                    value: ESP
                  - label: 'Swedish'
                    value: SWE
                  - label: 'Turkish'
                    value: TUR
                  - label: 'Ukrainian'
                    value: UKR
          date_format:
            name: Date Format
            description: '* *"SYSTEM" - select the format for date to display*'
            default: '%d.%m'
            selector:
              select:
                multiple: false
                #mode: dropdown
                options:
                  - label: 'DD.MM (ex. 22.03)'
                    value: '%d.%m'
                  - label: 'DD/MM (ex. 22/03)'
                    value: '%d/%m'
                  - label: 'D/M (ex. 22/3)'
                    value: '%-d/%-m'
                  - label: 'M/D (ex. 3/22)'
                    value: '%-m/%-d'

          time_format:
            name: Time Format
            description: '* *"SYSTEM" - select the format for time to display*'
            default: '%H:%M'
            selector:
              select:
                multiple: false
                #mode: dropdown
                options:
                  - label: 'HH:MM (ex. 08:30 and 20:30)'
                    value: '%H:%M'
                  - label: 'H:MM AM/PM (ex. 8:30AM and 8:30PM)'
                    value: '%-I:%M'
                  - label: 'H:MM 24H (ex. 8:30 and 20:30)'
                    value: '%-H:%M'

          delay:
            name: Delay to avoid synchronization problem
            description: '* *"SYSTEM" - Synchronization Problems may occur due to the **NETWORK / WLAN**. To avoid this problem enter your value for the delay (milliseconds)*'
            default: '1'
            selector:
              number:
                min: 0
                max: 100

    ##### WEATHER - Page Home / Weather 01-04 #####
        ##### PLACEHOLDER ######################################################################
          placeholder01:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ WEATHER AND TEMPERATURE ‚úÖ '
            default: 'Weather and Temp'
            selector:
              select:
                options:
                  - Weather and Temp
        ##### PLACEHOLDER ######################################################################
          weather_entity:
            name: Weather entity from HA
            description: '* *"SYSTEM" - Select your weather entity.*'
            default: []
            selector:
              entity:
                domain:
                  - weather

    ##### Page Home #####
      ##### Temperature - Page Home #####
          outdoortemp:
            name: Outdoor Temperature Sensor (Optional)
            description: '* *Page "HOME" - If no outdoor sensor is available, leave the field empty and the value from your selected weather integration will be used automatically*'
            default: []
            selector:
              entity:
                domain:
                  - sensor
          home_outdoor_temp_label_color:
            name: Outdoor Temperature Sensor - LABEL COLOR (Optional)
            description: '* *Page "HOME" - Label color which should be displayed*'
            default: [255,255,255] #65535 White
            selector: &color-selector
              color_rgb:
          indoortemp:
            name: Indoor Temperature Sensor - ENTITY (Optional)
            description: '* *Page "HOME" - An indoor temperature sensor is not necessary. Leave the field empty if you want to use the temperature sensor of the NSPanel. Additionally a temperature correction for the NSPanel sensor is possible under HA Devices. So everyone can adjust the sensor exactly*'
            default: []
            selector:
              entity:
                domain:
                  - sensor
          home_indoor_temp_icon:
            name: Indoor Temperature Sensor - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed (Default mdi:thermometer)*'
            default: mdi:thermometer #E50E
            selector: &icon-selector
              icon:
          home_indoor_temp_icon_color:
            name: Indoor Temperature Sensor - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed*'
            default: [255,255,255] #65535 White
            selector: *color-selector
          home_indoor_temp_label_color:
            name: Indoor Temperature Sensor - LABEL COLOR (Optional)
            description: '* *Page "HOME" - Label color which should be displayed*'
            default: [255,255,255] #65535 White
            selector: *color-selector
      ##### Sensors - Page Home #####
        ##### PLACEHOLDER ######################################################################
          placeholder02:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ SENSOR HOME PAGE ‚úÖ '
            default: 'sensor'
            selector:
              select:
                options:
                  - sensor
        ##### PLACEHOLDER ######################################################################
          home_value01:
            name: Sensor 01 - ENTITY (Optional)
            description: '* *Page "HOME" - Entity which should be displayed*'
            default: []
            selector:
              entity:
                domain:
                  - sensor
          home_value01_icon:
            name: Sensor 01 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          home_value01_icon_color:
            name: Sensor 01 - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed*'
            default: [200,204,200] #52857 Grey super light
            selector: *color-selector
          home_value01_label_color:
            name: Sensor 01 - LABEL COLOR (Optional)
            description: '* *Page "HOME" - Label color which should be displayed*'
            default: [200,204,200] #52857 Grey super light
            selector: *color-selector
          home_value02:
            name: Sensor 02 - ENTITY (Optional)
            description: '* *Page "HOME" - Entity which should be displayed*'
            default: []
            selector:
              entity:
                domain:
                  - sensor
          home_value02_icon:
            name: Sensor 02 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          home_value02_icon_color:
            name: Sensor 02 - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed*'
            default: [200,204,200] #52857 Grey super light
            selector: *color-selector
          home_value02_label_color:
            name: Sensor 02 - LABEL COLOR (Optional)
            description: '* *Page "HOME" - Label color which should be displayed*'
            default: [200,204,200] #52857 Grey super light
            selector: *color-selector
          home_value03:
            name: Sensor 03 - ENTITY (Optional)
            description: '* *Page "HOME" - Entity which should be displayed*'
            default: []
            selector:
              entity:
                domain:
                  - sensor
          home_value03_icon:
            name: Sensor 03 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          home_value03_icon_color:
            name: Sensor 03 - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed*'
            default: [200,204,200] #52857 Grey super light
            selector: *color-selector
          home_value03_label_color:
            name: Sensor 03 - LABEL COLOR (Optional)
            description: '* *Page "HOME" - Label color which should be displayed*'
            default: [200,204,200] #52857 Grey super light
            selector: *color-selector
      ##### Chips - Page Home #####
        ##### PLACEHOLDER ######################################################################
          placeholder03:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ CHIPS ‚úÖ '
            default: 'chips'
            selector:
              select:
                options:
                  - chips
        ##### PLACEHOLDER ######################################################################
          chip01:
            name: Chip 01 - ENTITY (Optional)
            description: '* *Page "HOME" - Entity which should be displayed (ONLY light | switch | binary_sensor | sensor | with state ON/OFF)*'
            default: []
            selector: &chip-entity-selector
              entity:
                domain:
                  - binary_sensor
                  - input_boolean
                  - light
                  - sensor
                  - switch
          chip01_icon:
            name: Chip 01 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed when state ON (if not set, no icon is shown)*'
            default: []
            selector: *icon-selector
          chip01_icon_color:
            name: Chip 01 - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed*'
            default: [128,128,128] #33808 Grey light
            selector: *color-selector
          chip02:
            name: Chip 02 - ENTITY (Optional)
            description: '* *Page "HOME" - Entity which should be displayed (ONLY light | switch | binary_sensor | sensor | with state ON/OFF)*'
            default: []
            selector: *chip-entity-selector
          chip02_icon:
            name: Chip 02 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed when state ON (if not set, no icon is shown)*'
            default: []
            selector: *icon-selector
          chip02_icon_color:
            name: Chip 02 - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed*'
            default: [128,128,128] #33808 Grey light
            selector: *color-selector
          chip03:
            name: Chip 03 - ENTITY (Optional)
            description: '* *Page "HOME" - Entity which should be displayed (ONLY light | switch | binary_sensor | sensor | with state ON/OFF)*'
            default: []
            selector: *chip-entity-selector
          chip03_icon:
            name: Chip 03 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed when state ON (if not set, no icon is shown)*'
            default: []
            selector: *icon-selector
          chip03_icon_color:
            name: Chip 03 - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed*'
            default: [128,128,128] #33808 Grey light
            selector: *color-selector
          chip04:
            name: Chip 04 - ENTITY (Optional)
            description: '* *Page "HOME" - Entity which should be displayed (ONLY light | switch | binary_sensor | sensor | with state ON/OFF)*'
            default: []
            selector: *chip-entity-selector
          chip04_icon:
            name: Chip 04 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed when state ON (if not set, no icon is shown)*'
            default: []
            selector: *icon-selector
          chip04_icon_color:
            name: Chip 04 - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed*'
            default: [128,128,128] #33808 Grey light
            selector: *color-selector
          chip05:
            name: Chip 05 - ENTITY (Optional)
            description: '* *Page "HOME" - Entity which should be displayed (ONLY light | switch | binary_sensor | sensor | with state ON/OFF)*'
            default: []
            selector: *chip-entity-selector
          chip05_icon:
            name: Chip 05 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed when state ON (if not set, no icon is shown)*'
            default: []
            selector: *icon-selector
          chip05_icon_color:
            name: Chip 05 - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed*'
            default: [128,128,128] #33808 Grey light
            selector: *color-selector
          chip06:
            name: Chip 06 - ENTITY (Optional)
            description: '* *Page "HOME" - Entity which should be displayed (ONLY light | switch | binary_sensor | sensor | with state ON/OFF)*'
            default: []
            selector: *chip-entity-selector
          chip06_icon:
            name: Chip 06 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed when state ON (if not set, no icon is shown)*'
            default: []
            selector: *icon-selector
          chip06_icon_color:
            name: Chip 06 - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed*'
            default: [128,128,128] #33808 Grey light
            selector: *color-selector
          chip07:
            name: Chip 07 - ENTITY (Optional)
            description: '* *Page "HOME" - Entity which should be displayed (ONLY light | switch | binary_sensor | sensor | with state ON/OFF)*'
            default: []
            selector: *chip-entity-selector
          chip07_icon:
            name: Chip 07 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed when state ON (if not set, no icon is shown)*'
            default: []
            selector: *icon-selector
          chip07_icon_color:
            name: Chip 07 - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed*'
            default: [128,128,128] #33808 Grey light
            selector: *color-selector

    ##### Climate - Page Climate #####
        ##### PLACEHOLDER ######################################################################
          placeholder04:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ CLIMATE ‚úÖ '
            default: 'climate'
            selector:
              select:
                options:
                  - climate
        ##### PLACEHOLDER ######################################################################
          climate:
            name: Climate to control - ENTITY (Optional)
            description: '* *Page "CLIMATE" - If an entity is selected, the **"Thermostat page"** is activated and enabled. If you have **"Underfloor Heating System"** and want to switch it via the relay, you must create a separate climate in HA. See HowTo*'
            default: []
            selector:
              entity:
                domain: climate
          climate_optimistic:
            name: Climate control optimistic mode - TRUE/FALSE (Optional)
            default: true
            description: '* *Page "CLIMATE" - Depends on your climate device and HA-Integration. If optimisitc mode is **OFF** then changes are made will wait for response from device to update temperature in the display. This can cause delays or jumping values. If **ON** the script update the display immediately but apply changes after closing climate-page* '
            selector:
              boolean:
          hotwatercharge:
            name: Hot Water Charge Button - ENTITY (Optional)
            description: '* *Page "CLIMATE" - Choose your switch to turn on/off*'
            default: []
            selector:
              entity:
                domain:
                  - switch
                  - input_boolean

    ##### QR Code - Page Home/QR Code #####
        ##### PLACEHOLDER ######################################################################
          placeholder05:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ QR CODE ‚úÖ '
            default: 'qrcode'
            selector:
              select:
                options:
                  - qrcode
        ##### PLACEHOLDER ######################################################################
          qrcode_enabled:
            name: Activate QR Code - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "HOME" - activate QR Code page and QR Code Button on the home page* '
            selector:
              boolean:
          qrcode_label:
            name: QR Code page name - LABEL (Optional)
            description: '* *Page "QRCODE" - Label which should be displayed*'
            default: []
            selector:
              text: {}
          qrcode_value:
            name: QR Code content - VALUE (Optional)
            description: '* *Page "QRCODE" - Value you want to display as QR code*'
            default: []
            selector:
              text: {}
          home_button05_icon:
            name: QR Code - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed (Default mdi:qrcode-scan)*'
            default: mdi:qrcode-scan #E432
            selector: *icon-selector
          home_button05_icon_color:
            name: QR Code - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed (default color is set)*'
            default: [200,204,200] #52857 Grey super light
            selector: *color-selector

    ##### Page Home - Hardware Buttons  #####
        ##### PLACEHOLDER ######################################################################
          placeholder06:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ HARDWARE BUTTONS ‚úÖ '
            default: 'hardwarebuttons'
            selector:
              select:
                options:
                  - hardwarebuttons
        ##### PLACEHOLDER ######################################################################
          hold_delay:
            name: Delay for HW-Button hold in seconds - VALUE
            description: '* *"SYSTEM" - Time in seconds to detect a hold*'
            default: 1.0
            selector:
                number:
                  min: 1.0
                  max: 10.0
                  step: 1.0
                  unit_of_measurement: seconds
          relay_1_local_fallback:
            name: Activate relay 1 local fallback - TRUE/FALSE (Optional)
            default: false
            description: '* *"SYSTEM" - activate this to use left button to toggle relay 1 if display is offline* '
            selector:
              boolean:
          left_button_entity:
            name: Left hardware button - ENTITY (Optional)
            description: '* *"SYSTEM" - Entity which should be switched*'
            default: []
            selector: &hardware-button-selector
              entity:
                domain:
                  - light
                  - switch
                  - input_boolean
                  - cover
                  - automation
                  - button
                  - input_button
                  - scene
                  - script
                  - fan
          left_button_name:
            name: Left hardware button name - LABEL (Optional)
            description: '* *Page "HOME" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          left_button_hold_select:
            name: Left hardware button hold assignment - VALUE (Optional)
            description: '* *"SYSTEM" - select what shold happen on hold*'
            default: 'Default'
            selector: &hardware-button-hold-selector
              select:
                options:
                  - Default
                  - Custom Action
          left_button_hold_custom_action:
            name: Left hardware button custom hold action - VALUE (Optional)
            description: '*"SYSTEM" - The action(s) to launch on hold**'
            default: []
            selector:
              action:
          left_button_color:
            name: Left hardware button - LABEL COLOR (Optional)
            description: '* *Page "HOME" - LABEL color which should be displayed*'
            default: [200,204,200] #52857 Grey super light
            selector: *color-selector
          relay_2_local_fallback:
            name: Activate relay 2 local fallback - TRUE/FALSE (Optional)
            default: false
            description: '* *"SYSTEM" - activate this to use right button to toggle relay 2 if display is offline* '
            selector:
              boolean:
          right_button_entity:
            name: Right hardware button - ENTITY (Optional)
            description: '* *"SYSTEM" - Entity which should be switched*'
            default: []
            selector: *hardware-button-selector
          right_button_name:
            name: Right hardware button name - LABEL (Optional)
            description: '* *Page "HOME" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          right_button_hold_select:
            name: Right button hold assignment - VALUE (Optional)
            description: '* *"SYSTEM" - select what shold happen on hold*'
            default: 'Default'
            selector: *hardware-button-hold-selector
          right_button_hold_custom_action:
            name: Right button custom hold action - VALUE (Optional)
            description: '*"SYSTEM" - The action(s) to launch on hold**'
            default: []
            selector:
              action:
          right_button_color:
            name: Right hardware button - LABEL COLOR (Optional)
            description: '* *Page "HOME" - LABEL color which should be displayed*'
            default: [200,204,200] #52857 Grey super light
            selector: *color-selector

    ##### Button pages #####
      ##### Button page - Labels #####
        ##### PLACEHOLDER ######################################################################
          placeholder17:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ BUTTON PAGES LABELS ‚úÖ '
            default: 'Button pages labels'
            selector:
              select:
                options:
                  - Button pages labels
        ##### PLACEHOLDER ######################################################################
          button_page01_label:
            name: Button page 01 name - LABEL (Optional)
            description: '* *Page "ButtonPage01" - Label which should be displayed*'
            default: []
            selector:
              text: {}
          button_page02_label:
            name: Button page 02 name - LABEL (Optional)
            description: '* *Page "ButtonPage02" - Label which should be displayed*'
            default: []
            selector:
              text: {}
          button_page03_label:
            name: Button page 03 name - LABEL (Optional)
            description: '* *Page "ButtonPage03" - Label which should be displayed*'
            default: []
            selector:
              text: {}
          button_page04_label:
            name: Button page 04 name - LABEL (Optional)
            description: '* *Page "ButtonPage04" - Label which should be displayed*'
            default: []
            selector:
              text: {}
      ##### Button page 01 #####
        ##### PLACEHOLDER ######################################################################
          placeholder07:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ BUTTON PAGES 01 ‚úÖ '
            default: 'buttonpage01'
            selector:
              select:
                options:
                  - buttonpage01
        ##### PLACEHOLDER ######################################################################
          entity01:
            name: Button 01 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE01" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: &button-entity-selector
              entity:
                domain:
                  - light
                  - switch
                  - cover
                  - input_boolean
                  - automation
                  - button
                  - input_button
                  - scene
                  - person
                  - script
                  - binary_sensor
                  - fan
                  - climate
          entity01_name:
            name: Button 01 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE01" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity01_icon:
            name: Button 01 - ICON (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity01_icon_color:
            name: Button 01 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity01_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE01" - Ask for confirmation to execute **Button01** action*'
            selector:
              boolean:
          entity02:
            name: Button 02 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE01" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity02_name:
            name: Button 02 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE01" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity02_icon:
            name: Button 02 - ICON (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity02_icon_color:
            name: Button 02 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity02_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE01" - Ask for confirmation to execute **Button02** action*'
            selector:
              boolean:
          entity03:
            name: Button 03 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE01" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity03_name:
            name: Button 03 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE01" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity03_icon:
            name: Button 03 - ICON (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity03_icon_color:
            name: Button 03 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity03_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE01" - Ask for confirmation to execute **Button03** action*'
            selector:
              boolean:
          entity04:
            name: Button 04 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE01" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity04_name:
            name: Button 04 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE01" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity04_icon:
            name: Button 04 - ICON (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity04_icon_color:
            name: Button 04 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity04_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE01" - Ask for confirmation to execute **Button04** action*'
            selector:
              boolean:
          entity05:
            name: Button 05 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE01" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity05_name:
            name: Button 05 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE01" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity05_icon:
            name: Button 05 - ICON (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity05_icon_color:
            name: Button 05 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity05_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE01" - Ask for confirmation to execute **Button05** action*'
            selector:
              boolean:
          entity06:
            name: Button 06 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE01" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity06_name:
            name: Button 06 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE01" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity06_icon:
            name: Button 06 - ICON (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity06_icon_color:
            name: Button 06 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity06_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE01" - Ask for confirmation to execute **Button06** action*'
            selector:
              boolean:
          entity07:
            name: Button 07 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE01" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity07_name:
            name: Button 07 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE01" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity07_icon:
            name: Button 07 - ICON (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity07_icon_color:
            name: Button 07 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity07_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE01" - Ask for confirmation to execute **Button07** action*'
            selector:
              boolean:
          entity08:
            name: Button 08 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE01" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity08_name:
            name: Button 08 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE01" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity08_icon:
            name: Button 08 - ICON (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity08_icon_color:
            name: Button 08 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE01" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity08_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE01" - Ask for confirmation to execute **Button08** action*'
            selector:
              boolean:
      ##### Button page 02 #####
        ##### PLACEHOLDER ######################################################################
          placeholder08:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ BUTTON PAGE 02 ‚úÖ '
            default: 'buttonpage02'
            selector:
              select:
                options:
                  - buttonpage02
        ##### PLACEHOLDER ######################################################################
          entity09:
            name: Button 09 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE02" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity09_name:
            name: Button 09 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE02" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity09_icon:
            name: Button 09 - ICON (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity09_icon_color:
            name: Button 09 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity09_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE02" - Ask for confirmation to execute **Button09** action*'
            selector:
              boolean:
          entity10:
            name: Button 10 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE02" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity10_name:
            name: Button 10 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE02" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity10_icon:
            name: Button 10 - ICON (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity10_icon_color:
            name: Button 10 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity10_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE02" - Ask for confirmation to execute **Button10** action*'
            selector:
              boolean:
          entity11:
            name: Button 11 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE02" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity11_name:
            name: Button 11 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE02" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity11_icon:
            name: Button 11 - ICON (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity11_icon_color:
            name: Button 11 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity11_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE02" - Ask for confirmation to execute **Button11** action*'
            selector:
              boolean:
          entity12:
            name: Button 12 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE02" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity12_name:
            name: Button 12 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE02" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity12_icon:
            name: Button 12 - ICON (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity12_icon_color:
            name: Button 12 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity12_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE02" - Ask for confirmation to execute **Button12** action*'
            selector:
              boolean:
          entity13:
            name: Button 13 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE02" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity13_name:
            name: Button 13 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE02" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity13_icon:
            name: Button 13 - ICON (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity13_icon_color:
            name: Button 13 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity13_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE02" - Ask for confirmation to execute **Button13** action*'
            selector:
              boolean:
          entity14:
            name: Button 14 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE02" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity14_name:
            name: Button 14 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE02" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity14_icon:
            name: Button 14 - ICON (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity14_icon_color:
            name: Button 14 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity14_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE02" - Ask for confirmation to execute **Button14** action*'
            selector:
              boolean:
          entity15:
            name: Button 15 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE02" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity15_name:
            name: Button 15 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE02" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity15_icon:
            name: Button 15 - ICON (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity15_icon_color:
            name: Button 15 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity15_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE02" - Ask for confirmation to execute **Button15** action*'
            selector:
              boolean:
          entity16:
            name: Button 16 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE02" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity16_name:
            name: Button 16 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE02" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity16_icon:
            name: Button 16 - ICON (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity16_icon_color:
            name: Button 16 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE02" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity16_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE02" - Ask for confirmation to execute **Button16** action*'
            selector:
              boolean:
      ##### Button page 03 #####
        ##### PLACEHOLDER ######################################################################
          placeholder09:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ BUTTON PAGE 03 ‚úÖ '
            default: 'buttonpage03'
            selector:
              select:
                options:
                  - buttonpage03
        ##### PLACEHOLDER ######################################################################
          entity17:
            name: Button 17 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE03" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity17_name:
            name: Button 17 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE03" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity17_icon:
            name: Button 17 - ICON (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity17_icon_color:
            name: Button 17 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity17_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE03" - Ask for confirmation to execute **Button17** action*'
            selector:
              boolean:
          entity18:
            name: Button 18 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE03" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity18_name:
            name: Button 18 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE03" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity18_icon:
            name: Button 18 - ICON (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity18_icon_color:
            name: Button 18 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity18_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE03" - Ask for confirmation to execute **Button18** action*'
            selector:
              boolean:
          entity19:
            name: Button 19 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE03" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity19_name:
            name: Button 19 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE03" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity19_icon:
            name: Button 19 - ICON (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity19_icon_color:
            name: Button 19 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity19_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE03" - Ask for confirmation to execute **Button19** action*'
            selector:
              boolean:
          entity20:
            name: Button 20 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE03" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity20_name:
            name: Button 20 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE03" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity20_icon:
            name: Button 20 - ICON (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity20_icon_color:
            name: Button 20 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity20_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE03" - Ask for confirmation to execute **Button20** action*'
            selector:
              boolean:
          entity21:
            name: Button 21 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE03" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity21_name:
            name: Button 21 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE03" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity21_icon:
            name: Button 21 - ICON (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity21_icon_color:
            name: Button 21 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity21_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE03" - Ask for confirmation to execute **Button21** action*'
            selector:
              boolean:
          entity22:
            name: Button 22 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE03" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity22_name:
            name: Button 22 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE03" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity22_icon:
            name: Button 22 - ICON (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity22_icon_color:
            name: Button 22 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity22_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE03" - Ask for confirmation to execute **Button22** action*'
            selector:
              boolean:
          entity23:
            name: Button 23 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE03" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity23_name:
            name: Button 23 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE03" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity23_icon:
            name: Button 23 - ICON (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity23_icon_color:
            name: Button 23 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity23_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE03" - Ask for confirmation to execute **Button23** action*'
            selector:
              boolean:
          entity24:
            name: Button 24 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE03" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity24_name:
            name: Button 24 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE03" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity24_icon:
            name: Button 24 - ICON (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity24_icon_color:
            name: Button 24 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE03" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity24_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE03" - Ask for confirmation to execute **Button24** action*'
            selector:
              boolean:
      ##### Button page 04 #####
        ##### PLACEHOLDER ######################################################################
          placeholder10:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ BUTTON PAGE 04 ‚úÖ '
            default: 'buttonpage04'
            selector:
              select:
                options:
                  - buttonpage04
        ##### PLACEHOLDER ######################################################################
          entity25:
            name: Button 25 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE04" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity25_name:
            name: Button 25 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE04" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity25_icon:
            name: Button 25 - ICON (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity25_icon_color:
            name: Button 25 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity25_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE04" - Ask for confirmation to execute **Button25** action*'
            selector:
              boolean:
          entity26:
            name: Button 26 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE04" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity26_name:
            name: Button 26 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE04" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity26_icon:
            name: Button 26 - ICON (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity26_icon_color:
            name: Button 26 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity26_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE04" - Ask for confirmation to execute **Button26** action*'
            selector:
              boolean:
          entity27:
            name: Button 27 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE04" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity27_name:
            name: Button 27 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE04" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity27_icon:
            name: Button 27 - ICON (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity27_icon_color:
            name: Button 27 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity27_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE04" - Ask for confirmation to execute **Button27** action*'
            selector:
              boolean:
          entity28:
            name: Button 28 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE04" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity28_name:
            name: Button 28 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE04" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity28_icon:
            name: Button 28 - ICON (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity28_icon_color:
            name: Button 28 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity28_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE04" - Ask for confirmation to execute **Button28** action*'
            selector:
              boolean:
          entity29:
            name: Button 29 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE04" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity29_name:
            name: Button 29 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE04" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity29_icon:
            name: Button 29 - ICON (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity29_icon_color:
            name: Button 29 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity29_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE04" - Ask for confirmation to execute **Button29** action*'
            selector:
              boolean:
          entity30:
            name: Button 30 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE04" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity30_name:
            name: Button 30 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE04" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity30_icon:
            name: Button 30 - ICON (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity30_icon_color:
            name: Button 30 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity30_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE04" - Ask for confirmation to execute **Button30** action*'
            selector:
              boolean:
          entity31:
            name: Button 31 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE04" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity31_name:
            name: Button 31 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE04" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector:
              text: {}
          entity31_icon:
            name: Button 31 - ICON (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector: *icon-selector
          entity31_icon_color:
            name: Button 31 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity31_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE04" - Ask for confirmation to execute **Button31** action*'
            selector:
              boolean:
          entity32:
            name: Button 32 - ENTITY (Optional)
            description: '* *Page "BUTTONPAGE04" - Entity which should be switched (ONLY light | switch | cover | input_boolean | automation | button | input_button | scene | person | script | binary_sensor | fan | climate)*'
            default: []
            selector: *button-entity-selector
          entity32_name:
            name: Button 32 name - LABEL (Optional)
            description: '* *Page "BUTTONPAGE04" - Label which should be displayed (10 characters are supported)*'
            default: []
            selector: *icon-selector
          entity32_icon:
            name: Button 32 - ICON (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon which should be displayed (Default - an icon matching the entity will be set automatically)*'
            default: []
            selector:
              text: {}
          entity32_icon_color:
            name: Button 32 - ICON COLOR (Optional)
            description: '* *Page "BUTTONPAGE04" - Icon color which should be displayed when button is on*'
            default: [0,128,248] #1055 Blue
            selector: *color-selector
          entity32_confirm:
            name: Confirm execution of the button press - TRUE/FALSE (Optional)
            default: false
            description: '* *Page "BUTTONPAGE04" - Ask for confirmation to execute **Button32** action*'
            selector:
              boolean:

    ##### Entity pages #####
      ##### Entity pages - Config #####
        ##### PLACEHOLDER ######################################################################
          placeholder11:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ ENTITY PAGE SETTINGS ‚úÖ '
            default: 'entitypage'
            selector:
              select:
                options:
                  - entitypage
        ##### PLACEHOLDER ######################################################################
          entitypages_enabled:
            name: Activate entity page - TRUE/FALSE (Optional)
            default: false
            description: '* *"SYSTEM" - activate entity page and entity page Button on the home page* '
            selector:
              boolean:
          home_button06_icon:
            name: Entity page - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed (Default mdi:format-list-bulleted-square) *'
            default: mdi:format-list-bulleted-square #EDCF
            selector: *icon-selector
          home_button06_icon_color:
            name: Entity page - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed (default color is set)*'
            default: [200,204,200] #52857 Grey super light
            selector: *color-selector
      ##### Entity pages - Labels #####
        ##### PLACEHOLDER ######################################################################
          placeholder12:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ ENTITY PAGE 01 ‚úÖ '
            default: 'entitypage01'
            selector:
              select:
                options:
                  - entitypage01
        ##### PLACEHOLDER ######################################################################
          entity_page01_label:
            name: Entity page 01 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE01" - Label which should be displayed*'
            default: []
            selector:
              text: {}
          entity_page02_label:
            name: Entity page 02 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE02" - Label which should be displayed*'
            default: []
            selector:
              text: {}
          entity_page03_label:
            name: Entity page 03 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE03" - Label which should be displayed*'
            default: []
            selector:
              text: {}
          entity_page04_label:
            name: Entity page 04 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE04" - Label which should be displayed*'
            default: []
            selector:
              text: {}
      ##### Entity page 01 - Entities #####
          entities_entity01:
            name: Entity 01 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE01" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity01_name:
            name: Entity 01 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE01" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity01_icon:
            name: Entity 01 - ICON (Optional)
            description: '* *Page "ENTITYPAGE01" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity02:
            name: Entity 02 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE01" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity02_name:
            name: Entity 02 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE01" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity02_icon:
            name: Entity 02 - ICON (Optional)
            description: '* *Page "ENTITYPAGE01" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity03:
            name: Entity 03 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE01" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity03_name:
            name: Entity 03 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE01" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity03_icon:
            name: Entity 03 - ICON (Optional)
            description: '* *Page "ENTITYPAGE01" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity04:
            name: Entity 04 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE01" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity04_name:
            name: Entity 04 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE01" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity04_icon:
            name: Entity 04 - ICON (Optional)
            description: '* *Page "ENTITYPAGE01" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity05:
            name: Entity 05 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE01" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity05_name:
            name: Entity 05 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE01" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity05_icon:
            name: Entity 05 - ICON (Optional)
            description: '* *Page "ENTITYPAGE01" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity06:
            name: Entity 06 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE01" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity06_name:
            name: Entity 06 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE01" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity06_icon:
            name: Entity 06 - ICON (Optional)
            description: '* *Page "ENTITYPAGE01" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity07:
            name: Entity 07 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE01" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity07_name:
            name: Entity 07 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE01" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity07_icon:
            name: Entity 07 - ICON (Optional)
            description: '* *Page "ENTITYPAGE01" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity08:
            name: Entity 08 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE01" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity08_name:
            name: Entity 08 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE01" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity08_icon:
            name: Entity 08 - ICON (Optional)
            description: '* *Page "ENTITYPAGE01" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
      ##### Entity page 02 - Entities #####
        ##### PLACEHOLDER ######################################################################
          placeholder13:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ ENTITY PAGE 02 ‚úÖ '
            default: 'entitypage02'
            selector:
              select:
                options:
                  - entitypage02
        ##### PLACEHOLDER ######################################################################
          entities_entity09:
            name: Entity 09 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE02" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity09_name:
            name: Entity 09 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE02" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity09_icon:
            name: Entity 09 - ICON (Optional)
            description: '* *Page "ENTITYPAGE02" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity10:
            name: Entity 10 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE02" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity10_name:
            name: Entity 10 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE02" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity10_icon:
            name: Entity 10 - ICON (Optional)
            description: '* *Page "ENTITYPAGE02" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity11:
            name: Entity 11 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE02" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity11_name:
            name: Entity 11 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE02" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity11_icon:
            name: Entity 11 - ICON (Optional)
            description: '* *Page "ENTITYPAGE02" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity12:
            name: Entity 12 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE02" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity12_name:
            name: Entity 12 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE02" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity12_icon:
            name: Entity 12 - ICON (Optional)
            description: '* *Page "ENTITYPAGE02" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity13:
            name: Entity 13 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE02" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity13_name:
            name: Entity 13 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE02" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity13_icon:
            name: Entity 13 - ICON (Optional)
            description: '* *Page "ENTITYPAGE02" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity14:
            name: Entity 14 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE02" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity14_name:
            name: Entity 14 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE02" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity14_icon:
            name: Entity 14 - ICON (Optional)
            description: '* *Page "ENTITYPAGE02" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity15:
            name: Entity 15 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE02" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity15_name:
            name: Entity 15 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE02" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity15_icon:
            name: Entity 15 - ICON (Optional)
            description: '* *Page "ENTITYPAGE02" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity16:
            name: Entity 16 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE02" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity16_name:
            name: Entity 16 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE02" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity16_icon:
            name: Entity 16 - ICON (Optional)
            description: '* *Page "ENTITYPAGE02" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
      ##### Entity page 03 - Entities #####
        ##### PLACEHOLDER ######################################################################
          placeholder14:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ ENTITY PAGE 03 ‚úÖ '
            default: 'entitypage03'
            selector:
              select:
                options:
                  - entitypage03
        ##### PLACEHOLDER ######################################################################
          entities_entity17:
            name: Entity 17 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE03" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity17_name:
            name: Entity 17 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE03" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity17_icon:
            name: Entity 17 - ICON (Optional)
            description: '* *Page "ENTITYPAGE03" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity18:
            name: Entity 18 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE03" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity18_name:
            name: Entity 18 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE03" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity18_icon:
            name: Entity 18 - ICON (Optional)
            description: '* *Page "ENTITYPAGE03" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity19:
            name: Entity 19 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE03" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity19_name:
            name: Entity 19 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE03" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity19_icon:
            name: Entity 19 - ICON (Optional)
            description: '* *Page "ENTITYPAGE03" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity20:
            name: Entity 20 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE03" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity20_name:
            name: Entity 20 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE03" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity20_icon:
            name: Entity 20 - ICON (Optional)
            description: '* *Page "ENTITYPAGE03" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity21:
            name: Entity 21 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE03" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity21_name:
            name: Entity 21 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE03" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity21_icon:
            name: Entity 21 - ICON (Optional)
            description: '* *Page "ENTITYPAGE03" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity22:
            name: Entity 22 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE03" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity22_name:
            name: Entity 22 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE03" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity22_icon:
            name: Entity 22 - ICON (Optional)
            description: '* *Page "ENTITYPAGE03" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity23:
            name: Entity 23 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE03" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity23_name:
            name: Entity 23 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE03" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity23_icon:
            name: Entity 23 - ICON (Optional)
            description: '* *Page "ENTITYPAGE03" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity24:
            name: Entity 24 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE03" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity24_name:
            name: Entity 24 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE03" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity24_icon:
            name: Entity 24 - ICON (Optional)
            description: '* *Page "ENTITYPAGE03" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
      ##### Entity page 04 - Entities #####
        ##### PLACEHOLDER ######################################################################
          placeholder15:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ ENTITY PAGE 04 ‚úÖ '
            default: 'entitypage04'
            selector:
              select:
                options:
                  - entitypage04
        ##### PLACEHOLDER ######################################################################
          entities_entity25:
            name: Entity 25 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE04" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity25_name:
            name: Entity 25 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE04" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity25_icon:
            name: Entity 25 - ICON (Optional)
            description: '* *Page "ENTITYPAGE04" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity26:
            name: Entity 26 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE04" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity26_name:
            name: Entity 26 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE04" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity26_icon:
            name: Entity 26 - ICON (Optional)
            description: '* *Page "ENTITYPAGE04" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity27:
            name: Entity 27 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE04" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity27_name:
            name: Entity 27 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE04" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity27_icon:
            name: Entity 27 - ICON (Optional)
            description: '* *Page "ENTITYPAGE04" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity28:
            name: Entity 28 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE04" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity28_name:
            name: Entity 28 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE04" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity28_icon:
            name: Entity 28 - ICON (Optional)
            description: '* *Page "ENTITYPAGE04" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity29:
            name: Entity 29 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE04" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity29_name:
            name: Entity 29 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE04" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity29_icon:
            name: Entity 29 - ICON (Optional)
            description: '* *Page "ENTITYPAGE04" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity30:
            name: Entity 30 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE04" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity30_name:
            name: Entity 30 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE04" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity30_icon:
            name: Entity 30 - ICON (Optional)
            description: '* *Page "ENTITYPAGE04" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity31:
            name: Entity 31 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE04" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity31_name:
            name: Entity 31 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE04" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity31_icon:
            name: Entity 31 - ICON (Optional)
            description: '* *Page "ENTITYPAGE04" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector
          entities_entity32:
            name: Entity 32 - ENTITY (Optional)
            description: '* *Page "ENTITYPAGE04" - entity which should be displayed*'
            default: []
            selector:
              entity:
          entities_entity32_name:
            name: Entity 32 name - LABEL (Optional)
            description: '* *Page "ENTITYPAGE04" - Label which should be displayed (replaces the **"friendly_name"** of the entity)*'
            default: []
            selector:
              text: {}
          entities_entity32_icon:
            name: Entity 32 - ICON (Optional)
            description: '* *Page "ENTITYPAGE04" - Icon which should be displayed (if not set, it would be used an icon from attributes, if available, or no icon is shown)*'
            default: []
            selector: *icon-selector

    ##### General Custom Design #####
        ##### PLACEHOLDER ######################################################################
          placeholder16:
            name: 'Is only a placeholder without function for a better overview'
            description: '# ‚úÖ CUSTOM CONFIGURATION ‚úÖ '
            default: 'configuration'
            selector:
              select:
                options:
                  - configuration
        ##### PLACEHOLDER ######################################################################
          home_button04_icon:
            name: Notification - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed (Default mdi:email) *'
            default: mdi:email # Óá≠  #E1ED
            selector: *icon-selector
          home_button04_icon_color01:
            name: Notification read - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed (default color is set)*'
            default: [200,204,200] #52857 Grey super light  #Grey super light
            selector: *color-selector
          home_button04_icon_color02:
            name: Notification unread - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed (default color is set)*'
            default: [248,0,0] #63488 Red
            selector: *color-selector
          relay01_icon:
            name: Relay 01 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed (Default mdi:numeric-1-box-outline) *'
            default: mdi:numeric-1-box-outline # Óé•  #E3A5
            selector: *icon-selector
          relay01_icon_color:
            name: Relay 01 - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed (default color is set)*'
            default: [128,128,128] #33808 Grey light
            selector: *color-selector
          relay02_icon:
            name: Relay 02 - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed (Default mdi:numeric-2-box-outline) *'
            default: mdi:numeric-2-box-outline # Óé®  #E3A8
            selector: *icon-selector
          relay02_icon_color:
            name: Relay - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed (default color is set)*'
            default: [128,128,128] #33808 Grey light
            selector: *color-selector
          thermostat_icon:
            name: Thermostat - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed (Default mdi:thermometer) *'
            default: mdi:thermometer # Óîé  #E50E
            selector: *icon-selector
          heat_icon:
            name: Thermostat - ICON (Optional)
            description: '* *Page "HOME" - Icon which should be displayed (Default mdi:thermometer-lines) *'
            default: mdi:thermometer-lines # Óîè  #E50F
            selector: *icon-selector
          thermostat_icon_color:
            name: Thermostat / Heat - ICON COLOR (Optional)
            description: '* *Page "HOME" - Icon color which should be displayed (default color is set)*'
            default: [128,128,128] #33808 Grey light
            selector: *color-selector
          time_label_color:
            name: Time - LABEL COLOR (Optional)
            description: '* *Page "HOME" - Label color which should be displayed (default color is set)*'
            default: [255,255,255] #65535 White
            selector: *color-selector
          date_label_color:
            name: Date - LABEL COLOR (Optional)
            description: '* *Page "HOME" - Label color which should be displayed (default color is set)*'
            default: [255,255,255] #65535 White
            selector: *color-selector

        ###### Muss noch Raus ###############################################################################################################################################################################
          hotwatertemp:
            name: Hot Water Temperature Sensor (Optional)
            description: '* *Choose your hot water sensor*'
            default: []
            selector:
              entity:
                domain:
                  - sensor
          tft_path:
            name: Nextion TFT File Folder (Optional)
            description: '* *TFT Path where the Nextion TFT File is stored. Attention! The **"Folder-Watcher"** must also be configured in the configuration.yaml. **Only necessary for manual upload of TFT file in ESPHome Advaced mode.** See HowTo*'
            default: []
            selector:
              text: {}
          sync_value_ha:
            name: Synchronization of all values (Optional)
            description: '* *Synchronization of values between HA and NSPanel for Lightsetting and Coversetting Page -> Maybe causes number jumps*'
            default: 'select_no'
            selector: &sync-selector-bool
              select:
                options:
                  - label: 'No'
                    value: select_no
                  - label: 'Yes'
                    value: select_yes
          sync_slider_ha:
            name: Synchronization of all Sliders (Optional)
            description: '* *Synchronization of sliders between HA and NSPanel for Lightsetting and Coversetting Page -> Maybe causes flickering on the Slider*'
            default: 'select_no'
            selector: *sync-selector-bool

#############################################################
##### CLOSE - INPUT #####
#############################################################

mode: parallel
max: 50

trace:
  stored_traces: 10

#############################################################
##### START - Variables #####
#############################################################

trigger_variables:
  nspanel_name_temp: !input "nspanel_name"
  nspanel_entities: "{{ device_entities(nspanel_name_temp) }}"
  nspanel_name: >
    {% if nspanel_entities | count > 0 %}{{ (nspanel_entities | selectattr(None, 'search', '_nextion_inited') | list | first).split('.')[1].split('_nextion_inited')[0] }}
    {% elif nspanel_name_temp is string %}{{ nspanel_name_temp | replace('-','_') | replace(' ','_') | replace('___','_') | replace('__','_') }}
    {% endif %}
  left_button: "binary_sensor.{{ nspanel_name }}_left_button"
  right_button: "binary_sensor.{{ nspanel_name }}_right_button"
  nextion_inited: "switch.{{ nspanel_name }}_nextion_inited"
  nspanelevent: "sensor.{{ nspanel_name }}_nspanel_event"
  hotwatercharge: !input "hotwatercharge"
  display_target_temperature: "sensor.{{ nspanel_name }}_display_target_temperature"
  relay01_entity: "switch.{{ nspanel_name }}_relay_1"
  relay02_entity: "switch.{{ nspanel_name }}_relay_2"
  nspaneltemp: "sensor.{{ nspanel_name }}_temperature"
  settings_entity: "sensor.{{ nspanel_name }}_settings_entity"
  reboot_button: "button.{{ nspanel_name }}_restart"

  ##### notification Trigger #####
  notification_unread: "switch.{{ nspanel_name }}_notification_unread"
  notification_text: "sensor.{{ nspanel_name }}_notification_text"
  notification_label: "sensor.{{ nspanel_name }}_notification_label"

variables:
  ##### GENERAL #####
  blueprint_version: "3.2.3"
  language: !input "language"
  date_format: !input "date_format"
  time_format: !input "time_format"
  time: "{{ as_timestamp(now()) | timestamp_custom(time_format) }}"
  meridiem: "{{ as_timestamp(now()) | timestamp_custom('%p') if time_format == '%-I:%M' }}"
  sun_is_up: "{{ is_state('sun.sun', 'above_horizon') }}"

  notification_sound: "switch.{{ nspanel_name }}_notification_sound"
  confirmation_message: "switch.{{ nspanel_name }}_confirmation_message"

  nspanel_event: '{{ states(nspanelevent) if nspanelevent is string and states(nspanelevent) not in ["unavailable", "unknown", None] else { "page": "unknown", "component": "unknown", "value": "unknown" } }}'


  ##### Nextion dict ####
  nextion:
    colors:
      blue: "1055"              # rgb(0,128,248)
      grey_dark: "10597"        # rgb(40,44,40)
      grey_light: "33808"       # rgb(128,128,128)
      grey_super_light: "52857" # rgb(200,204,200)
      red: "63488"              # rgb(248,0,0)
      white: "65535"            # rgb(255,255,255)
      yellow: "65472"           # rgb(248,248,0)
    commands:
      text_printf: "esphome.{{ nspanel_name }}_send_command_text_printf"
      value: "esphome.{{ nspanel_name }}_send_command_value"
      printf: "esphome.{{ nspanel_name }}_send_command_printf"
      font_color: "esphome.{{ nspanel_name }}_send_command_font_color"
      background_color: "esphome.{{ nspanel_name }}_send_command_background_color"
      thermostat_cycle: "esphome.{{ nspanel_name }}_send_thermostat_cycle_state"
      notification_show: "esphome.{{ nspanel_name }}_notification_show"
      notification_clear: "esphome.{{ nspanel_name }}_notification_clear"
      play_rtttl: "esphome.{{ nspanel_name }}_play_rtttl"
      set_settings_entity: "esphome.{{ nspanel_name }}_set_settings_entity"
      show_all: "esphome.{{ nspanel_name }}_send_command_show_all"
      tft_upload: "esphome.{{ nspanel_name }}_upload_tft"
      set_button: "esphome.{{ nspanel_name }}_set_button"
      set_entity: "esphome.{{ nspanel_name }}_set_entity"
    icons:
      battery: "\U0000F2A1" #F2A1
      blank:   "\U0000FFFF" #blank macbook bug
      buttons:
        automation:    "\U0000F6FC" #F6FC
        binary_sensor: "\U0000E7C0" #E7C0
        button:        "\U0000ED76" #ED76
        climate:       "\U0000E392" #E392
        cover:         "\U0000E0AB" #E0AB
        fan:           "\U0000E20F" #E20F
        input_boolean: "\U0000EA19" #EA19
        input_button:  "\U0000F2A7" #F2A7
        light:         "\U0000E334" #E334
        person:        "\U0000E003" #E003
        scene:         "\U0000EE0B" #EE0B
        script:        "\U0000F45D" #F45D
        switch:        "\U0000E97D" #E97D
        unknown:       "\U0000E027" #E027
      weather:
        lightning: "\U0000E592" #E592
        protect:   "\U0000F05C" #F05C
        rain:      "\U0000E595" #E595
        sun:       "\U0000E5A7" #E5A7
        wind:      "\U0000E59C" #E59C
        gauge:     "\U0000E299" #E299
      all: { "ab-testing": "\U0000E1C8", "abjad-arabic": "\U0000F327", "abjad-hebrew": "\U0000F328", "abugida-devanagari": "\U0000F329", "abugida-thai": "\U0000F32A", "access-point": "\U0000E002", "access-point-network": "\U0000E001", "access-point-network-off": "\U0000EBE0", "account": "\U0000E003", "account-alert": "\U0000E004", "account-alert-outline": "\U0000EB4F", "account-arrow-left": "\U0000EB50", "account-arrow-left-outline": "\U0000EB51", "account-arrow-right": "\U0000EB52", "account-arrow-right-outline": "\U0000EB53", "account-box": "\U0000E005", "account-box-multiple": "\U0000E933", "account-box-multiple-outline": "\U0000F009", "account-box-outline": "\U0000E006", "account-cancel": "\U0000F2DE", "account-cancel-outline": "\U0000F2DF", "account-cash": "\U0000F096", "account-cash-outline": "\U0000F097", "account-check": "\U0000E007", "account-check-outline": "\U0000EBE1", "account-child": "\U0000EA88", "account-child-circle": "\U0000EA89", "account-child-outline": "\U0000F0C7", "account-circle": "\U0000E008", "account-circle-outline": "\U0000EB54", "account-clock": "\U0000EB55", "account-clock-outline": "\U0000EB56", "account-cog": "\U0000F36F", "account-cog-outline": "\U0000F370", "account-convert": "\U0000E009", "account-convert-outline": "\U0000F300", "account-cowboy-hat": "\U0000EE9A", "account-details": "\U0000E630", "account-details-outline": "\U0000F371", "account-edit": "\U0000E6BB", "account-edit-outline": "\U0000EFFA", "account-group": "\U0000E848", "account-group-outline": "\U0000EB57", "account-hard-hat": "\U0000E5B4", "account-heart": "\U0000E898", "account-heart-outline": "\U0000EBE2", "account-key": "\U0000E00A", "account-key-outline": "\U0000EBE3", "account-lock": "\U0000F15D", "account-lock-outline": "\U0000F15E", "account-minus": "\U0000E00C", "account-minus-outline": "\U0000EAEB", "account-multiple": "\U0000E00D", "account-multiple-check": "\U0000E8C4", "account-multiple-check-outline": "\U0000F1FD", "account-multiple-minus": "\U0000E5D2", "account-multiple-minus-outline": "\U0000EBE4", "account-multiple-outline": "\U0000E00E", "account-multiple-plus": "\U0000E00F", "account-multiple-plus-outline": "\U0000E7FF", "account-multiple-remove": "\U0000F209", "account-multiple-remove-outline": "\U0000F20A", "account-music": "\U0000E802", "account-music-outline": "\U0000ECE8", "account-network": "\U0000E010", "account-network-outline": "\U0000EBE5", "account-off": "\U0000E011", "account-off-outline": "\U0000EBE6", "account-outline": "\U0000E012", "account-plus": "\U0000E013", "account-plus-outline": "\U0000E800", "account-question": "\U0000EB58", "account-question-outline": "\U0000EB59", "account-remove": "\U0000E014", "account-remove-outline": "\U0000EAEC", "account-search": "\U0000E015", "account-search-outline": "\U0000E934", "account-settings": "\U0000E62F", "account-settings-outline": "\U0000F0C8", "account-star": "\U0000E016", "account-star-outline": "\U0000EBE7", "account-supervisor": "\U0000EA8A", "account-supervisor-circle": "\U0000EA8B", "account-supervisor-outline": "\U0000F12C", "account-switch": "\U0000E018", "account-switch-outline": "\U0000E4CA", "account-tie": "\U0000ECE2", "account-tie-outline": "\U0000F0C9", "account-tie-voice": "\U0000F307", "account-tie-voice-off": "\U0000F309", "account-tie-voice-off-outline": "\U0000F30A", "account-tie-voice-outline": "\U0000F308", "account-voice": "\U0000E5CA", "adjust": "\U0000E019", "adobe": "\U0000E935", "adobe-acrobat": "\U0000EF9C", "air-conditioner": "\U0000E01A", "air-filter": "\U0000ED42", "air-horn": "\U0000EDAB", "air-humidifier": "\U0000F098", "air-purifier": "\U0000ED43", "airbag": "\U0000EBE8", "airballoon": "\U0000E01B", "airballoon-outline": "\U0000F00A", "airplane": "\U0000E01C", "airplane-landing": "\U0000E5D3", "airplane-off": "\U0000E01D", "airplane-takeoff": "\U0000E5D4", "airport": "\U0000E84A", "alarm": "\U0000E01F", "alarm-bell": "\U0000E78D", "alarm-check": "\U0000E020", "alarm-light": "\U0000E78E", "alarm-light-outline": "\U0000EBE9", "alarm-multiple": "\U0000E021", "alarm-note": "\U0000EE70", "alarm-note-off": "\U0000EE71", "alarm-off": "\U0000E022", "alarm-plus": "\U0000E023", "alarm-snooze": "\U0000E68D", "album": "\U0000E024", "alert": "\U0000E025", "alert-box": "\U0000E026", "alert-box-outline": "\U0000ECE3", "alert-circle": "\U0000E027", "alert-circle-check": "\U0000F1EC", "alert-circle-check-outline": "\U0000F1ED", "alert-circle-outline": "\U0000E5D5", "alert-decagram": "\U0000E6BC", "alert-decagram-outline": "\U0000ECE4", "alert-octagon": "\U0000E028", "alert-octagon-outline": "\U0000ECE5", "alert-octagram": "\U0000E766", "alert-octagram-outline": "\U0000ECE6", "alert-outline": "\U0000E029", "alert-rhombus": "\U0000F1CD", "alert-rhombus-outline": "\U0000F1CE", "alien": "\U0000E899", "alien-outline": "\U0000F0CA", "align-horizontal-center": "\U0000F1C2", "align-horizontal-left": "\U0000F1C1", "align-horizontal-right": "\U0000F1C3", "align-vertical-bottom": "\U0000F1C4", "align-vertical-center": "\U0000F1C5", "align-vertical-top": "\U0000F1C6", "all-inclusive": "\U0000E6BD", "allergy": "\U0000F257", "alpha": "\U0000E02A", "alpha-a": "\U0000EAED", "alpha-a-box": "\U0000EB07", "alpha-a-box-outline": "\U0000EBEA", "alpha-a-circle": "\U0000EBEB", "alpha-a-circle-outline": "\U0000EBEC", "alpha-b": "\U0000EAEE", "alpha-b-box": "\U0000EB08", "alpha-b-box-outline": "\U0000EBED", "alpha-b-circle": "\U0000EBEE", "alpha-b-circle-outline": "\U0000EBEF", "alpha-c": "\U0000EAEF", "alpha-c-box": "\U0000EB09", "alpha-c-box-outline": "\U0000EBF0", "alpha-c-circle": "\U0000EBF1", "alpha-c-circle-outline": "\U0000EBF2", "alpha-d": "\U0000EAF0", "alpha-d-box": "\U0000EB0A", "alpha-d-box-outline": "\U0000EBF3", "alpha-d-circle": "\U0000EBF4", "alpha-d-circle-outline": "\U0000EBF5", "alpha-e": "\U0000EAF1", "alpha-e-box": "\U0000EB0B", "alpha-e-box-outline": "\U0000EBF6", "alpha-e-circle": "\U0000EBF7", "alpha-e-circle-outline": "\U0000EBF8", "alpha-f": "\U0000EAF2", "alpha-f-box": "\U0000EB0C", "alpha-f-box-outline": "\U0000EBF9", "alpha-f-circle": "\U0000EBFA", "alpha-f-circle-outline": "\U0000EBFB", "alpha-g": "\U0000EAF3", "alpha-g-box": "\U0000EB0D", "alpha-g-box-outline": "\U0000EBFC", "alpha-g-circle": "\U0000EBFD", "alpha-g-circle-outline": "\U0000EBFE", "alpha-h": "\U0000EAF4", "alpha-h-box": "\U0000EB0E", "alpha-h-box-outline": "\U0000EBFF", "alpha-h-circle": "\U0000EC00", "alpha-h-circle-outline": "\U0000EC01", "alpha-i": "\U0000EAF5", "alpha-i-box": "\U0000EB0F", "alpha-i-box-outline": "\U0000EC02", "alpha-i-circle": "\U0000EC03", "alpha-i-circle-outline": "\U0000EC04", "alpha-j": "\U0000EAF6", "alpha-j-box": "\U0000EB10", "alpha-j-box-outline": "\U0000EC05", "alpha-j-circle": "\U0000EC06", "alpha-j-circle-outline": "\U0000EC07", "alpha-k": "\U0000EAF7", "alpha-k-box": "\U0000EB11", "alpha-k-box-outline": "\U0000EC08", "alpha-k-circle": "\U0000EC09", "alpha-k-circle-outline": "\U0000EC0A", "alpha-l": "\U0000EAF8", "alpha-l-box": "\U0000EB12", "alpha-l-box-outline": "\U0000EC0B", "alpha-l-circle": "\U0000EC0C", "alpha-l-circle-outline": "\U0000EC0D", "alpha-m": "\U0000EAF9", "alpha-m-box": "\U0000EB13", "alpha-m-box-outline": "\U0000EC0E", "alpha-m-circle": "\U0000EC0F", "alpha-m-circle-outline": "\U0000EC10", "alpha-n": "\U0000EAFA", "alpha-n-box": "\U0000EB14", "alpha-n-box-outline": "\U0000EC11", "alpha-n-circle": "\U0000EC12", "alpha-n-circle-outline": "\U0000EC13", "alpha-o": "\U0000EAFB", "alpha-o-box": "\U0000EB15", "alpha-o-box-outline": "\U0000EC14", "alpha-o-circle": "\U0000EC15", "alpha-o-circle-outline": "\U0000EC16", "alpha-p": "\U0000EAFC", "alpha-p-box": "\U0000EB16", "alpha-p-box-outline": "\U0000EC17", "alpha-p-circle": "\U0000EC18", "alpha-p-circle-outline": "\U0000EC19", "alpha-q": "\U0000EAFD", "alpha-q-box": "\U0000EB17", "alpha-q-box-outline": "\U0000EC1A", "alpha-q-circle": "\U0000EC1B", "alpha-q-circle-outline": "\U0000EC1C", "alpha-r": "\U0000EAFE", "alpha-r-box": "\U0000EB18", "alpha-r-box-outline": "\U0000EC1D", "alpha-r-circle": "\U0000EC1E", "alpha-r-circle-outline": "\U0000EC1F", "alpha-s": "\U0000EAFF", "alpha-s-box": "\U0000EB19", "alpha-s-box-outline": "\U0000EC20", "alpha-s-circle": "\U0000EC21", "alpha-s-circle-outline": "\U0000EC22", "alpha-t": "\U0000EB00", "alpha-t-box": "\U0000EB1A", "alpha-t-box-outline": "\U0000EC23", "alpha-t-circle": "\U0000EC24", "alpha-t-circle-outline": "\U0000EC25", "alpha-u": "\U0000EB01", "alpha-u-box": "\U0000EB1B", "alpha-u-box-outline": "\U0000EC26", "alpha-u-circle": "\U0000EC27", "alpha-u-circle-outline": "\U0000EC28", "alpha-v": "\U0000EB02", "alpha-v-box": "\U0000EB1C", "alpha-v-box-outline": "\U0000EC29", "alpha-v-circle": "\U0000EC2A", "alpha-v-circle-outline": "\U0000EC2B", "alpha-w": "\U0000EB03", "alpha-w-box": "\U0000EB1D", "alpha-w-box-outline": "\U0000EC2C", "alpha-w-circle": "\U0000EC2D", "alpha-w-circle-outline": "\U0000EC2E", "alpha-x": "\U0000EB04", "alpha-x-box": "\U0000EB1E", "alpha-x-box-outline": "\U0000EC2F", "alpha-x-circle": "\U0000EC30", "alpha-x-circle-outline": "\U0000EC31", "alpha-y": "\U0000EB05", "alpha-y-box": "\U0000EB1F", "alpha-y-box-outline": "\U0000EC32", "alpha-y-circle": "\U0000EC33", "alpha-y-circle-outline": "\U0000EC34", "alpha-z": "\U0000EB06", "alpha-z-box": "\U0000EB20", "alpha-z-box-outline": "\U0000EC35", "alpha-z-circle": "\U0000EC36", "alpha-z-circle-outline": "\U0000EC37", "alphabet-aurebesh": "\U0000F32B", "alphabet-cyrillic": "\U0000F32C", "alphabet-greek": "\U0000F32D", "alphabet-latin": "\U0000F32E", "alphabet-piqad": "\U0000F32F", "alphabet-tengwar": "\U0000F336", "alphabetical": "\U0000E02B", "alphabetical-off": "\U0000F00B", "alphabetical-variant": "\U0000F00C", "alphabetical-variant-off": "\U0000F00D", "altimeter": "\U0000E5D6", "amazon": "\U0000E02C", "amazon-alexa": "\U0000E8C5", "ambulance": "\U0000E02E", "ammunition": "\U0000ECE7", "ampersand": "\U0000EA8C", "amplifier": "\U0000E02F", "amplifier-off": "\U0000F1B4", "anchor": "\U0000E030", "android": "\U0000E031", "android-auto": "\U0000EA8D", "android-debug-bridge": "\U0000E032", "android-messages": "\U0000ED44", "android-studio": "\U0000E033", "angle-acute": "\U0000E936", "angle-obtuse": "\U0000E937", "angle-right": "\U0000E938", "angular": "\U0000E6B1", "angularjs": "\U0000E6BE", "animation": "\U0000E5D7", "animation-outline": "\U0000EA8E", "animation-play": "\U0000E939", "animation-play-outline": "\U0000EA8F", "ansible": "\U0000F099", "antenna": "\U0000F118", "anvil": "\U0000E89A", "apache-kafka": "\U0000F00E", "api": "\U0000F09A", "api-off": "\U0000F256", "apple": "\U0000E034", "apple-airplay": "\U0000E01E", "apple-finder": "\U0000E035", "apple-icloud": "\U0000E037", "apple-ios": "\U0000E036", "apple-keyboard-caps": "\U0000E631", "apple-keyboard-command": "\U0000E632", "apple-keyboard-control": "\U0000E633", "apple-keyboard-option": "\U0000E634", "apple-keyboard-shift": "\U0000E635", "apple-safari": "\U0000E038", "application": "\U0000E613", "application-export": "\U0000EDAC", "application-import": "\U0000EDAD", "approximately-equal": "\U0000EF9D", "approximately-equal-box": "\U0000EF9E", "apps": "\U0000E03A", "apps-box": "\U0000ED45", "arch": "\U0000E8C6", "archive": "\U0000E03B", "archive-arrow-down": "\U0000F258", "archive-arrow-down-outline": "\U0000F259", "archive-arrow-up": "\U0000F25A", "archive-arrow-up-outline": "\U0000F25B", "archive-outline": "\U0000F20D", "arm-flex": "\U0000EFD6", "arm-flex-outline": "\U0000EFD5", "arrange-bring-forward": "\U0000E03C", "arrange-bring-to-front": "\U0000E03D", "arrange-send-backward": "\U0000E03E", "arrange-send-to-back": "\U0000E03F", "arrow-all": "\U0000E040", "arrow-bottom-left": "\U0000E041", "arrow-bottom-left-bold-outline": "\U0000E9B6", "arrow-bottom-left-thick": "\U0000E9B7", "arrow-bottom-right": "\U0000E042", "arrow-bottom-right-bold-outline": "\U0000E9B8", "arrow-bottom-right-thick": "\U0000E9B9", "arrow-collapse": "\U0000E614", "arrow-collapse-all": "\U0000E043", "arrow-collapse-down": "\U0000E791", "arrow-collapse-horizontal": "\U0000E84B", "arrow-collapse-left": "\U0000E792", "arrow-collapse-right": "\U0000E793", "arrow-collapse-up": "\U0000E794", "arrow-collapse-vertical": "\U0000E84C", "arrow-decision": "\U0000E9BA", "arrow-decision-auto": "\U0000E9BB", "arrow-decision-auto-outline": "\U0000E9BC", "arrow-decision-outline": "\U0000E9BD", "arrow-down": "\U0000E044", "arrow-down-bold": "\U0000E72D", "arrow-down-bold-box": "\U0000E72E", "arrow-down-bold-box-outline": "\U0000E72F", "arrow-down-bold-circle": "\U0000E046", "arrow-down-bold-circle-outline": "\U0000E047", "arrow-down-bold-hexagon-outline": "\U0000E048", "arrow-down-bold-outline": "\U0000E9BE", "arrow-down-box": "\U0000E6BF", "arrow-down-circle": "\U0000ECDA", "arrow-down-circle-outline": "\U0000ECDB", "arrow-down-drop-circle": "\U0000E049", "arrow-down-drop-circle-outline": "\U0000E04A", "arrow-down-thick": "\U0000E045", "arrow-expand": "\U0000E615", "arrow-expand-all": "\U0000E04B", "arrow-expand-down": "\U0000E795", "arrow-expand-horizontal": "\U0000E84D", "arrow-expand-left": "\U0000E796", "arrow-expand-right": "\U0000E797", "arrow-expand-up": "\U0000E798", "arrow-expand-vertical": "\U0000E84E", "arrow-horizontal-lock": "\U0000F15A", "arrow-left": "\U0000E04C", "arrow-left-bold": "\U0000E730", "arrow-left-bold-box": "\U0000E731", "arrow-left-bold-box-outline": "\U0000E732", "arrow-left-bold-circle": "\U0000E04E", "arrow-left-bold-circle-outline": "\U0000E04F", "arrow-left-bold-hexagon-outline": "\U0000E050", "arrow-left-bold-outline": "\U0000E9BF", "arrow-left-box": "\U0000E6C0", "arrow-left-circle": "\U0000ECDC", "arrow-left-circle-outline": "\U0000ECDD", "arrow-left-drop-circle": "\U0000E051", "arrow-left-drop-circle-outline": "\U0000E052", "arrow-left-right": "\U0000EE72", "arrow-left-right-bold": "\U0000EE73", "arrow-left-right-bold-outline": "\U0000E9C0", "arrow-left-thick": "\U0000E04D", "arrow-right": "\U0000E053", "arrow-right-bold": "\U0000E733", "arrow-right-bold-box": "\U0000E734", "arrow-right-bold-box-outline": "\U0000E735", "arrow-right-bold-circle": "\U0000E055", "arrow-right-bold-circle-outline": "\U0000E056", "arrow-right-bold-hexagon-outline": "\U0000E057", "arrow-right-bold-outline": "\U0000E9C1", "arrow-right-box": "\U0000E6C1", "arrow-right-circle": "\U0000ECDE", "arrow-right-circle-outline": "\U0000ECDF", "arrow-right-drop-circle": "\U0000E058", "arrow-right-drop-circle-outline": "\U0000E059", "arrow-right-thick": "\U0000E054", "arrow-split-horizontal": "\U0000E93A", "arrow-split-vertical": "\U0000E93B", "arrow-top-left": "\U0000E05A", "arrow-top-left-bold-outline": "\U0000E9C2", "arrow-top-left-bottom-right": "\U0000EE74", "arrow-top-left-bottom-right-bold": "\U0000EE75", "arrow-top-left-thick": "\U0000E9C3", "arrow-top-right": "\U0000E05B", "arrow-top-right-bold-outline": "\U0000E9C4", "arrow-top-right-bottom-left": "\U0000EE76", "arrow-top-right-bottom-left-bold": "\U0000EE77", "arrow-top-right-thick": "\U0000E9C5", "arrow-up": "\U0000E05C", "arrow-up-bold": "\U0000E736", "arrow-up-bold-box": "\U0000E737", "arrow-up-bold-box-outline": "\U0000E738", "arrow-up-bold-circle": "\U0000E05E", "arrow-up-bold-circle-outline": "\U0000E05F", "arrow-up-bold-hexagon-outline": "\U0000E060", "arrow-up-bold-outline": "\U0000E9C6", "arrow-up-box": "\U0000E6C2", "arrow-up-circle": "\U0000ECE0", "arrow-up-circle-outline": "\U0000ECE1", "arrow-up-down": "\U0000EE78", "arrow-up-down-bold": "\U0000EE79", "arrow-up-down-bold-outline": "\U0000E9C7", "arrow-up-drop-circle": "\U0000E061", "arrow-up-drop-circle-outline": "\U0000E062", "arrow-up-thick": "\U0000E05D", "arrow-vertical-lock": "\U0000F15B", "artstation": "\U0000EB5A", "aspect-ratio": "\U0000EA23", "assistant": "\U0000E063", "asterisk": "\U0000E6C3", "at": "\U0000E064", "atlassian": "\U0000E803", "atm": "\U0000ED46", "atom": "\U0000E767", "atom-variant": "\U0000EE7A", "attachment": "\U0000E065", "audio-video": "\U0000E93C", "audio-video-off": "\U0000F1B5", "augmented-reality": "\U0000E84F", "auto-download": "\U0000F37D", "auto-fix": "\U0000E067", "auto-upload": "\U0000E068", "autorenew": "\U0000E069", "av-timer": "\U0000E06A", "aws": "\U0000EE0E", "axe": "\U0000E8C7", "axis": "\U0000ED47", "axis-arrow": "\U0000ED48", "axis-arrow-lock": "\U0000ED49", "axis-lock": "\U0000ED4A", "axis-x-arrow": "\U0000ED4B", "axis-x-arrow-lock": "\U0000ED4C", "axis-x-rotate-clockwise": "\U0000ED4D", "axis-x-rotate-counterclockwise": "\U0000ED4E", "axis-x-y-arrow-lock": "\U0000ED4F", "axis-y-arrow": "\U0000ED50", "axis-y-arrow-lock": "\U0000ED51", "axis-y-rotate-clockwise": "\U0000ED52", "axis-y-rotate-counterclockwise": "\U0000ED53", "axis-z-arrow": "\U0000ED54", "axis-z-arrow-lock": "\U0000ED55", "axis-z-rotate-clockwise": "\U0000ED56", "axis-z-rotate-counterclockwise": "\U0000ED57", "babel": "\U0000EA24", "baby": "\U0000E06B", "baby-bottle": "\U0000EF38", "baby-bottle-outline": "\U0000EF39", "baby-buggy": "\U0000F3DF", "baby-carriage": "\U0000E68E", "baby-carriage-off": "\U0000EF9F", "baby-face": "\U0000EE7B", "baby-face-outline": "\U0000EE7C", "backburger": "\U0000E06C", "backspace": "\U0000E06D", "backspace-outline": "\U0000EB5B", "backspace-reverse": "\U0000EE7D", "backspace-reverse-outline": "\U0000EE7E", "backup-restore": "\U0000E06E", "bacteria": "\U0000EED4", "bacteria-outline": "\U0000EED5", "badge-account": "\U0000EDA6", "badge-account-alert": "\U0000EDA7", "badge-account-alert-outline": "\U0000EDA8", "badge-account-horizontal": "\U0000EE0C", "badge-account-horizontal-outline": "\U0000EE0D", "badge-account-outline": "\U0000EDA9", "badminton": "\U0000E850", "bag-carry-on": "\U0000EF3A", "bag-carry-on-check": "\U0000ED64", "bag-carry-on-off": "\U0000EF3B", "bag-checked": "\U0000EF3C", "bag-personal": "\U0000EE0F", "bag-personal-off": "\U0000EE10", "bag-personal-off-outline": "\U0000EE11", "bag-personal-outline": "\U0000EE12", "baguette": "\U0000EF3D", "balloon": "\U0000EA25", "ballot": "\U0000E9C8", "ballot-outline": "\U0000E9C9", "ballot-recount": "\U0000EC38", "ballot-recount-outline": "\U0000EC39", "bandage": "\U0000EDAE", "bandcamp": "\U0000E674", "bank": "\U0000E06F", "bank-minus": "\U0000EDAF", "bank-outline": "\U0000EE7F", "bank-plus": "\U0000EDB0", "bank-remove": "\U0000EDB1", "bank-transfer": "\U0000EA26", "bank-transfer-in": "\U0000EA27", "bank-transfer-out": "\U0000EA28", "barcode": "\U0000E070", "barcode-off": "\U0000F235", "barcode-scan": "\U0000E071", "barley": "\U0000E072", "barley-off": "\U0000EB5C", "barn": "\U0000EB5D", "barrel": "\U0000E073", "baseball": "\U0000E851", "baseball-bat": "\U0000E852", "bash": "\U0000F182", "basket": "\U0000E075", "basket-fill": "\U0000E076", "basket-outline": "\U0000F180", "basket-unfill": "\U0000E077", "basketball": "\U0000E805", "basketball-hoop": "\U0000EC3A", "basketball-hoop-outline": "\U0000EC3B", "bat": "\U0000EB5E", "battery": "\U0000E078", "battery-10": "\U0000E079", "battery-10-bluetooth": "\U0000E93D", "battery-20": "\U0000E07A", "battery-20-bluetooth": "\U0000E93E", "battery-30": "\U0000E07B", "battery-30-bluetooth": "\U0000E93F", "battery-40": "\U0000E07C", "battery-40-bluetooth": "\U0000E940", "battery-50": "\U0000E07D", "battery-50-bluetooth": "\U0000E941", "battery-60": "\U0000E07E", "battery-60-bluetooth": "\U0000E942", "battery-70": "\U0000E07F", "battery-70-bluetooth": "\U0000E943", "battery-80": "\U0000E080", "battery-80-bluetooth": "\U0000E944", "battery-90": "\U0000E081", "battery-90-bluetooth": "\U0000E945", "battery-alert": "\U0000E082", "battery-alert-bluetooth": "\U0000E946", "battery-alert-variant": "\U0000F0CB", "battery-alert-variant-outline": "\U0000F0CC", "battery-bluetooth": "\U0000E947", "battery-bluetooth-variant": "\U0000E948", "battery-charging": "\U0000E083", "battery-charging-10": "\U0000E89B", "battery-charging-100": "\U0000E084", "battery-charging-20": "\U0000E085", "battery-charging-30": "\U0000E086", "battery-charging-40": "\U0000E087", "battery-charging-50": "\U0000E89C", "battery-charging-60": "\U0000E088", "battery-charging-70": "\U0000E89D", "battery-charging-80": "\U0000E089", "battery-charging-90": "\U0000E08A", "battery-charging-high": "\U0000F2A5", "battery-charging-low": "\U0000F2A3", "battery-charging-medium": "\U0000F2A4", "battery-charging-outline": "\U0000E89E", "battery-charging-wireless": "\U0000E806", "battery-charging-wireless-10": "\U0000E807", "battery-charging-wireless-20": "\U0000E808", "battery-charging-wireless-30": "\U0000E809", "battery-charging-wireless-40": "\U0000E80A", "battery-charging-wireless-50": "\U0000E80B", "battery-charging-wireless-60": "\U0000E80C", "battery-charging-wireless-70": "\U0000E80D", "battery-charging-wireless-80": "\U0000E80E", "battery-charging-wireless-90": "\U0000E80F", "battery-charging-wireless-alert": "\U0000E810", "battery-charging-wireless-outline": "\U0000E811", "battery-heart": "\U0000F20E", "battery-heart-outline": "\U0000F20F", "battery-heart-variant": "\U0000F210", "battery-high": "\U0000F2A2", "battery-low": "\U0000F2A0", "battery-medium": "\U0000F2A1", "battery-minus": "\U0000E08B", "battery-negative": "\U0000E08C", "battery-off": "\U0000F25C", "battery-off-outline": "\U0000F25D", "battery-outline": "\U0000E08D", "battery-plus": "\U0000E08E", "battery-positive": "\U0000E08F", "battery-unknown": "\U0000E090", "battery-unknown-bluetooth": "\U0000E949", "battlenet": "\U0000EB5F", "beach": "\U0000E091", "beaker": "\U0000ECE9", "beaker-alert": "\U0000F228", "beaker-alert-outline": "\U0000F229", "beaker-check": "\U0000F22A", "beaker-check-outline": "\U0000F22B", "beaker-minus": "\U0000F22C", "beaker-minus-outline": "\U0000F22D", "beaker-outline": "\U0000E68F", "beaker-plus": "\U0000F22E", "beaker-plus-outline": "\U0000F22F", "beaker-question": "\U0000F230", "beaker-question-outline": "\U0000F231", "beaker-remove": "\U0000F232", "beaker-remove-outline": "\U0000F233", "bed": "\U0000E2E2", "bed-double": "\U0000EFD3", "bed-double-outline": "\U0000EFD2", "bed-empty": "\U0000E89F", "bed-king": "\U0000EFD1", "bed-king-outline": "\U0000EFD0", "bed-outline": "\U0000E098", "bed-queen": "\U0000EFCF", "bed-queen-outline": "\U0000EFDA", "bed-single": "\U0000F06C", "bed-single-outline": "\U0000F06D", "bee": "\U0000EFA0", "bee-flower": "\U0000EFA1", "beehive-off-outline": "\U0000F3EC", "beehive-outline": "\U0000F0CD", "beer": "\U0000E097", "beer-outline": "\U0000F30B", "bell": "\U0000E099", "bell-alert": "\U0000ED58", "bell-alert-outline": "\U0000EE80", "bell-cancel": "\U0000F3E6", "bell-cancel-outline": "\U0000F3E7", "bell-check": "\U0000F1E4", "bell-check-outline": "\U0000F1E5", "bell-circle": "\U0000ED59", "bell-circle-outline": "\U0000ED5A", "bell-minus": "\U0000F3E8", "bell-minus-outline": "\U0000F3E9", "bell-off": "\U0000E09A", "bell-off-outline": "\U0000EA90", "bell-outline": "\U0000E09B", "bell-plus": "\U0000E09C", "bell-plus-outline": "\U0000EA91", "bell-remove": "\U0000F3EA", "bell-remove-outline": "\U0000F3EB", "bell-ring": "\U0000E09D", "bell-ring-outline": "\U0000E09E", "bell-sleep": "\U0000E09F", "bell-sleep-outline": "\U0000EA92", "beta": "\U0000E0A0", "betamax": "\U0000E9CA", "biathlon": "\U0000EE13", "bicycle": "\U0000F09B", "bicycle-basket": "\U0000F234", "bike": "\U0000E0A2", "bike-fast": "\U0000F11E", "billboard": "\U0000F00F", "billiards": "\U0000EB60", "billiards-rack": "\U0000EB61", "binoculars": "\U0000E0A4", "bio": "\U0000E0A5", "biohazard": "\U0000E0A6", "bitbucket": "\U0000E0A7", "bitcoin": "\U0000E812", "black-mesa": "\U0000E0A8", "blender": "\U0000ECEA", "blender-software": "\U0000E0AA", "blinds": "\U0000E0AB", "blinds-open": "\U0000F010", "block-helper": "\U0000E0AC", "blogger": "\U0000E0AD", "blood-bag": "\U0000ECEB", "bluetooth": "\U0000E0AE", "bluetooth-audio": "\U0000E0AF", "bluetooth-connect": "\U0000E0B0", "bluetooth-off": "\U0000E0B1", "bluetooth-settings": "\U0000E0B2", "bluetooth-transfer": "\U0000E0B3", "blur": "\U0000E0B4", "blur-linear": "\U0000E0B5", "blur-off": "\U0000E0B6", "blur-radial": "\U0000E0B7", "bolnisi-cross": "\U0000ECEC", "bolt": "\U0000EDB2", "bomb": "\U0000E690", "bomb-off": "\U0000E6C4", "bone": "\U0000E0B8", "book": "\U0000E0B9", "book-account": "\U0000F3AC", "book-account-outline": "\U0000F3AD", "book-alphabet": "\U0000E61C", "book-cross": "\U0000E0A1", "book-information-variant": "\U0000F06E", "book-lock": "\U0000E799", "book-lock-open": "\U0000E79A", "book-minus": "\U0000E5D8", "book-minus-multiple": "\U0000EA93", "book-minus-multiple-outline": "\U0000E90A", "book-multiple": "\U0000E0BA", "book-multiple-outline": "\U0000E435", "book-music": "\U0000E066", "book-open": "\U0000E0BC", "book-open-outline": "\U0000EB62", "book-open-page-variant": "\U0000E5D9", "book-open-variant": "\U0000E0BD", "book-outline": "\U0000EB63", "book-play": "\U0000EE81", "book-play-outline": "\U0000EE82", "book-plus": "\U0000E5DA", "book-plus-multiple": "\U0000EA94", "book-plus-multiple-outline": "\U0000EADD", "book-remove": "\U0000EA96", "book-remove-multiple": "\U0000EA95", "book-remove-multiple-outline": "\U0000E4C9", "book-search": "\U0000EE83", "book-search-outline": "\U0000EE84", "book-variant": "\U0000E0BE", "book-variant-multiple": "\U0000E0BB", "bookmark": "\U0000E0BF", "bookmark-check": "\U0000E0C0", "bookmark-check-outline": "\U0000F37A", "bookmark-minus": "\U0000E9CB", "bookmark-minus-outline": "\U0000E9CC", "bookmark-multiple": "\U0000EE14", "bookmark-multiple-outline": "\U0000EE15", "bookmark-music": "\U0000E0C1", "bookmark-music-outline": "\U0000F378", "bookmark-off": "\U0000E9CD", "bookmark-off-outline": "\U0000E9CE", "bookmark-outline": "\U0000E0C2", "bookmark-plus": "\U0000E0C4", "bookmark-plus-outline": "\U0000E0C3", "bookmark-remove": "\U0000E0C5", "bookmark-remove-outline": "\U0000F379", "bookshelf": "\U0000F25E", "boom-gate": "\U0000EE85", "boom-gate-alert": "\U0000EE86", "boom-gate-alert-outline": "\U0000EE87", "boom-gate-down": "\U0000EE88", "boom-gate-down-outline": "\U0000EE89", "boom-gate-outline": "\U0000EE8A", "boom-gate-up": "\U0000EE8B", "boom-gate-up-outline": "\U0000EE8C", "boombox": "\U0000E5DB", "boomerang": "\U0000F0CE", "bootstrap": "\U0000E6C5", "border-all": "\U0000E0C6", "border-all-variant": "\U0000E8A0", "border-bottom": "\U0000E0C7", "border-bottom-variant": "\U0000E8A1", "border-color": "\U0000E0C8", "border-horizontal": "\U0000E0C9", "border-inside": "\U0000E0CA", "border-left": "\U0000E0CB", "border-left-variant": "\U0000E8A2", "border-none": "\U0000E0CC", "border-none-variant": "\U0000E8A3", "border-outside": "\U0000E0CD", "border-right": "\U0000E0CE", "border-right-variant": "\U0000E8A4", "border-style": "\U0000E0CF", "border-top": "\U0000E0D0", "border-top-variant": "\U0000E8A5", "border-vertical": "\U0000E0D1", "bottle-soda": "\U0000F06F", "bottle-soda-classic": "\U0000F070", "bottle-soda-classic-outline": "\U0000F362", "bottle-soda-outline": "\U0000F071", "bottle-tonic": "\U0000F12D", "bottle-tonic-outline": "\U0000F12E", "bottle-tonic-plus": "\U0000F12F", "bottle-tonic-plus-outline": "\U0000F130", "bottle-tonic-skull": "\U0000F131", "bottle-tonic-skull-outline": "\U0000F132", "bottle-wine": "\U0000E853", "bottle-wine-outline": "\U0000F30F", "bow-tie": "\U0000E677", "bowl": "\U0000E28D", "bowl-mix": "\U0000E616", "bowl-mix-outline": "\U0000E2E3", "bowl-outline": "\U0000E2A8", "bowling": "\U0000E0D2", "box": "\U0000E0D3", "box-cutter": "\U0000E0D4", "box-cutter-off": "\U0000EB49", "box-shadow": "\U0000E636", "boxing-glove": "\U0000EB64", "braille": "\U0000E9CF", "brain": "\U0000E9D0", "bread-slice": "\U0000ECED", "bread-slice-outline": "\U0000ECEE", "bridge": "\U0000E617", "briefcase": "\U0000E0D5", "briefcase-account": "\U0000ECEF", "briefcase-account-outline": "\U0000ECF0", "briefcase-check": "\U0000E0D6", "briefcase-check-outline": "\U0000F31D", "briefcase-clock": "\U0000F0CF", "briefcase-clock-outline": "\U0000F0D0", "briefcase-download": "\U0000E0D7", "briefcase-download-outline": "\U0000EC3C", "briefcase-edit": "\U0000EA97", "briefcase-edit-outline": "\U0000EC3D", "briefcase-minus": "\U0000EA29", "briefcase-minus-outline": "\U0000EC3E", "briefcase-outline": "\U0000E813", "briefcase-plus": "\U0000EA2A", "briefcase-plus-outline": "\U0000EC3F", "briefcase-remove": "\U0000EA2B", "briefcase-remove-outline": "\U0000EC40", "briefcase-search": "\U0000EA2C", "briefcase-search-outline": "\U0000EC41", "briefcase-upload": "\U0000E0D8", "briefcase-upload-outline": "\U0000EC42", "brightness-1": "\U0000E0D9", "brightness-2": "\U0000E0DA", "brightness-3": "\U0000E0DB", "brightness-4": "\U0000E0DC", "brightness-5": "\U0000E0DD", "brightness-6": "\U0000E0DE", "brightness-7": "\U0000E0DF", "brightness-auto": "\U0000E0E0", "brightness-percent": "\U0000ECF1", "broom": "\U0000E0E1", "brush": "\U0000E0E2", "buddhism": "\U0000E94A", "buffer": "\U0000E618", "buffet": "\U0000E577", "bug": "\U0000E0E3", "bug-check": "\U0000EA2D", "bug-check-outline": "\U0000EA2E", "bug-outline": "\U0000EA2F", "bugle": "\U0000EDB3", "bulldozer": "\U0000EB21", "bullet": "\U0000ECF2", "bulletin-board": "\U0000E0E4", "bullhorn": "\U0000E0E5", "bullhorn-outline": "\U0000EB22", "bullseye": "\U0000E5DC", "bullseye-arrow": "\U0000E8C8", "bulma": "\U0000F2E6", "bunk-bed": "\U0000F301", "bunk-bed-outline": "\U0000E096", "bus": "\U0000E0E6", "bus-alert": "\U0000EA98", "bus-articulated-end": "\U0000E79B", "bus-articulated-front": "\U0000E79C", "bus-clock": "\U0000E8C9", "bus-double-decker": "\U0000E79D", "bus-marker": "\U0000F211", "bus-multiple": "\U0000EF3E", "bus-school": "\U0000E79E", "bus-side": "\U0000E79F", "bus-stop": "\U0000F011", "bus-stop-covered": "\U0000F012", "bus-stop-uncovered": "\U0000F013", "cable-data": "\U0000F393", "cached": "\U0000E0E7", "cactus": "\U0000EDB4", "cake": "\U0000E0E8", "cake-layered": "\U0000E0E9", "cake-variant": "\U0000E0EA", "calculator": "\U0000E0EB", "calculator-variant": "\U0000EA99", "calendar": "\U0000E0EC", "calendar-account": "\U0000EED6", "calendar-account-outline": "\U0000EED7", "calendar-alert": "\U0000EA30", "calendar-arrow-left": "\U0000F133", "calendar-arrow-right": "\U0000F134", "calendar-blank": "\U0000E0ED", "calendar-blank-multiple": "\U0000F072", "calendar-blank-outline": "\U0000EB65", "calendar-check": "\U0000E0EE", "calendar-check-outline": "\U0000EC43", "calendar-clock": "\U0000E0EF", "calendar-edit": "\U0000E8A6", "calendar-export": "\U0000EB23", "calendar-heart": "\U0000E9D1", "calendar-import": "\U0000EB24", "calendar-minus": "\U0000ED5B", "calendar-month": "\U0000EE16", "calendar-month-outline": "\U0000EE17", "calendar-multiple": "\U0000E0F0", "calendar-multiple-check": "\U0000E0F1", "calendar-multiselect": "\U0000EA31", "calendar-outline": "\U0000EB66", "calendar-plus": "\U0000E0F2", "calendar-question": "\U0000E691", "calendar-range": "\U0000E678", "calendar-range-outline": "\U0000EB67", "calendar-refresh": "\U0000E1E0", "calendar-refresh-outline": "\U0000E202", "calendar-remove": "\U0000E0F3", "calendar-remove-outline": "\U0000EC44", "calendar-search": "\U0000E94B", "calendar-star": "\U0000E9D2", "calendar-sync": "\U0000EE8D", "calendar-sync-outline": "\U0000EE8E", "calendar-text": "\U0000E0F4", "calendar-text-outline": "\U0000EC45", "calendar-today": "\U0000E0F5", "calendar-week": "\U0000EA32", "calendar-week-begin": "\U0000EA33", "calendar-weekend": "\U0000EED8", "calendar-weekend-outline": "\U0000EED9", "call-made": "\U0000E0F6", "call-merge": "\U0000E0F7", "call-missed": "\U0000E0F8", "call-received": "\U0000E0F9", "call-split": "\U0000E0FA", "camcorder": "\U0000E0FB", "camcorder-off": "\U0000E0FE", "camera": "\U0000E0FF", "camera-account": "\U0000E8CA", "camera-burst": "\U0000E692", "camera-control": "\U0000EB68", "camera-enhance": "\U0000E100", "camera-enhance-outline": "\U0000EB69", "camera-front": "\U0000E101", "camera-front-variant": "\U0000E102", "camera-gopro": "\U0000E7A0", "camera-image": "\U0000E8CB", "camera-iris": "\U0000E103", "camera-metering-center": "\U0000E7A1", "camera-metering-matrix": "\U0000E7A2", "camera-metering-partial": "\U0000E7A3", "camera-metering-spot": "\U0000E7A4", "camera-off": "\U0000E5DE", "camera-outline": "\U0000ED5C", "camera-party-mode": "\U0000E104", "camera-plus": "\U0000EEDA", "camera-plus-outline": "\U0000EEDB", "camera-rear": "\U0000E105", "camera-rear-variant": "\U0000E106", "camera-retake": "\U0000EE18", "camera-retake-outline": "\U0000EE19", "camera-switch": "\U0000E107", "camera-switch-outline": "\U0000E849", "camera-timer": "\U0000E108", "camera-wireless": "\U0000EDB5", "camera-wireless-outline": "\U0000EDB6", "campfire": "\U0000EEDC", "cancel": "\U0000E739", "candle": "\U0000E5E1", "candycane": "\U0000E109", "cannabis": "\U0000E7A5", "caps-lock": "\U0000EA9A", "car": "\U0000E10A", "car-2-plus": "\U0000F014", "car-3-plus": "\U0000F015", "car-arrow-left": "\U0000F3B1", "car-arrow-right": "\U0000F3B2", "car-back": "\U0000EE1A", "car-battery": "\U0000E10B", "car-brake-abs": "\U0000EC46", "car-brake-alert": "\U0000EC47", "car-brake-hold": "\U0000ED5D", "car-brake-parking": "\U0000ED5E", "car-brake-retarder": "\U0000F016", "car-child-seat": "\U0000EFA2", "car-clutch": "\U0000F017", "car-cog": "\U0000F3CB", "car-connected": "\U0000E10C", "car-convertible": "\U0000E7A6", "car-coolant-level": "\U0000F018", "car-cruise-control": "\U0000ED5F", "car-defrost-front": "\U0000ED60", "car-defrost-rear": "\U0000ED61", "car-door": "\U0000EB6A", "car-door-lock": "\U0000F09C", "car-electric": "\U0000EB6B", "car-esp": "\U0000EC48", "car-estate": "\U0000E7A7", "car-hatchback": "\U0000E7A8", "car-info": "\U0000F1BD", "car-key": "\U0000EB6C", "car-light-dimmed": "\U0000EC49", "car-light-fog": "\U0000EC4A", "car-light-high": "\U0000EC4B", "car-limousine": "\U0000E8CC", "car-multiple": "\U0000EB6D", "car-off": "\U0000EE1B", "car-parking-lights": "\U0000ED62", "car-pickup": "\U0000E7A9", "car-seat": "\U0000EFA3", "car-seat-cooler": "\U0000EFA4", "car-seat-heater": "\U0000EFA5", "car-settings": "\U0000F3CC", "car-shift-pattern": "\U0000EF3F", "car-side": "\U0000E7AA", "car-sports": "\U0000E7AB", "car-tire-alert": "\U0000EC4C", "car-traction-control": "\U0000ED63", "car-turbocharger": "\U0000F019", "car-wash": "\U0000E10D", "car-windshield": "\U0000F01A", "car-windshield-outline": "\U0000F01B", "caravan": "\U0000E7AC", "card": "\U0000EB6E", "card-account-details": "\U0000E5D1", "card-account-details-outline": "\U0000EDAA", "card-account-details-star": "\U0000E2A2", "card-account-details-star-outline": "\U0000E6DA", "card-account-mail": "\U0000E18D", "card-account-mail-outline": "\U0000EE97", "card-account-phone": "\U0000EE98", "card-account-phone-outline": "\U0000EE99", "card-bulleted": "\U0000EB6F", "card-bulleted-off": "\U0000EB70", "card-bulleted-off-outline": "\U0000EB71", "card-bulleted-outline": "\U0000EB72", "card-bulleted-settings": "\U0000EB73", "card-bulleted-settings-outline": "\U0000EB74", "card-outline": "\U0000EB75", "card-plus": "\U0000F1FE", "card-plus-outline": "\U0000F1FF", "card-search": "\U0000F073", "card-search-outline": "\U0000F074", "card-text": "\U0000EB76", "card-text-outline": "\U0000EB77", "cards": "\U0000E637", "cards-club": "\U0000E8CD", "cards-diamond": "\U0000E8CE", "cards-diamond-outline": "\U0000F01C", "cards-heart": "\U0000E8CF", "cards-outline": "\U0000E638", "cards-playing-outline": "\U0000E639", "cards-spade": "\U0000E8D0", "cards-variant": "\U0000E6C6", "carrot": "\U0000E10E", "cart": "\U0000E10F", "cart-arrow-down": "\U0000ED65", "cart-arrow-right": "\U0000EC4D", "cart-arrow-up": "\U0000ED66", "cart-minus": "\U0000ED67", "cart-off": "\U0000E66A", "cart-outline": "\U0000E110", "cart-plus": "\U0000E111", "cart-remove": "\U0000ED68", "case-sensitive-alt": "\U0000E112", "cash": "\U0000E113", "cash-100": "\U0000E114", "cash-marker": "\U0000EDB7", "cash-minus": "\U0000F25F", "cash-multiple": "\U0000E115", "cash-plus": "\U0000F260", "cash-refund": "\U0000EA9B", "cash-register": "\U0000ECF3", "cash-remove": "\U0000F261", "cash-usd": "\U0000F175", "cash-usd-outline": "\U0000E116", "cassette": "\U0000E9D3", "cast": "\U0000E117", "cast-audio": "\U0000F01D", "cast-connected": "\U0000E118", "cast-education": "\U0000EE1C", "cast-off": "\U0000E789", "castle": "\U0000E119", "cat": "\U0000E11A", "cctv": "\U0000E7AD", "ceiling-light": "\U0000E768", "cellphone": "\U0000E11B", "cellphone-android": "\U0000E11C", "cellphone-arrow-down": "\U0000E9D4", "cellphone-basic": "\U0000E11D", "cellphone-charging": "\U0000F396", "cellphone-cog": "\U0000E950", "cellphone-dock": "\U0000E11E", "cellphone-erase": "\U0000E94C", "cellphone-information": "\U0000EF40", "cellphone-iphone": "\U0000E11F", "cellphone-key": "\U0000E94D", "cellphone-link": "\U0000E120", "cellphone-link-off": "\U0000E121", "cellphone-lock": "\U0000E94E", "cellphone-message": "\U0000E8D2", "cellphone-message-off": "\U0000F0D1", "cellphone-nfc": "\U0000EE8F", "cellphone-nfc-off": "\U0000F2D7", "cellphone-off": "\U0000E94F", "cellphone-play": "\U0000F01E", "cellphone-screenshot": "\U0000EA34", "cellphone-settings": "\U0000E122", "cellphone-sound": "\U0000E951", "cellphone-text": "\U0000E8D1", "cellphone-wireless": "\U0000E814", "celtic-cross": "\U0000ECF4", "centos": "\U0000F119", "certificate": "\U0000E123", "certificate-outline": "\U0000F187", "chair-rolling": "\U0000EF47", "chair-school": "\U0000E124", "charity": "\U0000EC4E", "chart-arc": "\U0000E125", "chart-areaspline": "\U0000E126", "chart-areaspline-variant": "\U0000EE90", "chart-bar": "\U0000E127", "chart-bar-stacked": "\U0000E769", "chart-bell-curve": "\U0000EC4F", "chart-bell-curve-cumulative": "\U0000EFA6", "chart-bubble": "\U0000E5E2", "chart-donut": "\U0000E7AE", "chart-donut-variant": "\U0000E7AF", "chart-gantt": "\U0000E66B", "chart-histogram": "\U0000E128", "chart-line": "\U0000E129", "chart-line-stacked": "\U0000E76A", "chart-line-variant": "\U0000E7B0", "chart-multiline": "\U0000E8D3", "chart-multiple": "\U0000F212", "chart-pie": "\U0000E12A", "chart-ppf": "\U0000F37F", "chart-sankey": "\U0000F1DE", "chart-sankey-variant": "\U0000F1DF", "chart-scatter-plot": "\U0000EE91", "chart-scatter-plot-hexbin": "\U0000E66C", "chart-timeline": "\U0000E66D", "chart-timeline-variant": "\U0000EE92", "chart-tree": "\U0000EE93", "chat": "\U0000EB78", "chat-alert": "\U0000EB79", "chat-alert-outline": "\U0000F2C8", "chat-outline": "\U0000EEDD", "chat-processing": "\U0000EB7A", "chat-processing-outline": "\U0000F2C9", "chat-sleep": "\U0000F2D0", "chat-sleep-outline": "\U0000F2D1", "check": "\U0000E12B", "check-all": "\U0000E12C", "check-bold": "\U0000EE1D", "check-box-multiple-outline": "\U0000EC50", "check-box-outline": "\U0000EC51", "check-circle": "\U0000E5DF", "check-circle-outline": "\U0000E5E0", "check-decagram": "\U0000E790", "check-network": "\U0000EC52", "check-network-outline": "\U0000EC53", "check-outline": "\U0000E854", "check-underline": "\U0000EE1E", "check-underline-circle": "\U0000EE1F", "check-underline-circle-outline": "\U0000EE20", "checkbook": "\U0000EA9C", "checkbox-blank": "\U0000E12D", "checkbox-blank-circle": "\U0000E12E", "checkbox-blank-circle-outline": "\U0000E12F", "checkbox-blank-off": "\U0000F2EB", "checkbox-blank-off-outline": "\U0000F2EC", "checkbox-blank-outline": "\U0000E130", "checkbox-intermediate": "\U0000E855", "checkbox-marked": "\U0000E131", "checkbox-marked-circle": "\U0000E132", "checkbox-marked-circle-outline": "\U0000E133", "checkbox-marked-outline": "\U0000E134", "checkbox-multiple-blank": "\U0000E135", "checkbox-multiple-blank-circle": "\U0000E63A", "checkbox-multiple-blank-circle-outline": "\U0000E63B", "checkbox-multiple-blank-outline": "\U0000E136", "checkbox-multiple-marked": "\U0000E137", "checkbox-multiple-marked-circle": "\U0000E63C", "checkbox-multiple-marked-circle-outline": "\U0000E63D", "checkbox-multiple-marked-outline": "\U0000E138", "checkerboard": "\U0000E139", "checkerboard-minus": "\U0000F201", "checkerboard-plus": "\U0000F200", "checkerboard-remove": "\U0000F202", "cheese": "\U0000F2B8", "cheese-off": "\U0000F3ED", "chef-hat": "\U0000EB7B", "chemical-weapon": "\U0000E13A", "chess-bishop": "\U0000E85B", "chess-king": "\U0000E856", "chess-knight": "\U0000E857", "chess-pawn": "\U0000E858", "chess-queen": "\U0000E859", "chess-rook": "\U0000E85A", "chevron-double-down": "\U0000E13B", "chevron-double-left": "\U0000E13C", "chevron-double-right": "\U0000E13D", "chevron-double-up": "\U0000E13E", "chevron-down": "\U0000E13F", "chevron-down-box": "\U0000E9D5", "chevron-down-box-outline": "\U0000E9D6", "chevron-down-circle": "\U0000EB25", "chevron-down-circle-outline": "\U0000EB26", "chevron-left": "\U0000E140", "chevron-left-box": "\U0000E9D7", "chevron-left-box-outline": "\U0000E9D8", "chevron-left-circle": "\U0000EB27", "chevron-left-circle-outline": "\U0000EB28", "chevron-right": "\U0000E141", "chevron-right-box": "\U0000E9D9", "chevron-right-box-outline": "\U0000E9DA", "chevron-right-circle": "\U0000EB29", "chevron-right-circle-outline": "\U0000EB2A", "chevron-triple-down": "\U0000EDB8", "chevron-triple-left": "\U0000EDB9", "chevron-triple-right": "\U0000EDBA", "chevron-triple-up": "\U0000EDBB", "chevron-up": "\U0000E142", "chevron-up-box": "\U0000E9DB", "chevron-up-box-outline": "\U0000E9DC", "chevron-up-circle": "\U0000EB2B", "chevron-up-circle-outline": "\U0000EB2C", "chili-hot": "\U0000E7B1", "chili-medium": "\U0000E7B2", "chili-mild": "\U0000E7B3", "chip": "\U0000E619", "christianity": "\U0000E952", "christianity-outline": "\U0000ECF5", "church": "\U0000E143", "cigar": "\U0000F188", "circle": "\U0000E764", "circle-double": "\U0000EE94", "circle-edit-outline": "\U0000E8D4", "circle-expand": "\U0000EE95", "circle-half": "\U0000F394", "circle-half-full": "\U0000F395", "circle-medium": "\U0000E9DD", "circle-multiple": "\U0000EB37", "circle-multiple-outline": "\U0000E694", "circle-off-outline": "\U0000F0D2", "circle-outline": "\U0000E765", "circle-slice-1": "\U0000EA9D", "circle-slice-2": "\U0000EA9E", "circle-slice-3": "\U0000EA9F", "circle-slice-4": "\U0000EAA0", "circle-slice-5": "\U0000EAA1", "circle-slice-6": "\U0000EAA2", "circle-slice-7": "\U0000EAA3", "circle-slice-8": "\U0000EAA4", "circle-small": "\U0000E9DE", "circular-saw": "\U0000EE21", "city": "\U0000E145", "city-variant": "\U0000EA35", "city-variant-outline": "\U0000EA36", "clipboard": "\U0000E146", "clipboard-account": "\U0000E147", "clipboard-account-outline": "\U0000EC54", "clipboard-alert": "\U0000E148", "clipboard-alert-outline": "\U0000ECF6", "clipboard-arrow-down": "\U0000E149", "clipboard-arrow-down-outline": "\U0000EC55", "clipboard-arrow-left": "\U0000E14A", "clipboard-arrow-left-outline": "\U0000ECF7", "clipboard-arrow-right": "\U0000ECF8", "clipboard-arrow-right-outline": "\U0000ECF9", "clipboard-arrow-up": "\U0000EC56", "clipboard-arrow-up-outline": "\U0000EC57", "clipboard-check": "\U0000E14D", "clipboard-check-multiple": "\U0000F262", "clipboard-check-multiple-outline": "\U0000F263", "clipboard-check-outline": "\U0000E8A7", "clipboard-file": "\U0000F264", "clipboard-file-outline": "\U0000F265", "clipboard-flow": "\U0000E6C7", "clipboard-flow-outline": "\U0000F116", "clipboard-list": "\U0000F0D3", "clipboard-list-outline": "\U0000F0D4", "clipboard-multiple": "\U0000F266", "clipboard-multiple-outline": "\U0000F267", "clipboard-outline": "\U0000E14B", "clipboard-play": "\U0000EC58", "clipboard-play-multiple": "\U0000F268", "clipboard-play-multiple-outline": "\U0000F269", "clipboard-play-outline": "\U0000EC59", "clipboard-plus": "\U0000E750", "clipboard-plus-outline": "\U0000F31E", "clipboard-pulse": "\U0000E85C", "clipboard-pulse-outline": "\U0000E85D", "clipboard-text": "\U0000E14C", "clipboard-text-multiple": "\U0000F26A", "clipboard-text-multiple-outline": "\U0000F26B", "clipboard-text-outline": "\U0000EA37", "clipboard-text-play": "\U0000EC5A", "clipboard-text-play-outline": "\U0000EC5B", "clippy": "\U0000E14E", "clock": "\U0000E953", "clock-alert": "\U0000E954", "clock-alert-outline": "\U0000E5CD", "clock-check": "\U0000EFA7", "clock-check-outline": "\U0000EFA8", "clock-digital": "\U0000EE96", "clock-end": "\U0000E150", "clock-fast": "\U0000E151", "clock-in": "\U0000E152", "clock-out": "\U0000E153", "clock-outline": "\U0000E14F", "clock-start": "\U0000E154", "close": "\U0000E155", "close-box": "\U0000E156", "close-box-multiple": "\U0000EC5C", "close-box-multiple-outline": "\U0000EC5D", "close-box-outline": "\U0000E157", "close-circle": "\U0000E158", "close-circle-multiple": "\U0000E629", "close-circle-multiple-outline": "\U0000E882", "close-circle-outline": "\U0000E159", "close-network": "\U0000E15A", "close-network-outline": "\U0000EC5E", "close-octagon": "\U0000E15B", "close-octagon-outline": "\U0000E15C", "close-outline": "\U0000E6C8", "close-thick": "\U0000F397", "closed-caption": "\U0000E15D", "closed-caption-outline": "\U0000EDBC", "cloud": "\U0000E15E", "cloud-alert": "\U0000E9DF", "cloud-braces": "\U0000E7B4", "cloud-check": "\U0000E15F", "cloud-check-outline": "\U0000F2CB", "cloud-circle": "\U0000E160", "cloud-download": "\U0000E161", "cloud-download-outline": "\U0000EB7C", "cloud-lock": "\U0000F1F0", "cloud-lock-outline": "\U0000F1F1", "cloud-off-outline": "\U0000E163", "cloud-outline": "\U0000E162", "cloud-print": "\U0000E164", "cloud-print-outline": "\U0000E165", "cloud-question": "\U0000EA38", "cloud-refresh": "\U0000E529", "cloud-search": "\U0000E955", "cloud-search-outline": "\U0000E956", "cloud-sync": "\U0000E63E", "cloud-sync-outline": "\U0000F2D5", "cloud-tags": "\U0000E7B5", "cloud-upload": "\U0000E166", "cloud-upload-outline": "\U0000EB7D", "clover": "\U0000E815", "coach-lamp": "\U0000F01F", "coat-rack": "\U0000F09D", "code-array": "\U0000E167", "code-braces": "\U0000E168", "code-braces-box": "\U0000F0D5", "code-brackets": "\U0000E169", "code-equal": "\U0000E16A", "code-greater-than": "\U0000E16B", "code-greater-than-or-equal": "\U0000E16C", "code-json": "\U0000E625", "code-less-than": "\U0000E16D", "code-less-than-or-equal": "\U0000E16E", "code-not-equal": "\U0000E16F", "code-not-equal-variant": "\U0000E170", "code-parentheses": "\U0000E171", "code-parentheses-box": "\U0000F0D6", "code-string": "\U0000E172", "code-tags": "\U0000E173", "code-tags-check": "\U0000E693", "codepen": "\U0000E174", "coffee": "\U0000E175", "coffee-maker": "\U0000F09E", "coffee-off": "\U0000EFA9", "coffee-off-outline": "\U0000EFAA", "coffee-outline": "\U0000E6C9", "coffee-to-go": "\U0000E176", "coffee-to-go-outline": "\U0000F30D", "coffin": "\U0000EB7E", "cog": "\U0000E492", "cog-box": "\U0000E493", "cog-clockwise": "\U0000F1DC", "cog-counterclockwise": "\U0000F1DD", "cog-off": "\U0000F3CD", "cog-off-outline": "\U0000F3CE", "cog-outline": "\U0000E8BA", "cog-transfer": "\U0000F05A", "cog-transfer-outline": "\U0000F05B", "cogs": "\U0000E8D5", "collage": "\U0000E63F", "collapse-all": "\U0000EAA5", "collapse-all-outline": "\U0000EAA6", "color-helper": "\U0000E178", "comma": "\U0000EE22", "comma-box": "\U0000EE2A", "comma-box-outline": "\U0000EE23", "comma-circle": "\U0000EE24", "comma-circle-outline": "\U0000EE25", "comment": "\U0000E179", "comment-account": "\U0000E17A", "comment-account-outline": "\U0000E17B", "comment-alert": "\U0000E17C", "comment-alert-outline": "\U0000E17D", "comment-arrow-left": "\U0000E9E0", "comment-arrow-left-outline": "\U0000E9E1", "comment-arrow-right": "\U0000E9E2", "comment-arrow-right-outline": "\U0000E9E3", "comment-check": "\U0000E17E", "comment-check-outline": "\U0000E17F", "comment-edit": "\U0000F1BE", "comment-edit-outline": "\U0000F2C3", "comment-eye": "\U0000EA39", "comment-eye-outline": "\U0000EA3A", "comment-multiple": "\U0000E85E", "comment-multiple-outline": "\U0000E180", "comment-outline": "\U0000E181", "comment-plus": "\U0000E9E4", "comment-plus-outline": "\U0000E182", "comment-processing": "\U0000E183", "comment-processing-outline": "\U0000E184", "comment-question": "\U0000E816", "comment-question-outline": "\U0000E185", "comment-quote": "\U0000F020", "comment-quote-outline": "\U0000F021", "comment-remove": "\U0000E5DD", "comment-remove-outline": "\U0000E186", "comment-search": "\U0000EA3B", "comment-search-outline": "\U0000EA3C", "comment-text": "\U0000E187", "comment-text-multiple": "\U0000E85F", "comment-text-multiple-outline": "\U0000E860", "comment-text-outline": "\U0000E188", "compare": "\U0000E189", "compass": "\U0000E18A", "compass-off": "\U0000EB7F", "compass-off-outline": "\U0000EB80", "compass-outline": "\U0000E18B", "compass-rose": "\U0000F381", "concourse-ci": "\U0000F09F", "console": "\U0000E18C", "console-line": "\U0000E7B6", "console-network": "\U0000E8A8", "console-network-outline": "\U0000EC5F", "consolidate": "\U0000F0D7", "contactless-payment": "\U0000ED69", "contactless-payment-circle": "\U0000E320", "contactless-payment-circle-outline": "\U0000E407", "contacts": "\U0000E6CA", "contacts-outline": "\U0000E5B7", "contain": "\U0000EA3D", "contain-end": "\U0000EA3E", "contain-start": "\U0000EA3F", "content-copy": "\U0000E18E", "content-cut": "\U0000E18F", "content-duplicate": "\U0000E190", "content-paste": "\U0000E191", "content-save": "\U0000E192", "content-save-alert": "\U0000EF41", "content-save-alert-outline": "\U0000EF42", "content-save-all": "\U0000E193", "content-save-all-outline": "\U0000EF43", "content-save-edit": "\U0000ECFA", "content-save-edit-outline": "\U0000ECFB", "content-save-move": "\U0000EE26", "content-save-move-outline": "\U0000EE27", "content-save-outline": "\U0000E817", "content-save-settings": "\U0000E61A", "content-save-settings-outline": "\U0000EB2D", "contrast": "\U0000E194", "contrast-box": "\U0000E195", "contrast-circle": "\U0000E196", "controller-classic": "\U0000EB81", "controller-classic-outline": "\U0000EB82", "cookie": "\U0000E197", "coolant-temperature": "\U0000E3C7", "copyright": "\U0000E5E5", "cordova": "\U0000E957", "corn": "\U0000E7B7", "corn-off": "\U0000F3EE", "counter": "\U0000E198", "cow": "\U0000E199", "cpu-32-bit": "\U0000EEDE", "cpu-64-bit": "\U0000EEDF", "crane": "\U0000E861", "creation": "\U0000E673", "creative-commons": "\U0000ED6A", "credit-card": "\U0000EFEE", "credit-card-check": "\U0000F3CF", "credit-card-check-outline": "\U0000F3D0", "credit-card-clock": "\U0000EEE0", "credit-card-clock-outline": "\U0000EEE1", "credit-card-marker": "\U0000E6A7", "credit-card-marker-outline": "\U0000EDBD", "credit-card-minus": "\U0000EFAB", "credit-card-minus-outline": "\U0000EFAC", "credit-card-multiple": "\U0000EFEF", "credit-card-multiple-outline": "\U0000E19B", "credit-card-off": "\U0000EFF0", "credit-card-off-outline": "\U0000E5E3", "credit-card-outline": "\U0000E19A", "credit-card-plus": "\U0000EFF1", "credit-card-plus-outline": "\U0000E675", "credit-card-refund": "\U0000EFF2", "credit-card-refund-outline": "\U0000EAA7", "credit-card-remove": "\U0000EFAD", "credit-card-remove-outline": "\U0000EFAE", "credit-card-scan": "\U0000EFF3", "credit-card-scan-outline": "\U0000E19C", "credit-card-settings": "\U0000EFF4", "credit-card-settings-outline": "\U0000E8D6", "credit-card-wireless": "\U0000E801", "credit-card-wireless-off": "\U0000E579", "credit-card-wireless-off-outline": "\U0000E57A", "credit-card-wireless-outline": "\U0000ED6B", "cricket": "\U0000ED6C", "crop": "\U0000E19D", "crop-free": "\U0000E19E", "crop-landscape": "\U0000E19F", "crop-portrait": "\U0000E1A0", "crop-rotate": "\U0000E695", "crop-square": "\U0000E1A1", "crosshairs": "\U0000E1A2", "crosshairs-gps": "\U0000E1A3", "crosshairs-off": "\U0000EF44", "crosshairs-question": "\U0000F135", "crown": "\U0000E1A4", "crown-outline": "\U0000F1CF", "cryengine": "\U0000E958", "crystal-ball": "\U0000EB2E", "cube": "\U0000E1A5", "cube-outline": "\U0000E1A6", "cube-scan": "\U0000EB83", "cube-send": "\U0000E1A7", "cube-unfolded": "\U0000E1A8", "cup": "\U0000E1A9", "cup-off": "\U0000E5E4", "cup-off-outline": "\U0000F37C", "cup-outline": "\U0000F30E", "cup-water": "\U0000E1AA", "cupboard": "\U0000EF45", "cupboard-outline": "\U0000EF46", "cupcake": "\U0000E959", "curling": "\U0000E862", "currency-bdt": "\U0000E863", "currency-brl": "\U0000EB84", "currency-btc": "\U0000E1AB", "currency-cny": "\U0000E7B9", "currency-eth": "\U0000E7BA", "currency-eur": "\U0000E1AC", "currency-eur-off": "\U0000F314", "currency-gbp": "\U0000E1AD", "currency-ils": "\U0000EC60", "currency-inr": "\U0000E1AE", "currency-jpy": "\U0000E7BB", "currency-krw": "\U0000E7BC", "currency-kzt": "\U0000E864", "currency-ngn": "\U0000E1AF", "currency-php": "\U0000E9E5", "currency-rial": "\U0000EE9B", "currency-rub": "\U0000E1B0", "currency-sign": "\U0000E7BD", "currency-try": "\U0000E1B1", "currency-twd": "\U0000E7BE", "currency-usd": "\U0000E1C0", "currency-usd-circle": "\U0000F16A", "currency-usd-circle-outline": "\U0000E177", "currency-usd-off": "\U0000E679", "current-ac": "\U0000E95A", "current-dc": "\U0000E95B", "cursor-default": "\U0000E1BF", "cursor-default-click": "\U0000ECFC", "cursor-default-click-outline": "\U0000ECFD", "cursor-default-gesture": "\U0000F126", "cursor-default-gesture-outline": "\U0000F127", "cursor-default-outline": "\U0000E1BE", "cursor-move": "\U0000E1BD", "cursor-pointer": "\U0000E1BC", "cursor-text": "\U0000E5E6", "database": "\U0000E1BB", "database-check": "\U0000EAA8", "database-edit": "\U0000EB85", "database-export": "\U0000E95D", "database-import": "\U0000E95C", "database-lock": "\U0000EAA9", "database-marker": "\U0000F2F5", "database-minus": "\U0000E1BA", "database-plus": "\U0000E1B9", "database-refresh": "\U0000E5C1", "database-remove": "\U0000ECFF", "database-search": "\U0000E865", "database-settings": "\U0000ED00", "database-sync": "\U0000ECFE", "death-star": "\U0000E8D7", "death-star-variant": "\U0000E8D8", "deathly-hallows": "\U0000EB86", "debian": "\U0000E8D9", "debug-step-into": "\U0000E1B8", "debug-step-out": "\U0000E1B7", "debug-step-over": "\U0000E1B6", "decagram": "\U0000E76B", "decagram-outline": "\U0000E76C", "decimal": "\U0000F0A0", "decimal-comma": "\U0000F0A1", "decimal-comma-decrease": "\U0000F0A2", "decimal-comma-increase": "\U0000F0A3", "decimal-decrease": "\U0000E1B5", "decimal-increase": "\U0000E1B4", "delete": "\U0000E1B3", "delete-alert": "\U0000F0A4", "delete-alert-outline": "\U0000F0A5", "delete-circle": "\U0000E682", "delete-circle-outline": "\U0000EB87", "delete-empty": "\U0000E6CB", "delete-empty-outline": "\U0000EE9C", "delete-forever": "\U0000E5E7", "delete-forever-outline": "\U0000EB88", "delete-off": "\U0000F0A6", "delete-off-outline": "\U0000F0A7", "delete-outline": "\U0000E9E6", "delete-restore": "\U0000E818", "delete-sweep": "\U0000E5E8", "delete-sweep-outline": "\U0000EC61", "delete-variant": "\U0000E1B2", "delta": "\U0000E1C1", "desk": "\U0000F238", "desk-lamp": "\U0000E95E", "deskphone": "\U0000E1C2", "desktop-classic": "\U0000E7BF", "desktop-mac": "\U0000E1C3", "desktop-mac-dashboard": "\U0000E9E7", "desktop-tower": "\U0000E1C4", "desktop-tower-monitor": "\U0000EAAA", "details": "\U0000E1C5", "dev-to": "\U0000ED6D", "developer-board": "\U0000E696", "deviantart": "\U0000E1C6", "devices": "\U0000EFAF", "diabetes": "\U0000F125", "dialpad": "\U0000E61B", "diameter": "\U0000EC62", "diameter-outline": "\U0000EC63", "diameter-variant": "\U0000EC64", "diamond": "\U0000EB89", "diamond-outline": "\U0000EB8A", "diamond-stone": "\U0000E1C7", "dice-1": "\U0000E1C9", "dice-1-outline": "\U0000F149", "dice-2": "\U0000E1CA", "dice-2-outline": "\U0000F14A", "dice-3": "\U0000E1CB", "dice-3-outline": "\U0000F14B", "dice-4": "\U0000E1CC", "dice-4-outline": "\U0000F14C", "dice-5": "\U0000E1CD", "dice-5-outline": "\U0000F14D", "dice-6": "\U0000E1CE", "dice-6-outline": "\U0000F14E", "dice-d10": "\U0000F152", "dice-d10-outline": "\U0000E76E", "dice-d12": "\U0000F153", "dice-d12-outline": "\U0000E866", "dice-d20": "\U0000F154", "dice-d20-outline": "\U0000E5E9", "dice-d4": "\U0000F14F", "dice-d4-outline": "\U0000E5EA", "dice-d6": "\U0000F150", "dice-d6-outline": "\U0000E5EC", "dice-d8": "\U0000F151", "dice-d8-outline": "\U0000E5EB", "dice-multiple": "\U0000E76D", "dice-multiple-outline": "\U0000F155", "digital-ocean": "\U0000F236", "dip-switch": "\U0000E7C0", "directions": "\U0000E1CF", "directions-fork": "\U0000E640", "disc": "\U0000E5ED", "disc-alert": "\U0000E1D0", "disc-player": "\U0000E95F", "discord": "\U0000E66E", "dishwasher": "\U0000EAAB", "dishwasher-alert": "\U0000F1B7", "dishwasher-off": "\U0000F1B8", "disqus": "\U0000E1D1", "distribute-horizontal-center": "\U0000F1C8", "distribute-horizontal-left": "\U0000F1C7", "distribute-horizontal-right": "\U0000F1C9", "distribute-vertical-bottom": "\U0000F1CA", "distribute-vertical-center": "\U0000F1CB", "distribute-vertical-top": "\U0000F1CC", "diving-flippers": "\U0000EDBE", "diving-helmet": "\U0000EDBF", "diving-scuba": "\U0000EDC0", "diving-scuba-flag": "\U0000EDC1", "diving-scuba-tank": "\U0000EDC2", "diving-scuba-tank-multiple": "\U0000EDC3", "diving-snorkel": "\U0000EDC4", "division": "\U0000E1D3", "division-box": "\U0000E1D4", "dlna": "\U0000EA40", "dna": "\U0000E683", "dns": "\U0000E1D5", "dns-outline": "\U0000EB8B", "do-not-disturb": "\U0000E697", "do-not-disturb-off": "\U0000E698", "dock-bottom": "\U0000F0A8", "dock-left": "\U0000F0A9", "dock-right": "\U0000F0AA", "dock-window": "\U0000F0AB", "docker": "\U0000E867", "doctor": "\U0000EA41", "dog": "\U0000EA42", "dog-service": "\U0000EAAC", "dog-side": "\U0000EA43", "dolby": "\U0000E6B2", "dolly": "\U0000EE9D", "domain": "\U0000E1D6", "domain-off": "\U0000ED6E", "domain-plus": "\U0000F0AC", "domain-remove": "\U0000F0AD", "domino-mask": "\U0000F022", "donkey": "\U0000E7C1", "door": "\U0000E819", "door-closed": "\U0000E81A", "door-closed-lock": "\U0000F0AE", "door-open": "\U0000E81B", "doorbell": "\U0000F2E5", "doorbell-video": "\U0000E868", "dot-net": "\U0000EAAD", "dots-horizontal": "\U0000E1D7", "dots-horizontal-circle": "\U0000E7C2", "dots-horizontal-circle-outline": "\U0000EB8C", "dots-vertical": "\U0000E1D8", "dots-vertical-circle": "\U0000E7C3", "dots-vertical-circle-outline": "\U0000EB8D", "douban": "\U0000E699", "download": "\U0000E1D9", "download-lock": "\U0000F31F", "download-lock-outline": "\U0000F320", "download-multiple": "\U0000E9E8", "download-network": "\U0000E6F3", "download-network-outline": "\U0000EC65", "download-off": "\U0000F0AF", "download-off-outline": "\U0000F0B0", "download-outline": "\U0000EB8E", "drag": "\U0000E1DA", "drag-horizontal": "\U0000E1DB", "drag-horizontal-variant": "\U0000F2EF", "drag-variant": "\U0000EB8F", "drag-vertical": "\U0000E1DC", "drag-vertical-variant": "\U0000F2F0", "drama-masks": "\U0000ED01", "draw": "\U0000EF48", "drawing": "\U0000E1DD", "drawing-box": "\U0000E1DE", "dresser": "\U0000EF49", "dresser-outline": "\U0000EF4A", "drone": "\U0000E1E1", "dropbox": "\U0000E1E2", "drupal": "\U0000E1E3", "duck": "\U0000E1E4", "dumbbell": "\U0000E1E5", "dump-truck": "\U0000EC66", "ear-hearing": "\U0000E7C4", "ear-hearing-off": "\U0000EA44", "earth": "\U0000E1E6", "earth-arrow-right": "\U0000F310", "earth-box": "\U0000E6CC", "earth-box-off": "\U0000E6CD", "earth-off": "\U0000E1E7", "egg": "\U0000EAAE", "egg-easter": "\U0000EAAF", "egg-off": "\U0000F3EF", "egg-off-outline": "\U0000F3F0", "egg-outline": "\U0000F3F1", "eight-track": "\U0000E9E9", "eject": "\U0000E1E9", "eject-outline": "\U0000EB90", "electric-switch": "\U0000EE9E", "electric-switch-closed": "\U0000F0D8", "electron-framework": "\U0000F023", "elephant": "\U0000E7C5", "elevation-decline": "\U0000E1EA", "elevation-rise": "\U0000E1EB", "elevator": "\U0000E1EC", "elevator-down": "\U0000F2C1", "elevator-passenger": "\U0000F380", "elevator-up": "\U0000F2C0", "ellipse": "\U0000EE9F", "ellipse-outline": "\U0000EEA0", "email": "\U0000E1ED", "email-alert": "\U0000E6CE", "email-alert-outline": "\U0000ED41", "email-box": "\U0000ED02", "email-check": "\U0000EAB0", "email-check-outline": "\U0000EAB1", "email-edit": "\U0000EEE2", "email-edit-outline": "\U0000EEE3", "email-lock": "\U0000E1F0", "email-mark-as-unread": "\U0000EB91", "email-minus": "\U0000EEE4", "email-minus-outline": "\U0000EEE5", "email-multiple": "\U0000EEE6", "email-multiple-outline": "\U0000EEE7", "email-newsletter": "\U0000EFB0", "email-off": "\U0000F3E2", "email-off-outline": "\U0000F3E3", "email-open": "\U0000E1EE", "email-open-multiple": "\U0000EEE8", "email-open-multiple-outline": "\U0000EEE9", "email-open-outline": "\U0000E5EE", "email-outline": "\U0000E1EF", "email-plus": "\U0000E9EA", "email-plus-outline": "\U0000E9EB", "email-receive": "\U0000F0D9", "email-receive-outline": "\U0000F0DA", "email-search": "\U0000E960", "email-search-outline": "\U0000E961", "email-send": "\U0000F0DB", "email-send-outline": "\U0000F0DC", "email-sync": "\U0000F2C6", "email-sync-outline": "\U0000F2C7", "email-variant": "\U0000E5EF", "ember": "\U0000EB2F", "emby": "\U0000E6B3", "emoticon": "\U0000EC67", "emoticon-angry": "\U0000EC68", "emoticon-angry-outline": "\U0000EC69", "emoticon-confused": "\U0000F0DD", "emoticon-confused-outline": "\U0000F0DE", "emoticon-cool": "\U0000EC6A", "emoticon-cool-outline": "\U0000E1F2", "emoticon-cry": "\U0000EC6B", "emoticon-cry-outline": "\U0000EC6C", "emoticon-dead": "\U0000EC6D", "emoticon-dead-outline": "\U0000E69A", "emoticon-devil": "\U0000EC6E", "emoticon-devil-outline": "\U0000E1F3", "emoticon-excited": "\U0000EC6F", "emoticon-excited-outline": "\U0000E69B", "emoticon-frown": "\U0000EF4B", "emoticon-frown-outline": "\U0000EF4C", "emoticon-happy": "\U0000EC70", "emoticon-happy-outline": "\U0000E1F4", "emoticon-kiss": "\U0000EC71", "emoticon-kiss-outline": "\U0000EC72", "emoticon-lol": "\U0000F213", "emoticon-lol-outline": "\U0000F214", "emoticon-neutral": "\U0000EC73", "emoticon-neutral-outline": "\U0000E1F5", "emoticon-outline": "\U0000E1F1", "emoticon-poop": "\U0000E1F6", "emoticon-poop-outline": "\U0000EC74", "emoticon-sad": "\U0000EC75", "emoticon-sad-outline": "\U0000E1F7", "emoticon-tongue": "\U0000E1F8", "emoticon-tongue-outline": "\U0000EC76", "emoticon-wink": "\U0000EC77", "emoticon-wink-outline": "\U0000EC78", "engine": "\U0000E1F9", "engine-off": "\U0000EA45", "engine-off-outline": "\U0000EA46", "engine-outline": "\U0000E1FA", "epsilon": "\U0000F0DF", "equal": "\U0000E1FB", "equal-box": "\U0000E1FC", "equalizer": "\U0000EEA1", "equalizer-outline": "\U0000EEA2", "eraser": "\U0000E1FD", "eraser-variant": "\U0000E641", "escalator": "\U0000E1FE", "escalator-box": "\U0000F398", "escalator-down": "\U0000F2BF", "escalator-up": "\U0000F2BE", "eslint": "\U0000EC79", "et": "\U0000EAB2", "ethereum": "\U0000E869", "ethernet": "\U0000E1FF", "ethernet-cable": "\U0000E200", "ethernet-cable-off": "\U0000E201", "ev-station": "\U0000E5F0", "evernote": "\U0000E203", "excavator": "\U0000F024", "exclamation": "\U0000E204", "exclamation-thick": "\U0000F237", "exit-run": "\U0000EA47", "exit-to-app": "\U0000E205", "expand-all": "\U0000EAB3", "expand-all-outline": "\U0000EAB4", "expansion-card": "\U0000E8AD", "expansion-card-variant": "\U0000EFB1", "exponent": "\U0000E962", "exponent-box": "\U0000E963", "export": "\U0000E206", "export-variant": "\U0000EB92", "eye": "\U0000E207", "eye-check": "\U0000ED03", "eye-check-outline": "\U0000ED04", "eye-circle": "\U0000EB93", "eye-circle-outline": "\U0000EB94", "eye-minus": "\U0000F025", "eye-minus-outline": "\U0000F026", "eye-off": "\U0000E208", "eye-off-outline": "\U0000E6D0", "eye-outline": "\U0000E6CF", "eye-plus": "\U0000E86A", "eye-plus-outline": "\U0000E86B", "eye-settings": "\U0000E86C", "eye-settings-outline": "\U0000E86D", "eyedropper": "\U0000E209", "eyedropper-minus": "\U0000F3DC", "eyedropper-off": "\U0000F3DE", "eyedropper-plus": "\U0000F3DB", "eyedropper-remove": "\U0000F3DD", "eyedropper-variant": "\U0000E20A", "face": "\U0000E642", "face-agent": "\U0000ED6F", "face-outline": "\U0000EB95", "face-profile": "\U0000E643", "face-profile-woman": "\U0000F075", "face-recognition": "\U0000EC7A", "face-woman": "\U0000F076", "face-woman-outline": "\U0000F077", "facebook": "\U0000E20B", "facebook-messenger": "\U0000E20D", "facebook-workplace": "\U0000EB30", "factory": "\U0000E20E", "fan": "\U0000E20F", "fan-off": "\U0000E81C", "fast-forward": "\U0000E210", "fast-forward-10": "\U0000ED70", "fast-forward-30": "\U0000ED05", "fast-forward-5": "\U0000F1F7", "fast-forward-outline": "\U0000E6D1", "fax": "\U0000E211", "feather": "\U0000E6D2", "feature-search": "\U0000EA48", "feature-search-outline": "\U0000EA49", "fedora": "\U0000E8DA", "ferris-wheel": "\U0000EEA3", "ferry": "\U0000E212", "file": "\U0000E213", "file-account": "\U0000E73A", "file-account-outline": "\U0000F027", "file-alert": "\U0000EA4A", "file-alert-outline": "\U0000EA4B", "file-cabinet": "\U0000EAB5", "file-cad": "\U0000EEEA", "file-cad-box": "\U0000EEEB", "file-cancel": "\U0000EDC5", "file-cancel-outline": "\U0000EDC6", "file-certificate": "\U0000F185", "file-certificate-outline": "\U0000F186", "file-chart": "\U0000E214", "file-chart-outline": "\U0000F028", "file-check": "\U0000E215", "file-check-outline": "\U0000EE28", "file-clock": "\U0000F2E0", "file-clock-outline": "\U0000F2E1", "file-cloud": "\U0000E216", "file-cloud-outline": "\U0000F029", "file-code": "\U0000E22D", "file-code-outline": "\U0000F02A", "file-cog": "\U0000F07A", "file-cog-outline": "\U0000F07B", "file-compare": "\U0000E8A9", "file-delimited": "\U0000E217", "file-delimited-outline": "\U0000EEA4", "file-document": "\U0000E218", "file-document-edit": "\U0000EDC7", "file-document-edit-outline": "\U0000EDC8", "file-document-outline": "\U0000E9ED", "file-download": "\U0000E964", "file-download-outline": "\U0000E965", "file-edit": "\U0000F1E6", "file-edit-outline": "\U0000F1E7", "file-excel": "\U0000E21A", "file-excel-box": "\U0000E21B", "file-excel-box-outline": "\U0000F02B", "file-excel-outline": "\U0000F02C", "file-export": "\U0000E21C", "file-export-outline": "\U0000F02D", "file-eye": "\U0000EDC9", "file-eye-outline": "\U0000EDCA", "file-find": "\U0000E21D", "file-find-outline": "\U0000EB96", "file-hidden": "\U0000E612", "file-image": "\U0000E21E", "file-image-outline": "\U0000EEAF", "file-import": "\U0000E21F", "file-import-outline": "\U0000F02E", "file-key": "\U0000F183", "file-key-outline": "\U0000F184", "file-link": "\U0000F176", "file-link-outline": "\U0000F177", "file-lock": "\U0000E220", "file-lock-outline": "\U0000F02F", "file-move": "\U0000EAB8", "file-move-outline": "\U0000F030", "file-multiple": "\U0000E221", "file-multiple-outline": "\U0000F031", "file-music": "\U0000E222", "file-music-outline": "\U0000EE29", "file-outline": "\U0000E223", "file-pdf": "\U0000E224", "file-pdf-box": "\U0000E225", "file-pdf-box-outline": "\U0000EFB2", "file-pdf-outline": "\U0000EE2C", "file-percent": "\U0000E81D", "file-percent-outline": "\U0000F032", "file-phone": "\U0000F178", "file-phone-outline": "\U0000F179", "file-plus": "\U0000E751", "file-plus-outline": "\U0000EEEC", "file-powerpoint": "\U0000E226", "file-powerpoint-box": "\U0000E227", "file-powerpoint-box-outline": "\U0000F033", "file-powerpoint-outline": "\U0000F034", "file-presentation-box": "\U0000E228", "file-question": "\U0000E86E", "file-question-outline": "\U0000F035", "file-refresh": "\U0000E917", "file-refresh-outline": "\U0000E540", "file-remove": "\U0000EB97", "file-remove-outline": "\U0000F036", "file-replace": "\U0000EB31", "file-replace-outline": "\U0000EB32", "file-restore": "\U0000E66F", "file-restore-outline": "\U0000F037", "file-search": "\U0000EC7B", "file-search-outline": "\U0000EC7C", "file-send": "\U0000E229", "file-send-outline": "\U0000F038", "file-settings": "\U0000F078", "file-settings-outline": "\U0000F079", "file-star": "\U0000F039", "file-star-outline": "\U0000F03A", "file-swap": "\U0000EFB3", "file-swap-outline": "\U0000EFB4", "file-sync": "\U0000F215", "file-sync-outline": "\U0000F216", "file-table": "\U0000EC7D", "file-table-box": "\U0000F0E0", "file-table-box-multiple": "\U0000F0E1", "file-table-box-multiple-outline": "\U0000F0E2", "file-table-box-outline": "\U0000F0E3", "file-table-outline": "\U0000EC7E", "file-tree": "\U0000E644", "file-tree-outline": "\U0000F3D1", "file-undo": "\U0000E8DB", "file-undo-outline": "\U0000F03B", "file-upload": "\U0000EA4C", "file-upload-outline": "\U0000EA4D", "file-video": "\U0000E22A", "file-video-outline": "\U0000EE2B", "file-word": "\U0000E22B", "file-word-box": "\U0000E22C", "file-word-box-outline": "\U0000F03C", "file-word-outline": "\U0000F03D", "film": "\U0000E22E", "filmstrip": "\U0000E22F", "filmstrip-box": "\U0000E331", "filmstrip-box-multiple": "\U0000ED17", "filmstrip-off": "\U0000E230", "filter": "\U0000E231", "filter-menu": "\U0000F0E4", "filter-menu-outline": "\U0000F0E5", "filter-minus": "\U0000EEED", "filter-minus-outline": "\U0000EEEE", "filter-outline": "\U0000E232", "filter-plus": "\U0000EEEF", "filter-plus-outline": "\U0000EEF0", "filter-remove": "\U0000E233", "filter-remove-outline": "\U0000E234", "filter-variant": "\U0000E235", "filter-variant-minus": "\U0000F111", "filter-variant-plus": "\U0000F112", "filter-variant-remove": "\U0000F03E", "finance": "\U0000E81E", "find-replace": "\U0000E6D3", "fingerprint": "\U0000E236", "fingerprint-off": "\U0000EEB0", "fire": "\U0000E237", "fire-extinguisher": "\U0000EEF1", "fire-hydrant": "\U0000F136", "fire-hydrant-alert": "\U0000F137", "fire-hydrant-off": "\U0000F138", "fire-truck": "\U0000E8AA", "firebase": "\U0000E966", "firefox": "\U0000E238", "fireplace": "\U0000EE2D", "fireplace-off": "\U0000EE2E", "firework": "\U0000EE2F", "fish": "\U0000E239", "fish-off": "\U0000F3F2", "fishbowl": "\U0000EEF2", "fishbowl-outline": "\U0000EEF3", "fit-to-page": "\U0000EEF4", "fit-to-page-outline": "\U0000EEF5", "flag": "\U0000E23A", "flag-checkered": "\U0000E23B", "flag-minus": "\U0000EB98", "flag-minus-outline": "\U0000F0B1", "flag-outline": "\U0000E23C", "flag-plus": "\U0000EB99", "flag-plus-outline": "\U0000F0B2", "flag-remove": "\U0000EB9A", "flag-remove-outline": "\U0000F0B3", "flag-triangle": "\U0000E23E", "flag-variant": "\U0000E23F", "flag-variant-outline": "\U0000E23D", "flare": "\U0000ED71", "flash": "\U0000E240", "flash-alert": "\U0000EEF6", "flash-alert-outline": "\U0000EEF7", "flash-auto": "\U0000E241", "flash-circle": "\U0000E81F", "flash-off": "\U0000E242", "flash-outline": "\U0000E6D4", "flash-red-eye": "\U0000E67A", "flashlight": "\U0000E243", "flashlight-off": "\U0000E244", "flask": "\U0000E092", "flask-empty": "\U0000E093", "flask-empty-minus": "\U0000F239", "flask-empty-minus-outline": "\U0000F23A", "flask-empty-off": "\U0000F3F3", "flask-empty-off-outline": "\U0000F3F4", "flask-empty-outline": "\U0000E094", "flask-empty-plus": "\U0000F23B", "flask-empty-plus-outline": "\U0000F23C", "flask-empty-remove": "\U0000F23D", "flask-empty-remove-outline": "\U0000F23E", "flask-minus": "\U0000F23F", "flask-minus-outline": "\U0000F240", "flask-off": "\U0000F3F5", "flask-off-outline": "\U0000F3F6", "flask-outline": "\U0000E095", "flask-plus": "\U0000F241", "flask-plus-outline": "\U0000F242", "flask-remove": "\U0000F243", "flask-remove-outline": "\U0000F244", "flask-round-bottom": "\U0000F24A", "flask-round-bottom-empty": "\U0000F24B", "flask-round-bottom-empty-outline": "\U0000F24C", "flask-round-bottom-outline": "\U0000F24D", "fleur-de-lis": "\U0000F302", "flip-horizontal": "\U0000F0E6", "flip-to-back": "\U0000E246", "flip-to-front": "\U0000E247", "flip-vertical": "\U0000F0E7", "floor-lamp": "\U0000E8DC", "floor-lamp-dual": "\U0000F03F", "floor-lamp-variant": "\U0000F040", "floor-plan": "\U0000E820", "floppy": "\U0000E248", "floppy-variant": "\U0000E9EE", "flower": "\U0000E249", "flower-outline": "\U0000E9EF", "flower-poppy": "\U0000ED07", "flower-tulip": "\U0000E9F0", "flower-tulip-outline": "\U0000E9F1", "focus-auto": "\U0000EF4D", "focus-field": "\U0000EF4E", "focus-field-horizontal": "\U0000EF4F", "focus-field-vertical": "\U0000EF50", "folder": "\U0000E24A", "folder-account": "\U0000E24B", "folder-account-outline": "\U0000EB9B", "folder-alert": "\U0000EDCB", "folder-alert-outline": "\U0000EDCC", "folder-clock": "\U0000EAB9", "folder-clock-outline": "\U0000EABA", "folder-cog": "\U0000F07E", "folder-cog-outline": "\U0000F07F", "folder-download": "\U0000E24C", "folder-download-outline": "\U0000F0E8", "folder-edit": "\U0000E8DD", "folder-edit-outline": "\U0000EDCD", "folder-google-drive": "\U0000E24D", "folder-heart": "\U0000F0E9", "folder-heart-outline": "\U0000F0EA", "folder-home": "\U0000F0B4", "folder-home-outline": "\U0000F0B5", "folder-image": "\U0000E24E", "folder-information": "\U0000F0B6", "folder-information-outline": "\U0000F0B7", "folder-key": "\U0000E8AB", "folder-key-network": "\U0000E8AC", "folder-key-network-outline": "\U0000EC7F", "folder-key-outline": "\U0000F0EB", "folder-lock": "\U0000E24F", "folder-lock-open": "\U0000E250", "folder-marker": "\U0000F26C", "folder-marker-outline": "\U0000F26D", "folder-move": "\U0000E251", "folder-move-outline": "\U0000F245", "folder-multiple": "\U0000E252", "folder-multiple-image": "\U0000E253", "folder-multiple-outline": "\U0000E254", "folder-music": "\U0000F358", "folder-music-outline": "\U0000F359", "folder-network": "\U0000E86F", "folder-network-outline": "\U0000EC80", "folder-open": "\U0000E76F", "folder-open-outline": "\U0000EDCE", "folder-outline": "\U0000E255", "folder-plus": "\U0000E256", "folder-plus-outline": "\U0000EB9C", "folder-pound": "\U0000ED08", "folder-pound-outline": "\U0000ED09", "folder-refresh": "\U0000E748", "folder-refresh-outline": "\U0000E541", "folder-remove": "\U0000E257", "folder-remove-outline": "\U0000EB9D", "folder-search": "\U0000E967", "folder-search-outline": "\U0000E968", "folder-settings": "\U0000F07C", "folder-settings-outline": "\U0000F07D", "folder-star": "\U0000E69C", "folder-star-multiple": "\U0000F3D2", "folder-star-multiple-outline": "\U0000F3D3", "folder-star-outline": "\U0000EB9E", "folder-swap": "\U0000EFB5", "folder-swap-outline": "\U0000EFB6", "folder-sync": "\U0000ED0A", "folder-sync-outline": "\U0000ED0B", "folder-table": "\U0000F2E2", "folder-table-outline": "\U0000F2E3", "folder-text": "\U0000EC81", "folder-text-outline": "\U0000EC82", "folder-upload": "\U0000E258", "folder-upload-outline": "\U0000F0EC", "folder-zip": "\U0000E6EA", "folder-zip-outline": "\U0000E7B8", "font-awesome": "\U0000E039", "food": "\U0000E259", "food-apple": "\U0000E25A", "food-apple-outline": "\U0000EC83", "food-croissant": "\U0000E7C7", "food-fork-drink": "\U0000E5F1", "food-off": "\U0000E5F2", "food-variant": "\U0000E25B", "food-variant-off": "\U0000F3E4", "foot-print": "\U0000EF51", "football": "\U0000E25C", "football-australian": "\U0000E25D", "football-helmet": "\U0000E25E", "forklift": "\U0000E7C8", "format-align-bottom": "\U0000E752", "format-align-center": "\U0000E25F", "format-align-justify": "\U0000E260", "format-align-left": "\U0000E261", "format-align-middle": "\U0000E753", "format-align-right": "\U0000E262", "format-align-top": "\U0000E754", "format-annotation-minus": "\U0000EABB", "format-annotation-plus": "\U0000E645", "format-bold": "\U0000E263", "format-clear": "\U0000E264", "format-color-fill": "\U0000E265", "format-color-highlight": "\U0000EE30", "format-color-marker-cancel": "\U0000F312", "format-color-text": "\U0000E69D", "format-columns": "\U0000E8DE", "format-float-center": "\U0000E266", "format-float-left": "\U0000E267", "format-float-none": "\U0000E268", "format-float-right": "\U0000E269", "format-font": "\U0000E6D5", "format-font-size-decrease": "\U0000E9F2", "format-font-size-increase": "\U0000E9F3", "format-header-1": "\U0000E26A", "format-header-2": "\U0000E26B", "format-header-3": "\U0000E26C", "format-header-4": "\U0000E26D", "format-header-5": "\U0000E26E", "format-header-6": "\U0000E26F", "format-header-decrease": "\U0000E270", "format-header-equal": "\U0000E271", "format-header-increase": "\U0000E272", "format-header-pound": "\U0000E273", "format-horizontal-align-center": "\U0000E61D", "format-horizontal-align-left": "\U0000E61E", "format-horizontal-align-right": "\U0000E61F", "format-indent-decrease": "\U0000E274", "format-indent-increase": "\U0000E275", "format-italic": "\U0000E276", "format-letter-case": "\U0000EB33", "format-letter-case-lower": "\U0000EB34", "format-letter-case-upper": "\U0000EB35", "format-letter-ends-with": "\U0000EFB7", "format-letter-matches": "\U0000EFB8", "format-letter-starts-with": "\U0000EFB9", "format-line-spacing": "\U0000E277", "format-line-style": "\U0000E5C7", "format-line-weight": "\U0000E5C8", "format-list-bulleted": "\U0000E278", "format-list-bulleted-square": "\U0000EDCF", "format-list-bulleted-triangle": "\U0000EEB1", "format-list-bulleted-type": "\U0000E279", "format-list-checkbox": "\U0000E969", "format-list-checks": "\U0000E755", "format-list-numbered": "\U0000E27A", "format-list-numbered-rtl": "\U0000ED0C", "format-list-text": "\U0000F26E", "format-overline": "\U0000EEB2", "format-page-break": "\U0000E6D6", "format-paint": "\U0000E27B", "format-paragraph": "\U0000E27C", "format-pilcrow": "\U0000E6D7", "format-quote-close": "\U0000E27D", "format-quote-close-outline": "\U0000F1A7", "format-quote-open": "\U0000E756", "format-quote-open-outline": "\U0000F1A6", "format-rotate-90": "\U0000E6A9", "format-section": "\U0000E69E", "format-size": "\U0000E27E", "format-strikethrough": "\U0000E27F", "format-strikethrough-variant": "\U0000E280", "format-subscript": "\U0000E281", "format-superscript": "\U0000E282", "format-text": "\U0000E283", "format-text-rotation-angle-down": "\U0000EFBA", "format-text-rotation-angle-up": "\U0000EFBB", "format-text-rotation-down": "\U0000ED72", "format-text-rotation-down-vertical": "\U0000EFBC", "format-text-rotation-none": "\U0000ED73", "format-text-rotation-up": "\U0000EFBD", "format-text-rotation-vertical": "\U0000EFBE", "format-text-variant": "\U0000EE31", "format-text-wrapping-clip": "\U0000ED0D", "format-text-wrapping-overflow": "\U0000ED0E", "format-text-wrapping-wrap": "\U0000ED0F", "format-textbox": "\U0000ED10", "format-textdirection-l-to-r": "\U0000E284", "format-textdirection-r-to-l": "\U0000E285", "format-title": "\U0000E5F3", "format-underline": "\U0000E286", "format-vertical-align-bottom": "\U0000E620", "format-vertical-align-center": "\U0000E621", "format-vertical-align-top": "\U0000E622", "format-wrap-inline": "\U0000E287", "format-wrap-square": "\U0000E288", "format-wrap-tight": "\U0000E289", "format-wrap-top-bottom": "\U0000E28A", "forum": "\U0000E28B", "forum-outline": "\U0000E821", "forward": "\U0000E28C", "forwardburger": "\U0000ED74", "fountain": "\U0000E96A", "fountain-pen": "\U0000ED11", "fountain-pen-tip": "\U0000ED12", "freebsd": "\U0000E8DF", "frequently-asked-questions": "\U0000EEB3", "fridge": "\U0000E28F", "fridge-alert": "\U0000F1B0", "fridge-alert-outline": "\U0000F1B1", "fridge-bottom": "\U0000E291", "fridge-off": "\U0000F1AE", "fridge-off-outline": "\U0000F1AF", "fridge-outline": "\U0000E28E", "fridge-top": "\U0000E290", "fruit-cherries": "\U0000F041", "fruit-cherries-off": "\U0000F3F7", "fruit-citrus": "\U0000F042", "fruit-citrus-off": "\U0000F3F8", "fruit-grapes": "\U0000F043", "fruit-grapes-outline": "\U0000F044", "fruit-pineapple": "\U0000F045", "fruit-watermelon": "\U0000F046", "fuel": "\U0000E7C9", "fullscreen": "\U0000E292", "fullscreen-exit": "\U0000E293", "function": "\U0000E294", "function-variant": "\U0000E870", "furigana-horizontal": "\U0000F080", "furigana-vertical": "\U0000F081", "fuse": "\U0000EC84", "fuse-blade": "\U0000EC85", "gamepad": "\U0000E295", "gamepad-circle": "\U0000EE32", "gamepad-circle-down": "\U0000EE33", "gamepad-circle-left": "\U0000EE34", "gamepad-circle-outline": "\U0000EE35", "gamepad-circle-right": "\U0000EE36", "gamepad-circle-up": "\U0000EE37", "gamepad-down": "\U0000EE38", "gamepad-left": "\U0000EE39", "gamepad-right": "\U0000EE3A", "gamepad-round": "\U0000EE3B", "gamepad-round-down": "\U0000EE3C", "gamepad-round-left": "\U0000EE3D", "gamepad-round-outline": "\U0000EE3E", "gamepad-round-right": "\U0000EE3F", "gamepad-round-up": "\U0000EE40", "gamepad-square": "\U0000EEB4", "gamepad-square-outline": "\U0000EEB5", "gamepad-up": "\U0000EE41", "gamepad-variant": "\U0000E296", "gamepad-variant-outline": "\U0000EEB6", "gamma": "\U0000F0ED", "gantry-crane": "\U0000EDD0", "garage": "\U0000E6D8", "garage-alert": "\U0000E871", "garage-alert-variant": "\U0000F2D4", "garage-open": "\U0000E6D9", "garage-open-variant": "\U0000F2D3", "garage-variant": "\U0000F2D2", "gas-cylinder": "\U0000E646", "gas-station": "\U0000E297", "gas-station-outline": "\U0000EEB7", "gate": "\U0000E298", "gate-and": "\U0000E8E0", "gate-arrow-right": "\U0000F168", "gate-nand": "\U0000E8E1", "gate-nor": "\U0000E8E2", "gate-not": "\U0000E8E3", "gate-open": "\U0000F169", "gate-or": "\U0000E8E4", "gate-xnor": "\U0000E8E5", "gate-xor": "\U0000E8E6", "gatsby": "\U0000EE42", "gauge": "\U0000E299", "gauge-empty": "\U0000E872", "gauge-full": "\U0000E873", "gauge-low": "\U0000E874", "gavel": "\U0000E29A", "gender-female": "\U0000E29B", "gender-male": "\U0000E29C", "gender-male-female": "\U0000E29D", "gender-male-female-variant": "\U0000F13E", "gender-non-binary": "\U0000F13F", "gender-transgender": "\U0000E29E", "gentoo": "\U0000E8E7", "gesture": "\U0000E7CA", "gesture-double-tap": "\U0000E73B", "gesture-pinch": "\U0000EABC", "gesture-spread": "\U0000EABD", "gesture-swipe": "\U0000ED75", "gesture-swipe-down": "\U0000E73C", "gesture-swipe-horizontal": "\U0000EABE", "gesture-swipe-left": "\U0000E73D", "gesture-swipe-right": "\U0000E73E", "gesture-swipe-up": "\U0000E73F", "gesture-swipe-vertical": "\U0000EABF", "gesture-tap": "\U0000E740", "gesture-tap-box": "\U0000F2A8", "gesture-tap-button": "\U0000F2A7", "gesture-tap-hold": "\U0000ED76", "gesture-two-double-tap": "\U0000E741", "gesture-two-tap": "\U0000E742", "ghost": "\U0000E29F", "ghost-off": "\U0000E9F4", "gif": "\U0000ED77", "gift": "\U0000EE43", "gift-outline": "\U0000E2A0", "git": "\U0000E2A1", "github": "\U0000E2A3", "gitlab": "\U0000EB9F", "glass-cocktail": "\U0000E355", "glass-flute": "\U0000E2A4", "glass-mug": "\U0000E2A5", "glass-mug-variant": "\U0000F115", "glass-pint-outline": "\U0000F30C", "glass-stange": "\U0000E2A6", "glass-tulip": "\U0000E2A7", "glass-wine": "\U0000E875", "glasses": "\U0000E2A9", "globe-light": "\U0000F2D6", "globe-model": "\U0000E8E8", "gmail": "\U0000E2AA", "gnome": "\U0000E2AB", "go-kart": "\U0000ED78", "go-kart-track": "\U0000ED79", "gog": "\U0000EBA0", "gold": "\U0000F24E", "golf": "\U0000E822", "golf-cart": "\U0000F1A3", "golf-tee": "\U0000F082", "gondola": "\U0000E685", "goodreads": "\U0000ED7A", "google": "\U0000E2AC", "google-ads": "\U0000EC86", "google-analytics": "\U0000E7CB", "google-assistant": "\U0000E7CC", "google-cardboard": "\U0000E2AD", "google-chrome": "\U0000E2AE", "google-circles": "\U0000E2AF", "google-circles-communities": "\U0000E2B0", "google-circles-extended": "\U0000E2B1", "google-circles-group": "\U0000E2B2", "google-classroom": "\U0000E2BF", "google-cloud": "\U0000F1F5", "google-controller": "\U0000E2B3", "google-controller-off": "\U0000E2B4", "google-downasaur": "\U0000F361", "google-drive": "\U0000E2B5", "google-earth": "\U0000E2B6", "google-fit": "\U0000E96B", "google-glass": "\U0000E2B7", "google-hangouts": "\U0000E2C8", "google-home": "\U0000E823", "google-keep": "\U0000E6DB", "google-lens": "\U0000E9F5", "google-maps": "\U0000E5F4", "google-my-business": "\U0000F047", "google-nearby": "\U0000E2B8", "google-photos": "\U0000E6DC", "google-play": "\U0000E2BB", "google-plus": "\U0000E2BC", "google-podcast": "\U0000EEB8", "google-spreadsheet": "\U0000E9F6", "google-street-view": "\U0000EC87", "google-translate": "\U0000E2BE", "gradient": "\U0000E69F", "grain": "\U0000ED7B", "graph": "\U0000F048", "graph-outline": "\U0000F049", "graphql": "\U0000E876", "grave-stone": "\U0000EBA1", "grease-pencil": "\U0000E647", "greater-than": "\U0000E96C", "greater-than-or-equal": "\U0000E96D", "grid": "\U0000E2C0", "grid-large": "\U0000E757", "grid-off": "\U0000E2C1", "grill": "\U0000EE44", "grill-outline": "\U0000F189", "group": "\U0000E2C2", "guitar-acoustic": "\U0000E770", "guitar-electric": "\U0000E2C3", "guitar-pick": "\U0000E2C4", "guitar-pick-outline": "\U0000E2C5", "guy-fawkes-mask": "\U0000E824", "hail": "\U0000EAC0", "hair-dryer": "\U0000F0EE", "hair-dryer-outline": "\U0000F0EF", "halloween": "\U0000EBA2", "hamburger": "\U0000E684", "hammer": "\U0000E8E9", "hammer-screwdriver": "\U0000F321", "hammer-wrench": "\U0000F322", "hand": "\U0000EA4E", "hand-heart": "\U0000F0F0", "hand-left": "\U0000EE45", "hand-okay": "\U0000EA4F", "hand-peace": "\U0000EA50", "hand-peace-variant": "\U0000EA51", "hand-pointing-down": "\U0000EA52", "hand-pointing-left": "\U0000EA53", "hand-pointing-right": "\U0000E2C6", "hand-pointing-up": "\U0000EA54", "hand-right": "\U0000EE46", "hand-saw": "\U0000EE47", "hand-water": "\U0000F39E", "handball": "\U0000EF52", "handcuffs": "\U0000F13D", "handshake": "\U0000F217", "hanger": "\U0000E2C7", "hard-hat": "\U0000E96E", "harddisk": "\U0000E2C9", "harddisk-plus": "\U0000F04A", "harddisk-remove": "\U0000F04B", "hat-fedora": "\U0000EBA3", "hazard-lights": "\U0000EC88", "hdr": "\U0000ED7C", "hdr-off": "\U0000ED7D", "head": "\U0000F35D", "head-alert": "\U0000F337", "head-alert-outline": "\U0000F338", "head-check": "\U0000F339", "head-check-outline": "\U0000F33A", "head-cog": "\U0000F33B", "head-cog-outline": "\U0000F33C", "head-dots-horizontal": "\U0000F33D", "head-dots-horizontal-outline": "\U0000F33E", "head-flash": "\U0000F33F", "head-flash-outline": "\U0000F340", "head-heart": "\U0000F341", "head-heart-outline": "\U0000F342", "head-lightbulb": "\U0000F343", "head-lightbulb-outline": "\U0000F344", "head-minus": "\U0000F345", "head-minus-outline": "\U0000F346", "head-outline": "\U0000F35E", "head-plus": "\U0000F347", "head-plus-outline": "\U0000F348", "head-question": "\U0000F349", "head-question-outline": "\U0000F34A", "head-remove": "\U0000F34B", "head-remove-outline": "\U0000F34C", "head-snowflake": "\U0000F34D", "head-snowflake-outline": "\U0000F34E", "head-sync": "\U0000F34F", "head-sync-outline": "\U0000F350", "headphones": "\U0000E2CA", "headphones-bluetooth": "\U0000E96F", "headphones-box": "\U0000E2CB", "headphones-off": "\U0000E7CD", "headphones-settings": "\U0000E2CC", "headset": "\U0000E2CD", "headset-dock": "\U0000E2CE", "headset-off": "\U0000E2CF", "heart": "\U0000E2D0", "heart-box": "\U0000E2D1", "heart-box-outline": "\U0000E2D2", "heart-broken": "\U0000E2D3", "heart-broken-outline": "\U0000ED13", "heart-circle": "\U0000E970", "heart-circle-outline": "\U0000E971", "heart-flash": "\U0000EEF8", "heart-half": "\U0000E6DE", "heart-half-full": "\U0000E6DD", "heart-half-outline": "\U0000E6DF", "heart-multiple": "\U0000EA55", "heart-multiple-outline": "\U0000EA56", "heart-off": "\U0000E758", "heart-outline": "\U0000E2D4", "heart-pulse": "\U0000E5F5", "helicopter": "\U0000EAC1", "help": "\U0000E2D5", "help-box": "\U0000E78A", "help-circle": "\U0000E2D6", "help-circle-outline": "\U0000E624", "help-network": "\U0000E6F4", "help-network-outline": "\U0000EC89", "help-rhombus": "\U0000EBA4", "help-rhombus-outline": "\U0000EBA5", "hexadecimal": "\U0000F2A6", "hexagon": "\U0000E2D7", "hexagon-multiple": "\U0000E6E0", "hexagon-multiple-outline": "\U0000F0F1", "hexagon-outline": "\U0000E2D8", "hexagon-slice-1": "\U0000EAC2", "hexagon-slice-2": "\U0000EAC3", "hexagon-slice-3": "\U0000EAC4", "hexagon-slice-4": "\U0000EAC5", "hexagon-slice-5": "\U0000EAC6", "hexagon-slice-6": "\U0000EAC7", "hexagram": "\U0000EAC8", "hexagram-outline": "\U0000EAC9", "high-definition": "\U0000E7CE", "high-definition-box": "\U0000E877", "highway": "\U0000E5F6", "hiking": "\U0000ED7E", "hinduism": "\U0000E972", "history": "\U0000E2D9", "hockey-puck": "\U0000E878", "hockey-sticks": "\U0000E879", "hololens": "\U0000E2DA", "home": "\U0000E2DB", "home-account": "\U0000E825", "home-alert": "\U0000E87A", "home-analytics": "\U0000EEB9", "home-assistant": "\U0000E7CF", "home-automation": "\U0000E7D0", "home-circle": "\U0000E7D1", "home-circle-outline": "\U0000F04C", "home-city": "\U0000ED14", "home-city-outline": "\U0000ED15", "home-currency-usd": "\U0000E8AE", "home-edit": "\U0000F158", "home-edit-outline": "\U0000F159", "home-export-outline": "\U0000EF9A", "home-flood": "\U0000EEF9", "home-floor-0": "\U0000EDD1", "home-floor-1": "\U0000ED7F", "home-floor-2": "\U0000ED80", "home-floor-3": "\U0000ED81", "home-floor-a": "\U0000ED82", "home-floor-b": "\U0000ED83", "home-floor-g": "\U0000ED84", "home-floor-l": "\U0000ED85", "home-floor-negative-1": "\U0000EDD2", "home-group": "\U0000EDD3", "home-heart": "\U0000E826", "home-import-outline": "\U0000EF9B", "home-lightbulb": "\U0000F250", "home-lightbulb-outline": "\U0000F251", "home-lock": "\U0000E8EA", "home-lock-open": "\U0000E8EB", "home-map-marker": "\U0000E5F7", "home-minus": "\U0000E973", "home-minus-outline": "\U0000F3D4", "home-modern": "\U0000E2DC", "home-outline": "\U0000E6A0", "home-plus": "\U0000E974", "home-plus-outline": "\U0000F3D5", "home-remove": "\U0000F246", "home-remove-outline": "\U0000F3D6", "home-roof": "\U0000F12A", "home-search": "\U0000F3AF", "home-search-outline": "\U0000F3B0", "home-thermometer": "\U0000EF53", "home-thermometer-outline": "\U0000EF54", "home-variant": "\U0000E2DD", "home-variant-outline": "\U0000EBA6", "hook": "\U0000E6E1", "hook-off": "\U0000E6E2", "hops": "\U0000E2DE", "horizontal-rotate-clockwise": "\U0000F0F2", "horizontal-rotate-counterclockwise": "\U0000F0F3", "horseshoe": "\U0000EA57", "hospital": "\U0000EFF5", "hospital-box": "\U0000E2DF", "hospital-box-outline": "\U0000EFF6", "hospital-building": "\U0000E2E0", "hospital-marker": "\U0000E2E1", "hot-tub": "\U0000E827", "hubspot": "\U0000ED16", "hulu": "\U0000E828", "human": "\U0000E2E5", "human-baby-changing-table": "\U0000F38A", "human-child": "\U0000E2E6", "human-female": "\U0000E648", "human-female-boy": "\U0000EA58", "human-female-female": "\U0000EA59", "human-female-girl": "\U0000EA5A", "human-greeting": "\U0000E649", "human-handsdown": "\U0000E64A", "human-handsup": "\U0000E64B", "human-male": "\U0000E64C", "human-male-boy": "\U0000EA5B", "human-male-child": "\U0000F38B", "human-male-female": "\U0000E2E7", "human-male-girl": "\U0000EA5C", "human-male-height": "\U0000EEFA", "human-male-height-variant": "\U0000EEFB", "human-male-male": "\U0000EA5D", "human-pregnant": "\U0000E5CE", "human-wheelchair": "\U0000F38C", "humble-bundle": "\U0000E743", "hvac": "\U0000F351", "hydraulic-oil-level": "\U0000F323", "hydraulic-oil-temperature": "\U0000F324", "hydro-power": "\U0000F2E4", "ice-cream": "\U0000E829", "ice-cream-off": "\U0000EE51", "ice-pop": "\U0000EEFC", "id-card": "\U0000EFBF", "identifier": "\U0000EEFD", "ideogram-cjk": "\U0000F330", "ideogram-cjk-variant": "\U0000F331", "iframe": "\U0000EC8A", "iframe-array": "\U0000F0F4", "iframe-array-outline": "\U0000F0F5", "iframe-braces": "\U0000F0F6", "iframe-braces-outline": "\U0000F0F7", "iframe-outline": "\U0000EC8B", "iframe-parentheses": "\U0000F0F8", "iframe-parentheses-outline": "\U0000F0F9", "iframe-variable": "\U0000F0FA", "iframe-variable-outline": "\U0000F0FB", "image": "\U0000E2E8", "image-album": "\U0000E2E9", "image-area": "\U0000E2EA", "image-area-close": "\U0000E2EB", "image-auto-adjust": "\U0000EFC0", "image-broken": "\U0000E2EC", "image-broken-variant": "\U0000E2ED", "image-edit": "\U0000F1E2", "image-edit-outline": "\U0000F1E3", "image-filter-black-white": "\U0000E2EF", "image-filter-center-focus": "\U0000E2F0", "image-filter-center-focus-strong": "\U0000EEFE", "image-filter-center-focus-strong-outline": "\U0000EEFF", "image-filter-center-focus-weak": "\U0000E2F1", "image-filter-drama": "\U0000E2F2", "image-filter-frames": "\U0000E2F3", "image-filter-hdr": "\U0000E2F4", "image-filter-none": "\U0000E2F5", "image-filter-tilt-shift": "\U0000E2F6", "image-filter-vintage": "\U0000E2F7", "image-frame": "\U0000EE48", "image-move": "\U0000E9F7", "image-multiple": "\U0000E2F8", "image-multiple-outline": "\U0000E2EE", "image-off": "\U0000E82A", "image-off-outline": "\U0000F1D0", "image-outline": "\U0000E975", "image-plus": "\U0000E87B", "image-search": "\U0000E976", "image-search-outline": "\U0000E977", "image-size-select-actual": "\U0000EC8C", "image-size-select-large": "\U0000EC8D", "image-size-select-small": "\U0000EC8E", "import": "\U0000E2F9", "inbox": "\U0000E686", "inbox-arrow-down": "\U0000E2FA", "inbox-arrow-down-outline": "\U0000F26F", "inbox-arrow-up": "\U0000E3D0", "inbox-arrow-up-outline": "\U0000F270", "inbox-full": "\U0000F271", "inbox-full-outline": "\U0000F272", "inbox-multiple": "\U0000E8AF", "inbox-multiple-outline": "\U0000EBA7", "inbox-outline": "\U0000F273", "incognito": "\U0000E5F8", "incognito-off": "\U0000E074", "infinity": "\U0000E6E3", "information": "\U0000E2FB", "information-outline": "\U0000E2FC", "information-variant": "\U0000E64D", "instagram": "\U0000E2FD", "instrument-triangle": "\U0000F04D", "invert-colors": "\U0000E300", "invert-colors-off": "\U0000EE49", "iobroker": "\U0000F2E7", "ip": "\U0000EA5E", "ip-network": "\U0000EA5F", "ip-network-outline": "\U0000EC8F", "ipod": "\U0000EC90", "islam": "\U0000E978", "island": "\U0000F04E", "iv-bag": "\U0000F0B8", "jabber": "\U0000EDD4", "jeepney": "\U0000E301", "jellyfish": "\U0000EF00", "jellyfish-outline": "\U0000EF01", "jira": "\U0000E302", "jquery": "\U0000E87C", "jsfiddle": "\U0000E303", "judaism": "\U0000E979", "jump-rope": "\U0000F2FE", "kabaddi": "\U0000ED86", "karate": "\U0000E82B", "keg": "\U0000E304", "kettle": "\U0000E5F9", "kettle-alert": "\U0000F316", "kettle-alert-outline": "\U0000F317", "kettle-off": "\U0000F31A", "kettle-off-outline": "\U0000F31B", "kettle-outline": "\U0000EF55", "kettle-steam": "\U0000F318", "kettle-steam-outline": "\U0000F319", "kettlebell": "\U0000F2FF", "key": "\U0000E305", "key-arrow-right": "\U0000F311", "key-change": "\U0000E306", "key-link": "\U0000F19E", "key-minus": "\U0000E307", "key-outline": "\U0000EDD5", "key-plus": "\U0000E308", "key-remove": "\U0000E309", "key-star": "\U0000F19D", "key-variant": "\U0000E30A", "key-wireless": "\U0000EFC1", "keyboard": "\U0000E30B", "keyboard-backspace": "\U0000E30C", "keyboard-caps": "\U0000E30D", "keyboard-close": "\U0000E30E", "keyboard-esc": "\U0000F2B6", "keyboard-f1": "\U0000F2AA", "keyboard-f10": "\U0000F2B3", "keyboard-f11": "\U0000F2B4", "keyboard-f12": "\U0000F2B5", "keyboard-f2": "\U0000F2AB", "keyboard-f3": "\U0000F2AC", "keyboard-f4": "\U0000F2AD", "keyboard-f5": "\U0000F2AE", "keyboard-f6": "\U0000F2AF", "keyboard-f7": "\U0000F2B0", "keyboard-f8": "\U0000F2B1", "keyboard-f9": "\U0000F2B2", "keyboard-off": "\U0000E30F", "keyboard-off-outline": "\U0000EE4A", "keyboard-outline": "\U0000E97A", "keyboard-return": "\U0000E310", "keyboard-settings": "\U0000E9F8", "keyboard-settings-outline": "\U0000E9F9", "keyboard-space": "\U0000F04F", "keyboard-tab": "\U0000E311", "keyboard-variant": "\U0000E312", "khanda": "\U0000F0FC", "kickstarter": "\U0000E744", "klingon": "\U0000F35A", "knife": "\U0000E9FA", "knife-military": "\U0000E9FB", "kodi": "\U0000E313", "kubernetes": "\U0000F0FD", "label": "\U0000E314", "label-multiple": "\U0000F374", "label-multiple-outline": "\U0000F375", "label-off": "\U0000EACA", "label-off-outline": "\U0000EACB", "label-outline": "\U0000E315", "label-percent": "\U0000F2E9", "label-percent-outline": "\U0000F2EA", "label-variant": "\U0000EACC", "label-variant-outline": "\U0000EACD", "ladybug": "\U0000E82C", "lambda": "\U0000E626", "lamp": "\U0000E6B4", "lan": "\U0000E316", "lan-check": "\U0000F2A9", "lan-connect": "\U0000E317", "lan-disconnect": "\U0000E318", "lan-pending": "\U0000E319", "language-c": "\U0000E670", "language-cpp": "\U0000E671", "language-csharp": "\U0000E31A", "language-css3": "\U0000E31B", "language-fortran": "\U0000F219", "language-go": "\U0000E7D2", "language-haskell": "\U0000EC91", "language-html5": "\U0000E31C", "language-java": "\U0000EB36", "language-javascript": "\U0000E31D", "language-kotlin": "\U0000F218", "language-lua": "\U0000E8B0", "language-markdown": "\U0000E353", "language-markdown-outline": "\U0000EF5A", "language-php": "\U0000E31E", "language-python": "\U0000E31F", "language-r": "\U0000E7D3", "language-ruby": "\U0000ED2C", "language-ruby-on-rails": "\U0000EACE", "language-swift": "\U0000E6E4", "language-typescript": "\U0000E6E5", "language-xaml": "\U0000E672", "laptop": "\U0000E321", "laptop-chromebook": "\U0000E322", "laptop-mac": "\U0000E323", "laptop-off": "\U0000E6E6", "laptop-windows": "\U0000E324", "laravel": "\U0000EACF", "lasso": "\U0000EF02", "lastpass": "\U0000E445", "latitude": "\U0000EF56", "launch": "\U0000E326", "lava-lamp": "\U0000E7D4", "layers": "\U0000E327", "layers-minus": "\U0000EE4B", "layers-off": "\U0000E328", "layers-off-outline": "\U0000E9FC", "layers-outline": "\U0000E9FD", "layers-plus": "\U0000EE4C", "layers-remove": "\U0000EE4D", "layers-search": "\U0000F205", "layers-search-outline": "\U0000F206", "layers-triple": "\U0000EF57", "layers-triple-outline": "\U0000EF58", "lead-pencil": "\U0000E64E", "leaf": "\U0000E329", "leaf-maple": "\U0000EC92", "leaf-maple-off": "\U0000F2D9", "leaf-off": "\U0000F2D8", "leak": "\U0000EDD6", "leak-off": "\U0000EDD7", "led-off": "\U0000E32A", "led-on": "\U0000E32B", "led-outline": "\U0000E32C", "led-strip": "\U0000E7D5", "led-strip-variant": "\U0000F050", "led-variant-off": "\U0000E32D", "led-variant-on": "\U0000E32E", "led-variant-outline": "\U0000E32F", "leek": "\U0000F17C", "less-than": "\U0000E97B", "less-than-or-equal": "\U0000E97C", "library": "\U0000E330", "library-shelves": "\U0000EBA8", "license": "\U0000EFC2", "lifebuoy": "\U0000E87D", "light-switch": "\U0000E97D", "lightbulb": "\U0000E334", "lightbulb-cfl": "\U0000F207", "lightbulb-cfl-off": "\U0000F208", "lightbulb-cfl-spiral": "\U0000F274", "lightbulb-cfl-spiral-off": "\U0000F2C2", "lightbulb-group": "\U0000F252", "lightbulb-group-off": "\U0000F2CC", "lightbulb-group-off-outline": "\U0000F2CD", "lightbulb-group-outline": "\U0000F253", "lightbulb-multiple": "\U0000F254", "lightbulb-multiple-off": "\U0000F2CE", "lightbulb-multiple-off-outline": "\U0000F2CF", "lightbulb-multiple-outline": "\U0000F255", "lightbulb-off": "\U0000EE4E", "lightbulb-off-outline": "\U0000EE4F", "lightbulb-on": "\U0000E6E7", "lightbulb-on-outline": "\U0000E6E8", "lightbulb-outline": "\U0000E335", "lighthouse": "\U0000E9FE", "lighthouse-on": "\U0000E9FF", "link": "\U0000E336", "link-box": "\U0000ED19", "link-box-outline": "\U0000ED1A", "link-box-variant": "\U0000ED1B", "link-box-variant-outline": "\U0000ED1C", "link-lock": "\U0000F0B9", "link-off": "\U0000E337", "link-plus": "\U0000EC93", "link-variant": "\U0000E338", "link-variant-minus": "\U0000F0FE", "link-variant-off": "\U0000E339", "link-variant-plus": "\U0000F0FF", "link-variant-remove": "\U0000F100", "linkedin": "\U0000E33A", "linux": "\U0000E33C", "linux-mint": "\U0000E8EC", "lipstick": "\U0000F3B4", "litecoin": "\U0000EA60", "loading": "\U0000E771", "location-enter": "\U0000EFC3", "location-exit": "\U0000EFC4", "lock": "\U0000E33D", "lock-alert": "\U0000E8ED", "lock-check": "\U0000F399", "lock-clock": "\U0000E97E", "lock-open": "\U0000E33E", "lock-open-alert": "\U0000F39A", "lock-open-check": "\U0000F39B", "lock-open-outline": "\U0000E33F", "lock-open-variant": "\U0000EFC5", "lock-open-variant-outline": "\U0000EFC6", "lock-outline": "\U0000E340", "lock-pattern": "\U0000E6E9", "lock-plus": "\U0000E5FA", "lock-question": "\U0000E8EE", "lock-reset": "\U0000E772", "lock-smart": "\U0000E8B1", "locker": "\U0000E7D6", "locker-multiple": "\U0000E7D7", "login": "\U0000E341", "login-variant": "\U0000E5FB", "logout": "\U0000E342", "logout-variant": "\U0000E5FC", "longitude": "\U0000EF59", "looks": "\U0000E343", "loupe": "\U0000E344", "lumx": "\U0000E345", "lungs": "\U0000F083", "magnet": "\U0000E346", "magnet-on": "\U0000E347", "magnify": "\U0000E348", "magnify-close": "\U0000E97F", "magnify-minus": "\U0000E349", "magnify-minus-cursor": "\U0000EA61", "magnify-minus-outline": "\U0000E6EB", "magnify-plus": "\U0000E34A", "magnify-plus-cursor": "\U0000EA62", "magnify-plus-outline": "\U0000E6EC", "magnify-remove-cursor": "\U0000F20B", "magnify-remove-outline": "\U0000F20C", "magnify-scan": "\U0000F275", "mail": "\U0000EEBA", "mailbox": "\U0000E6ED", "mailbox-open": "\U0000ED87", "mailbox-open-outline": "\U0000ED88", "mailbox-open-up": "\U0000ED89", "mailbox-open-up-outline": "\U0000ED8A", "mailbox-outline": "\U0000ED8B", "mailbox-up": "\U0000ED8C", "mailbox-up-outline": "\U0000ED8D", "map": "\U0000E34C", "map-check": "\U0000EEBB", "map-check-outline": "\U0000EEBC", "map-clock": "\U0000ED1D", "map-clock-outline": "\U0000ED1E", "map-legend": "\U0000EA00", "map-marker": "\U0000E34D", "map-marker-alert": "\U0000EF04", "map-marker-alert-outline": "\U0000EF05", "map-marker-check": "\U0000EC94", "map-marker-check-outline": "\U0000F2FA", "map-marker-circle": "\U0000E34E", "map-marker-distance": "\U0000E8EF", "map-marker-down": "\U0000F101", "map-marker-left": "\U0000F2DA", "map-marker-left-outline": "\U0000F2DC", "map-marker-minus": "\U0000E64F", "map-marker-minus-outline": "\U0000F2F8", "map-marker-multiple": "\U0000E34F", "map-marker-multiple-outline": "\U0000F276", "map-marker-off": "\U0000E350", "map-marker-off-outline": "\U0000F2FC", "map-marker-outline": "\U0000E7D8", "map-marker-path": "\U0000ED1F", "map-marker-plus": "\U0000E650", "map-marker-plus-outline": "\U0000F2F7", "map-marker-question": "\U0000EF06", "map-marker-question-outline": "\U0000EF07", "map-marker-radius": "\U0000E351", "map-marker-radius-outline": "\U0000F2FB", "map-marker-remove": "\U0000EF08", "map-marker-remove-outline": "\U0000F2F9", "map-marker-remove-variant": "\U0000EF09", "map-marker-right": "\U0000F2DB", "map-marker-right-outline": "\U0000F2DD", "map-marker-up": "\U0000F102", "map-minus": "\U0000E980", "map-outline": "\U0000E981", "map-plus": "\U0000E982", "map-search": "\U0000E983", "map-search-outline": "\U0000E984", "mapbox": "\U0000EBA9", "margin": "\U0000E352", "marker": "\U0000E651", "marker-cancel": "\U0000EDD8", "marker-check": "\U0000E354", "mastodon": "\U0000EAD0", "material-design": "\U0000E985", "material-ui": "\U0000E356", "math-compass": "\U0000E357", "math-cos": "\U0000EC95", "math-integral": "\U0000EFC7", "math-integral-box": "\U0000EFC8", "math-log": "\U0000F084", "math-norm": "\U0000EFC9", "math-norm-box": "\U0000EFCA", "math-sin": "\U0000EC96", "math-tan": "\U0000EC97", "matrix": "\U0000E627", "medal": "\U0000E986", "medal-outline": "\U0000F325", "medical-bag": "\U0000E6EE", "meditation": "\U0000F17A", "memory": "\U0000E35A", "menu": "\U0000E35B", "menu-down": "\U0000E35C", "menu-down-outline": "\U0000E6B5", "menu-left": "\U0000E35D", "menu-left-outline": "\U0000EA01", "menu-open": "\U0000EBAA", "menu-right": "\U0000E35E", "menu-right-outline": "\U0000EA02", "menu-swap": "\U0000EA63", "menu-swap-outline": "\U0000EA64", "menu-up": "\U0000E35F", "menu-up-outline": "\U0000E6B6", "merge": "\U0000EF5B", "message": "\U0000E360", "message-alert": "\U0000E361", "message-alert-outline": "\U0000EA03", "message-arrow-left": "\U0000F2F1", "message-arrow-left-outline": "\U0000F2F2", "message-arrow-right": "\U0000F2F3", "message-arrow-right-outline": "\U0000F2F4", "message-bulleted": "\U0000E6A1", "message-bulleted-off": "\U0000E6A2", "message-cog": "\U0000E6F0", "message-cog-outline": "\U0000F171", "message-draw": "\U0000E362", "message-image": "\U0000E363", "message-image-outline": "\U0000F16B", "message-lock": "\U0000EFCB", "message-lock-outline": "\U0000F16C", "message-minus": "\U0000F16D", "message-minus-outline": "\U0000F16E", "message-outline": "\U0000E364", "message-plus": "\U0000E652", "message-plus-outline": "\U0000F0BA", "message-processing": "\U0000E365", "message-processing-outline": "\U0000F16F", "message-reply": "\U0000E366", "message-reply-text": "\U0000E367", "message-settings": "\U0000E6EF", "message-settings-outline": "\U0000F170", "message-text": "\U0000E368", "message-text-clock": "\U0000F172", "message-text-clock-outline": "\U0000F173", "message-text-lock": "\U0000EFCC", "message-text-lock-outline": "\U0000F174", "message-text-outline": "\U0000E369", "message-video": "\U0000E36A", "meteor": "\U0000E628", "metronome": "\U0000E7D9", "metronome-tick": "\U0000E7DA", "micro-sd": "\U0000E7DB", "microphone": "\U0000E36B", "microphone-minus": "\U0000E8B2", "microphone-off": "\U0000E36C", "microphone-outline": "\U0000E36D", "microphone-plus": "\U0000E8B3", "microphone-settings": "\U0000E36E", "microphone-variant": "\U0000E36F", "microphone-variant-off": "\U0000E370", "microscope": "\U0000E653", "microsoft": "\U0000E371", "microsoft-access": "\U0000F38D", "microsoft-azure": "\U0000E804", "microsoft-azure-devops": "\U0000EFD4", "microsoft-bing": "\U0000E0A3", "microsoft-dynamics-365": "\U0000E987", "microsoft-edge": "\U0000E1E8", "microsoft-edge-legacy": "\U0000F24F", "microsoft-excel": "\U0000F38E", "microsoft-internet-explorer": "\U0000E2FF", "microsoft-office": "\U0000E3C5", "microsoft-onedrive": "\U0000E3C9", "microsoft-onenote": "\U0000E746", "microsoft-outlook": "\U0000ED21", "microsoft-powerpoint": "\U0000F38F", "microsoft-sharepoint": "\U0000F390", "microsoft-teams": "\U0000E2BA", "microsoft-visual-studio": "\U0000E60F", "microsoft-visual-studio-code": "\U0000EA1D", "microsoft-windows": "\U0000E5B2", "microsoft-windows-classic": "\U0000EA20", "microsoft-word": "\U0000F391", "microsoft-xbox": "\U0000E5B8", "microsoft-xbox-controller": "\U0000E5B9", "microsoft-xbox-controller-battery-alert": "\U0000E74A", "microsoft-xbox-controller-battery-charging": "\U0000EA21", "microsoft-xbox-controller-battery-empty": "\U0000E74B", "microsoft-xbox-controller-battery-full": "\U0000E74C", "microsoft-xbox-controller-battery-low": "\U0000E74D", "microsoft-xbox-controller-battery-medium": "\U0000E74E", "microsoft-xbox-controller-battery-unknown": "\U0000E74F", "microsoft-xbox-controller-menu": "\U0000EE6E", "microsoft-xbox-controller-off": "\U0000E5BA", "microsoft-xbox-controller-view": "\U0000EE6F", "microsoft-yammer": "\U0000E788", "microwave": "\U0000EC98", "middleware": "\U0000EF5C", "middleware-outline": "\U0000EF5D", "midi": "\U0000E8F0", "midi-port": "\U0000E8F1", "mine": "\U0000EDD9", "minecraft": "\U0000E372", "mini-sd": "\U0000EA04", "minidisc": "\U0000EA05", "minus": "\U0000E373", "minus-box": "\U0000E374", "minus-box-multiple": "\U0000F140", "minus-box-multiple-outline": "\U0000F141", "minus-box-outline": "\U0000E6F1", "minus-circle": "\U0000E375", "minus-circle-multiple": "\U0000E359", "minus-circle-multiple-outline": "\U0000EAD2", "minus-circle-outline": "\U0000E376", "minus-network": "\U0000E377", "minus-network-outline": "\U0000EC99", "mirror": "\U0000F1FC", "mixed-martial-arts": "\U0000ED8E", "mixed-reality": "\U0000E87E", "mixer": "\U0000E7DC", "molecule": "\U0000EBAB", "molecule-co": "\U0000F2FD", "molecule-co2": "\U0000E7E3", "monitor": "\U0000E378", "monitor-cellphone": "\U0000E988", "monitor-cellphone-star": "\U0000E989", "monitor-clean": "\U0000F103", "monitor-dashboard": "\U0000EA06", "monitor-edit": "\U0000F2C5", "monitor-eye": "\U0000F3B3", "monitor-lock": "\U0000EDDA", "monitor-multiple": "\U0000E379", "monitor-off": "\U0000ED8F", "monitor-screenshot": "\U0000EE50", "monitor-speaker": "\U0000EF5E", "monitor-speaker-off": "\U0000EF5F", "monitor-star": "\U0000EDDB", "moon-first-quarter": "\U0000EF60", "moon-full": "\U0000EF61", "moon-last-quarter": "\U0000EF62", "moon-new": "\U0000EF63", "moon-waning-crescent": "\U0000EF64", "moon-waning-gibbous": "\U0000EF65", "moon-waxing-crescent": "\U0000EF66", "moon-waxing-gibbous": "\U0000EF67", "moped": "\U0000F085", "more": "\U0000E37A", "mother-heart": "\U0000F313", "mother-nurse": "\U0000ED20", "motion-sensor": "\U0000ED90", "motorbike": "\U0000E37B", "mouse": "\U0000E37C", "mouse-bluetooth": "\U0000E98A", "mouse-off": "\U0000E37D", "mouse-variant": "\U0000E37E", "mouse-variant-off": "\U0000E37F", "move-resize": "\U0000E654", "move-resize-variant": "\U0000E655", "movie": "\U0000E380", "movie-edit": "\U0000F121", "movie-edit-outline": "\U0000F122", "movie-filter": "\U0000F123", "movie-filter-outline": "\U0000F124", "movie-open": "\U0000EFCD", "movie-open-outline": "\U0000EFCE", "movie-outline": "\U0000EDDC", "movie-roll": "\U0000E7DD", "movie-search": "\U0000F1D1", "movie-search-outline": "\U0000F1D2", "muffin": "\U0000E98B", "multiplication": "\U0000E381", "multiplication-box": "\U0000E382", "mushroom": "\U0000E7DE", "mushroom-off": "\U0000F3F9", "mushroom-off-outline": "\U0000F3FA", "mushroom-outline": "\U0000E7DF", "music": "\U0000E759", "music-accidental-double-flat": "\U0000EF68", "music-accidental-double-sharp": "\U0000EF69", "music-accidental-flat": "\U0000EF6A", "music-accidental-natural": "\U0000EF6B", "music-accidental-sharp": "\U0000EF6C", "music-box": "\U0000E383", "music-box-multiple": "\U0000E332", "music-box-multiple-outline": "\U0000EF03", "music-box-outline": "\U0000E384", "music-circle": "\U0000E385", "music-circle-outline": "\U0000EAD3", "music-clef-alto": "\U0000EF6D", "music-clef-bass": "\U0000EF6E", "music-clef-treble": "\U0000EF6F", "music-note": "\U0000E386", "music-note-bluetooth": "\U0000E5FD", "music-note-bluetooth-off": "\U0000E5FE", "music-note-eighth": "\U0000E387", "music-note-eighth-dotted": "\U0000EF70", "music-note-half": "\U0000E388", "music-note-half-dotted": "\U0000EF71", "music-note-off": "\U0000E389", "music-note-off-outline": "\U0000EF72", "music-note-outline": "\U0000EF73", "music-note-plus": "\U0000EDDD", "music-note-quarter": "\U0000E38A", "music-note-quarter-dotted": "\U0000EF74", "music-note-sixteenth": "\U0000E38B", "music-note-sixteenth-dotted": "\U0000EF75", "music-note-whole": "\U0000E38C", "music-note-whole-dotted": "\U0000EF76", "music-off": "\U0000E75A", "music-rest-eighth": "\U0000EF77", "music-rest-half": "\U0000EF78", "music-rest-quarter": "\U0000EF79", "music-rest-sixteenth": "\U0000EF7A", "music-rest-whole": "\U0000EF7B", "nail": "\U0000EDDE", "nas": "\U0000E8F2", "nativescript": "\U0000E87F", "nature": "\U0000E38D", "nature-people": "\U0000E38E", "navigation": "\U0000E38F", "near-me": "\U0000E5CC", "necklace": "\U0000EF0A", "needle": "\U0000E390", "netflix": "\U0000E745", "network": "\U0000E6F2", "network-off": "\U0000EC9A", "network-off-outline": "\U0000EC9B", "network-outline": "\U0000EC9C", "network-strength-1": "\U0000E8F3", "network-strength-1-alert": "\U0000E8F4", "network-strength-2": "\U0000E8F5", "network-strength-2-alert": "\U0000E8F6", "network-strength-3": "\U0000E8F7", "network-strength-3-alert": "\U0000E8F8", "network-strength-4": "\U0000E8F9", "network-strength-4-alert": "\U0000E8FA", "network-strength-off": "\U0000E8FB", "network-strength-off-outline": "\U0000E8FC", "network-strength-outline": "\U0000E8FD", "new-box": "\U0000E393", "newspaper": "\U0000E394", "newspaper-minus": "\U0000EF0B", "newspaper-plus": "\U0000EF0C", "newspaper-variant": "\U0000F000", "newspaper-variant-multiple": "\U0000F001", "newspaper-variant-multiple-outline": "\U0000F002", "newspaper-variant-outline": "\U0000F003", "nfc": "\U0000E395", "nfc-search-variant": "\U0000EE52", "nfc-tap": "\U0000E396", "nfc-variant": "\U0000E397", "nfc-variant-off": "\U0000EE53", "ninja": "\U0000E773", "nintendo-game-boy": "\U0000F392", "nintendo-switch": "\U0000E7E0", "nintendo-wii": "\U0000E5AA", "nintendo-wiiu": "\U0000E72C", "nix": "\U0000F104", "nodejs": "\U0000E398", "noodles": "\U0000F17D", "not-equal": "\U0000E98C", "not-equal-variant": "\U0000E98D", "note": "\U0000E399", "note-multiple": "\U0000E6B7", "note-multiple-outline": "\U0000E6B8", "note-outline": "\U0000E39A", "note-plus": "\U0000E39B", "note-plus-outline": "\U0000E39C", "note-text": "\U0000E39D", "note-text-outline": "\U0000F1D6", "notebook": "\U0000E82D", "notebook-multiple": "\U0000EE54", "notebook-outline": "\U0000EEBE", "notification-clear-all": "\U0000E39E", "npm": "\U0000E6F6", "nuke": "\U0000E6A3", "null": "\U0000E7E1", "numeric": "\U0000E39F", "numeric-0": "\U0000EB38", "numeric-0-box": "\U0000E3A0", "numeric-0-box-multiple": "\U0000EF0D", "numeric-0-box-multiple-outline": "\U0000E3A1", "numeric-0-box-outline": "\U0000E3A2", "numeric-0-circle": "\U0000EC9D", "numeric-0-circle-outline": "\U0000EC9E", "numeric-1": "\U0000EB39", "numeric-1-box": "\U0000E3A3", "numeric-1-box-multiple": "\U0000EF0E", "numeric-1-box-multiple-outline": "\U0000E3A4", "numeric-1-box-outline": "\U0000E3A5", "numeric-1-circle": "\U0000EC9F", "numeric-1-circle-outline": "\U0000ECA0", "numeric-10": "\U0000EFE8", "numeric-10-box": "\U0000EF7C", "numeric-10-box-multiple": "\U0000EFE9", "numeric-10-box-multiple-outline": "\U0000EFEA", "numeric-10-box-outline": "\U0000EF7D", "numeric-10-circle": "\U0000EFEB", "numeric-10-circle-outline": "\U0000EFEC", "numeric-2": "\U0000EB3A", "numeric-2-box": "\U0000E3A6", "numeric-2-box-multiple": "\U0000EF0F", "numeric-2-box-multiple-outline": "\U0000E3A7", "numeric-2-box-outline": "\U0000E3A8", "numeric-2-circle": "\U0000ECA1", "numeric-2-circle-outline": "\U0000ECA2", "numeric-3": "\U0000EB3B", "numeric-3-box": "\U0000E3A9", "numeric-3-box-multiple": "\U0000EF10", "numeric-3-box-multiple-outline": "\U0000E3AA", "numeric-3-box-outline": "\U0000E3AB", "numeric-3-circle": "\U0000ECA3", "numeric-3-circle-outline": "\U0000ECA4", "numeric-4": "\U0000EB3C", "numeric-4-box": "\U0000E3AC", "numeric-4-box-multiple": "\U0000EF11", "numeric-4-box-multiple-outline": "\U0000E3B1", "numeric-4-box-outline": "\U0000E3AD", "numeric-4-circle": "\U0000ECA5", "numeric-4-circle-outline": "\U0000ECA6", "numeric-5": "\U0000EB3D", "numeric-5-box": "\U0000E3B0", "numeric-5-box-multiple": "\U0000EF12", "numeric-5-box-multiple-outline": "\U0000E3AE", "numeric-5-box-outline": "\U0000E3AF", "numeric-5-circle": "\U0000ECA7", "numeric-5-circle-outline": "\U0000ECA8", "numeric-6": "\U0000EB3E", "numeric-6-box": "\U0000E3B2", "numeric-6-box-multiple": "\U0000EF13", "numeric-6-box-multiple-outline": "\U0000E3B3", "numeric-6-box-outline": "\U0000E3B4", "numeric-6-circle": "\U0000ECA9", "numeric-6-circle-outline": "\U0000ECAA", "numeric-7": "\U0000EB3F", "numeric-7-box": "\U0000E3B5", "numeric-7-box-multiple": "\U0000EF14", "numeric-7-box-multiple-outline": "\U0000E3B6", "numeric-7-box-outline": "\U0000E3B7", "numeric-7-circle": "\U0000ECAB", "numeric-7-circle-outline": "\U0000ECAC", "numeric-8": "\U0000EB40", "numeric-8-box": "\U0000E3B8", "numeric-8-box-multiple": "\U0000EF15", "numeric-8-box-multiple-outline": "\U0000E3B9", "numeric-8-box-outline": "\U0000E3BA", "numeric-8-circle": "\U0000ECAD", "numeric-8-circle-outline": "\U0000ECAE", "numeric-9": "\U0000EB41", "numeric-9-box": "\U0000E3BB", "numeric-9-box-multiple": "\U0000EF16", "numeric-9-box-multiple-outline": "\U0000E3BC", "numeric-9-box-outline": "\U0000E3BD", "numeric-9-circle": "\U0000ECAF", "numeric-9-circle-outline": "\U0000ECB0", "numeric-9-plus": "\U0000EFED", "numeric-9-plus-box": "\U0000E3BE", "numeric-9-plus-box-multiple": "\U0000EF17", "numeric-9-plus-box-multiple-outline": "\U0000E3BF", "numeric-9-plus-box-outline": "\U0000E3C0", "numeric-9-plus-circle": "\U0000ECB1", "numeric-9-plus-circle-outline": "\U0000ECB2", "numeric-negative-1": "\U0000F051", "nut": "\U0000E6F7", "nutrition": "\U0000E3C1", "nuxt": "\U0000F105", "oar": "\U0000E67B", "ocarina": "\U0000EDDF", "oci": "\U0000F2E8", "ocr": "\U0000F139", "octagon": "\U0000E3C2", "octagon-outline": "\U0000E3C3", "octagram": "\U0000E6F8", "octagram-outline": "\U0000E774", "odnoklassniki": "\U0000E3C4", "offer": "\U0000F21A", "office-building": "\U0000E990", "oil": "\U0000E3C6", "oil-lamp": "\U0000EF18", "oil-level": "\U0000F052", "oil-temperature": "\U0000EFF7", "omega": "\U0000E3C8", "one-up": "\U0000EBAC", "onepassword": "\U0000E880", "opacity": "\U0000E5CB", "open-in-app": "\U0000E3CA", "open-in-new": "\U0000E3CB", "open-source-initiative": "\U0000EBAD", "openid": "\U0000E3CC", "opera": "\U0000E3CD", "orbit": "\U0000E017", "order-alphabetical-ascending": "\U0000E20C", "order-alphabetical-descending": "\U0000ED06", "order-bool-ascending": "\U0000E2BD", "order-bool-ascending-variant": "\U0000E98E", "order-bool-descending": "\U0000F383", "order-bool-descending-variant": "\U0000E98F", "order-numeric-ascending": "\U0000E544", "order-numeric-descending": "\U0000E545", "origin": "\U0000EB42", "ornament": "\U0000E3CE", "ornament-variant": "\U0000E3CF", "outdoor-lamp": "\U0000F053", "overscan": "\U0000F004", "owl": "\U0000E3D1", "pac-man": "\U0000EBAE", "package": "\U0000E3D2", "package-down": "\U0000E3D3", "package-up": "\U0000E3D4", "package-variant": "\U0000E3D5", "package-variant-closed": "\U0000E3D6", "page-first": "\U0000E5FF", "page-last": "\U0000E600", "page-layout-body": "\U0000E6F9", "page-layout-footer": "\U0000E6FA", "page-layout-header": "\U0000E6FB", "page-layout-header-footer": "\U0000EF7E", "page-layout-sidebar-left": "\U0000E6FC", "page-layout-sidebar-right": "\U0000E6FD", "page-next": "\U0000EBAF", "page-next-outline": "\U0000EBB0", "page-previous": "\U0000EBB1", "page-previous-outline": "\U0000EBB2", "palette": "\U0000E3D7", "palette-advanced": "\U0000E3D8", "palette-outline": "\U0000EE0B", "palette-swatch": "\U0000E8B4", "palette-swatch-outline": "\U0000F35B", "palm-tree": "\U0000F054", "pan": "\U0000EBB3", "pan-bottom-left": "\U0000EBB4", "pan-bottom-right": "\U0000EBB5", "pan-down": "\U0000EBB6", "pan-horizontal": "\U0000EBB7", "pan-left": "\U0000EBB8", "pan-right": "\U0000EBB9", "pan-top-left": "\U0000EBBA", "pan-top-right": "\U0000EBBB", "pan-up": "\U0000EBBC", "pan-vertical": "\U0000EBBD", "panda": "\U0000E3D9", "pandora": "\U0000E3DA", "panorama": "\U0000E3DB", "panorama-fisheye": "\U0000E3DC", "panorama-horizontal": "\U0000E3DD", "panorama-vertical": "\U0000E3DE", "panorama-wide-angle": "\U0000E3DF", "paper-cut-vertical": "\U0000E3E0", "paper-roll": "\U0000F156", "paper-roll-outline": "\U0000F157", "paperclip": "\U0000E3E1", "parachute": "\U0000ECB3", "parachute-outline": "\U0000ECB4", "parking": "\U0000E3E2", "party-popper": "\U0000F055", "passport": "\U0000E7E2", "passport-biometric": "\U0000EDE0", "pasta": "\U0000F15F", "patio-heater": "\U0000EF7F", "patreon": "\U0000E881", "pause": "\U0000E3E3", "pause-circle": "\U0000E3E4", "pause-circle-outline": "\U0000E3E5", "pause-octagon": "\U0000E3E6", "pause-octagon-outline": "\U0000E3E7", "paw": "\U0000E3E8", "paw-off": "\U0000E656", "pdf-box": "\U0000EE55", "peace": "\U0000E883", "peanut": "\U0000EFFB", "peanut-off": "\U0000EFFC", "peanut-off-outline": "\U0000EFFE", "peanut-outline": "\U0000EFFD", "pen": "\U0000E3E9", "pen-lock": "\U0000EDE1", "pen-minus": "\U0000EDE2", "pen-off": "\U0000EDE3", "pen-plus": "\U0000EDE4", "pen-remove": "\U0000EDE5", "pencil": "\U0000E3EA", "pencil-box": "\U0000E3EB", "pencil-box-multiple": "\U0000F143", "pencil-box-multiple-outline": "\U0000F144", "pencil-box-outline": "\U0000E3EC", "pencil-circle": "\U0000E6FE", "pencil-circle-outline": "\U0000E775", "pencil-lock": "\U0000E3ED", "pencil-lock-outline": "\U0000EDE6", "pencil-minus": "\U0000EDE7", "pencil-minus-outline": "\U0000EDE8", "pencil-off": "\U0000E3EE", "pencil-off-outline": "\U0000EDE9", "pencil-outline": "\U0000ECB5", "pencil-plus": "\U0000EDEA", "pencil-plus-outline": "\U0000EDEB", "pencil-remove": "\U0000EDEC", "pencil-remove-outline": "\U0000EDED", "pencil-ruler": "\U0000F352", "penguin": "\U0000EEBF", "pentagon": "\U0000E700", "pentagon-outline": "\U0000E6FF", "percent": "\U0000E3EF", "percent-outline": "\U0000F277", "periodic-table": "\U0000E8B5", "perspective-less": "\U0000ED22", "perspective-more": "\U0000ED23", "pharmacy": "\U0000E3F0", "phone": "\U0000E3F1", "phone-alert": "\U0000EF19", "phone-alert-outline": "\U0000F18D", "phone-bluetooth": "\U0000E3F2", "phone-bluetooth-outline": "\U0000F18E", "phone-cancel": "\U0000F0BB", "phone-cancel-outline": "\U0000F18F", "phone-check": "\U0000F1A8", "phone-check-outline": "\U0000F1A9", "phone-classic": "\U0000E601", "phone-classic-off": "\U0000F278", "phone-forward": "\U0000E3F3", "phone-forward-outline": "\U0000F190", "phone-hangup": "\U0000E3F4", "phone-hangup-outline": "\U0000F191", "phone-in-talk": "\U0000E3F5", "phone-in-talk-outline": "\U0000F181", "phone-incoming": "\U0000E3F6", "phone-incoming-outline": "\U0000F192", "phone-lock": "\U0000E3F7", "phone-lock-outline": "\U0000F193", "phone-log": "\U0000E3F8", "phone-log-outline": "\U0000F194", "phone-message": "\U0000F195", "phone-message-outline": "\U0000F196", "phone-minus": "\U0000E657", "phone-minus-outline": "\U0000F197", "phone-missed": "\U0000E3F9", "phone-missed-outline": "\U0000F1A4", "phone-off": "\U0000EDEE", "phone-off-outline": "\U0000F1A5", "phone-outgoing": "\U0000E3FA", "phone-outgoing-outline": "\U0000F198", "phone-outline": "\U0000EDEF", "phone-paused": "\U0000E3FB", "phone-paused-outline": "\U0000F199", "phone-plus": "\U0000E658", "phone-plus-outline": "\U0000F19A", "phone-return": "\U0000E82E", "phone-return-outline": "\U0000F19B", "phone-ring": "\U0000F1AA", "phone-ring-outline": "\U0000F1AB", "phone-rotate-landscape": "\U0000E884", "phone-rotate-portrait": "\U0000E885", "phone-settings": "\U0000E3FC", "phone-settings-outline": "\U0000F19C", "phone-voip": "\U0000E3FD", "pi": "\U0000E3FE", "pi-box": "\U0000E3FF", "pi-hole": "\U0000EDF0", "piano": "\U0000E67C", "pickaxe": "\U0000E8B6", "picture-in-picture-bottom-right": "\U0000EE56", "picture-in-picture-bottom-right-outline": "\U0000EE57", "picture-in-picture-top-right": "\U0000EE58", "picture-in-picture-top-right-outline": "\U0000EE59", "pier": "\U0000E886", "pier-crane": "\U0000E887", "pig": "\U0000E400", "pig-variant": "\U0000F005", "piggy-bank": "\U0000F006", "pill": "\U0000E401", "pillar": "\U0000E701", "pin": "\U0000E402", "pin-off": "\U0000E403", "pin-off-outline": "\U0000E92F", "pin-outline": "\U0000E930", "pine-tree": "\U0000E404", "pine-tree-box": "\U0000E405", "pinterest": "\U0000E406", "pinwheel": "\U0000EAD4", "pinwheel-outline": "\U0000EAD5", "pipe": "\U0000E7E4", "pipe-disconnected": "\U0000E7E5", "pipe-leak": "\U0000E888", "pipe-wrench": "\U0000F353", "pirate": "\U0000EA07", "pistol": "\U0000E702", "piston": "\U0000E889", "pizza": "\U0000E408", "play": "\U0000E409", "play-box": "\U0000F279", "play-box-multiple": "\U0000ED18", "play-box-multiple-outline": "\U0000F3E5", "play-box-outline": "\U0000E40A", "play-circle": "\U0000E40B", "play-circle-outline": "\U0000E40C", "play-network": "\U0000E88A", "play-network-outline": "\U0000ECB6", "play-outline": "\U0000EF1A", "play-pause": "\U0000E40D", "play-protected-content": "\U0000E40E", "play-speed": "\U0000E8FE", "playlist-check": "\U0000E5C6", "playlist-edit": "\U0000E8FF", "playlist-minus": "\U0000E40F", "playlist-music": "\U0000ECB7", "playlist-music-outline": "\U0000ECB8", "playlist-play": "\U0000E410", "playlist-plus": "\U0000E411", "playlist-remove": "\U0000E412", "playlist-star": "\U0000EDF1", "plex": "\U0000E6B9", "plus": "\U0000E414", "plus-box": "\U0000E415", "plus-box-multiple": "\U0000E333", "plus-box-multiple-outline": "\U0000F142", "plus-box-outline": "\U0000E703", "plus-circle": "\U0000E416", "plus-circle-multiple": "\U0000E34B", "plus-circle-multiple-outline": "\U0000E417", "plus-circle-outline": "\U0000E418", "plus-minus": "\U0000E991", "plus-minus-box": "\U0000E992", "plus-network": "\U0000E419", "plus-network-outline": "\U0000ECB9", "plus-one": "\U0000E41A", "plus-outline": "\U0000E704", "plus-thick": "\U0000F1EB", "podcast": "\U0000E993", "podium": "\U0000ED24", "podium-bronze": "\U0000ED25", "podium-gold": "\U0000ED26", "podium-silver": "\U0000ED27", "point-of-sale": "\U0000ED91", "pokeball": "\U0000E41C", "pokemon-go": "\U0000EA08", "poker-chip": "\U0000E82F", "polaroid": "\U0000E41D", "police-badge": "\U0000F166", "police-badge-outline": "\U0000F167", "poll": "\U0000E41E", "poll-box": "\U0000E41F", "poll-box-outline": "\U0000F27A", "polymer": "\U0000E420", "pool": "\U0000E605", "popcorn": "\U0000E421", "post": "\U0000F007", "post-outline": "\U0000F008", "postage-stamp": "\U0000ECBA", "pot": "\U0000E2E4", "pot-mix": "\U0000E65A", "pot-mix-outline": "\U0000E676", "pot-outline": "\U0000E2FE", "pot-steam": "\U0000E659", "pot-steam-outline": "\U0000E325", "pound": "\U0000E422", "pound-box": "\U0000E423", "pound-box-outline": "\U0000F17E", "power": "\U0000E424", "power-cycle": "\U0000E900", "power-off": "\U0000E901", "power-on": "\U0000E902", "power-plug": "\U0000E6A4", "power-plug-off": "\U0000E6A5", "power-settings": "\U0000E425", "power-sleep": "\U0000E903", "power-socket": "\U0000E426", "power-socket-au": "\U0000E904", "power-socket-de": "\U0000F106", "power-socket-eu": "\U0000E7E6", "power-socket-fr": "\U0000F107", "power-socket-jp": "\U0000F108", "power-socket-uk": "\U0000E7E7", "power-socket-us": "\U0000E7E8", "power-standby": "\U0000E905", "powershell": "\U0000EA09", "prescription": "\U0000E705", "presentation": "\U0000E427", "presentation-play": "\U0000E428", "printer": "\U0000E429", "printer-3d": "\U0000E42A", "printer-3d-nozzle": "\U0000EE5A", "printer-3d-nozzle-alert": "\U0000F1BF", "printer-3d-nozzle-alert-outline": "\U0000F1C0", "printer-3d-nozzle-outline": "\U0000EE5B", "printer-alert": "\U0000E42B", "printer-check": "\U0000F145", "printer-off": "\U0000EE5C", "printer-pos": "\U0000F056", "printer-settings": "\U0000E706", "printer-wireless": "\U0000EA0A", "priority-high": "\U0000E602", "priority-low": "\U0000E603", "professional-hexagon": "\U0000E42C", "progress-alert": "\U0000ECBB", "progress-check": "\U0000E994", "progress-clock": "\U0000E995", "progress-close": "\U0000F109", "progress-download": "\U0000E996", "progress-upload": "\U0000E997", "progress-wrench": "\U0000ECBC", "projector": "\U0000E42D", "projector-screen": "\U0000E42E", "propane-tank": "\U0000F356", "propane-tank-outline": "\U0000F357", "protocol": "\U0000EFD7", "publish": "\U0000E6A6", "pulse": "\U0000E42F", "pumpkin": "\U0000EBBE", "purse": "\U0000EF1B", "purse-outline": "\U0000EF1C", "puzzle": "\U0000E430", "puzzle-outline": "\U0000EA65", "qi": "\U0000E998", "qqchat": "\U0000E604", "qrcode": "\U0000E431", "qrcode-edit": "\U0000E8B7", "qrcode-minus": "\U0000F18B", "qrcode-plus": "\U0000F18A", "qrcode-remove": "\U0000F18C", "qrcode-scan": "\U0000E432", "quadcopter": "\U0000E433", "quality-high": "\U0000E434", "quality-low": "\U0000EA0B", "quality-medium": "\U0000EA0C", "quora": "\U0000ED28", "rabbit": "\U0000E906", "racing-helmet": "\U0000ED92", "racquetball": "\U0000ED93", "radar": "\U0000E436", "radiator": "\U0000E437", "radiator-disabled": "\U0000EAD6", "radiator-off": "\U0000EAD7", "radio": "\U0000E438", "radio-am": "\U0000ECBD", "radio-fm": "\U0000ECBE", "radio-handheld": "\U0000E439", "radio-off": "\U0000F21B", "radio-tower": "\U0000E43A", "radioactive": "\U0000E43B", "radioactive-off": "\U0000EEC0", "radiobox-blank": "\U0000E43C", "radiobox-marked": "\U0000E43D", "radius": "\U0000ECBF", "radius-outline": "\U0000ECC0", "railroad-light": "\U0000EF1D", "raspberry-pi": "\U0000E43E", "ray-end": "\U0000E43F", "ray-end-arrow": "\U0000E440", "ray-start": "\U0000E441", "ray-start-arrow": "\U0000E442", "ray-start-end": "\U0000E443", "ray-vertex": "\U0000E444", "react": "\U0000E707", "read": "\U0000E446", "receipt": "\U0000E448", "record": "\U0000E449", "record-circle": "\U0000EEC1", "record-circle-outline": "\U0000EEC2", "record-player": "\U0000E999", "record-rec": "\U0000E44A", "rectangle": "\U0000EE5D", "rectangle-outline": "\U0000EE5E", "recycle": "\U0000E44B", "recycle-variant": "\U0000F39C", "reddit": "\U0000E44C", "redhat": "\U0000F11A", "redo": "\U0000E44D", "redo-variant": "\U0000E44E", "reflect-horizontal": "\U0000EA0D", "reflect-vertical": "\U0000EA0E", "refresh": "\U0000E44F", "refresh-circle": "\U0000F376", "regex": "\U0000E450", "registered-trademark": "\U0000EA66", "relative-scale": "\U0000E451", "reload": "\U0000E452", "reload-alert": "\U0000F10A", "reminder": "\U0000E88B", "remote": "\U0000E453", "remote-desktop": "\U0000E8B8", "remote-off": "\U0000EEC3", "remote-tv": "\U0000EEC4", "remote-tv-off": "\U0000EEC5", "rename-box": "\U0000E454", "reorder-horizontal": "\U0000E687", "reorder-vertical": "\U0000E688", "repeat": "\U0000E455", "repeat-off": "\U0000E456", "repeat-once": "\U0000E457", "replay": "\U0000E458", "reply": "\U0000E459", "reply-all": "\U0000E45A", "reply-all-outline": "\U0000EF1E", "reply-circle": "\U0000F1AD", "reply-outline": "\U0000EF1F", "reproduction": "\U0000E45B", "resistor": "\U0000EB43", "resistor-nodes": "\U0000EB44", "resize": "\U0000EA67", "resize-bottom-right": "\U0000E45C", "responsive": "\U0000E45D", "restart": "\U0000E708", "restart-alert": "\U0000F10B", "restart-off": "\U0000ED94", "restore": "\U0000E99A", "restore-alert": "\U0000F10C", "rewind": "\U0000E45E", "rewind-10": "\U0000ED29", "rewind-30": "\U0000ED95", "rewind-5": "\U0000F1F8", "rewind-outline": "\U0000E709", "rhombus": "\U0000E70A", "rhombus-medium": "\U0000EA0F", "rhombus-outline": "\U0000E70B", "rhombus-split": "\U0000EA10", "ribbon": "\U0000E45F", "rice": "\U0000E7E9", "ring": "\U0000E7EA", "rivet": "\U0000EE5F", "road": "\U0000E460", "road-variant": "\U0000E461", "robber": "\U0000F057", "robot": "\U0000E6A8", "robot-industrial": "\U0000EB45", "robot-mower": "\U0000F1F6", "robot-mower-outline": "\U0000F1F2", "robot-vacuum": "\U0000E70C", "robot-vacuum-variant": "\U0000E907", "rocket": "\U0000E462", "rocket-outline": "\U0000F3AE", "rodent": "\U0000F326", "roller-skate": "\U0000ED2A", "roller-skate-off": "\U0000E144", "rollerblade": "\U0000ED2B", "rollerblade-off": "\U0000E02D", "rollupjs": "\U0000EBBF", "roman-numeral-1": "\U0000F087", "roman-numeral-10": "\U0000F090", "roman-numeral-2": "\U0000F088", "roman-numeral-3": "\U0000F089", "roman-numeral-4": "\U0000F08A", "roman-numeral-5": "\U0000F08B", "roman-numeral-6": "\U0000F08C", "roman-numeral-7": "\U0000F08D", "roman-numeral-8": "\U0000F08E", "roman-numeral-9": "\U0000F08F", "room-service": "\U0000E88C", "room-service-outline": "\U0000ED96", "rotate-3d": "\U0000EEC6", "rotate-3d-variant": "\U0000E463", "rotate-left": "\U0000E464", "rotate-left-variant": "\U0000E465", "rotate-orbit": "\U0000ED97", "rotate-right": "\U0000E466", "rotate-right-variant": "\U0000E467", "rounded-corner": "\U0000E606", "router": "\U0000F1E1", "router-network": "\U0000F086", "router-wireless": "\U0000E468", "router-wireless-settings": "\U0000EA68", "routes": "\U0000E469", "routes-clock": "\U0000F058", "rowing": "\U0000E607", "rss": "\U0000E46A", "rss-box": "\U0000E46B", "rss-off": "\U0000EF20", "rugby": "\U0000ED98", "ruler": "\U0000E46C", "ruler-square": "\U0000ECC1", "ruler-square-compass": "\U0000EEBD", "run": "\U0000E70D", "run-fast": "\U0000E46D", "rv-truck": "\U0000F1D3", "sack": "\U0000ED2D", "sack-percent": "\U0000ED2E", "safe": "\U0000EA69", "safe-square": "\U0000F27B", "safe-square-outline": "\U0000F27C", "safety-goggles": "\U0000ED2F", "sail-boat": "\U0000EEC7", "sale": "\U0000E46E", "salesforce": "\U0000E88D", "sass": "\U0000E7EB", "satellite": "\U0000E46F", "satellite-uplink": "\U0000E908", "satellite-variant": "\U0000E470", "sausage": "\U0000E8B9", "saw-blade": "\U0000EE60", "saxophone": "\U0000E608", "scale": "\U0000E471", "scale-balance": "\U0000E5D0", "scale-bathroom": "\U0000E472", "scale-off": "\U0000F059", "scan-helper": "\U0000F3D7", "scanner": "\U0000E6AA", "scanner-off": "\U0000E909", "scatter-plot": "\U0000EEC8", "scatter-plot-outline": "\U0000EEC9", "school": "\U0000E473", "school-outline": "\U0000F17F", "scissors-cutting": "\U0000EA6A", "scooter": "\U0000F1E8", "scoreboard": "\U0000F27D", "scoreboard-outline": "\U0000F27E", "screen-rotation": "\U0000E474", "screen-rotation-lock": "\U0000E477", "screw-flat-top": "\U0000EDF2", "screw-lag": "\U0000EDF3", "screw-machine-flat-top": "\U0000EDF4", "screw-machine-round-top": "\U0000EDF5", "screw-round-top": "\U0000EDF6", "screwdriver": "\U0000E475", "script": "\U0000EBC0", "script-outline": "\U0000E476", "script-text": "\U0000EBC1", "script-text-outline": "\U0000EBC2", "sd": "\U0000E478", "seal": "\U0000E479", "seal-variant": "\U0000EFD8", "search-web": "\U0000E70E", "seat": "\U0000ECC2", "seat-flat": "\U0000E47A", "seat-flat-angled": "\U0000E47B", "seat-individual-suite": "\U0000E47C", "seat-legroom-extra": "\U0000E47D", "seat-legroom-normal": "\U0000E47E", "seat-legroom-reduced": "\U0000E47F", "seat-outline": "\U0000ECC3", "seat-passenger": "\U0000F248", "seat-recline-extra": "\U0000E480", "seat-recline-normal": "\U0000E481", "seatbelt": "\U0000ECC4", "security": "\U0000E482", "security-network": "\U0000E483", "seed": "\U0000EE61", "seed-off": "\U0000F3FC", "seed-off-outline": "\U0000F3FD", "seed-outline": "\U0000EE62", "segment": "\U0000EECA", "select": "\U0000E484", "select-all": "\U0000E485", "select-color": "\U0000ED30", "select-compare": "\U0000EAD8", "select-drag": "\U0000EA6B", "select-group": "\U0000EF81", "select-inverse": "\U0000E486", "select-marker": "\U0000F27F", "select-multiple": "\U0000F280", "select-multiple-marker": "\U0000F281", "select-off": "\U0000E487", "select-place": "\U0000EFD9", "select-search": "\U0000F203", "selection": "\U0000E488", "selection-drag": "\U0000EA6C", "selection-ellipse": "\U0000ED31", "selection-ellipse-arrow-inside": "\U0000EF21", "selection-marker": "\U0000F282", "selection-multiple-marker": "\U0000F283", "selection-mutliple": "\U0000F284", "selection-off": "\U0000E776", "selection-search": "\U0000F204", "semantic-web": "\U0000F315", "send": "\U0000E489", "send-check": "\U0000F160", "send-check-outline": "\U0000F161", "send-circle": "\U0000EDF7", "send-circle-outline": "\U0000EDF8", "send-clock": "\U0000F162", "send-clock-outline": "\U0000F163", "send-lock": "\U0000E7EC", "send-lock-outline": "\U0000F165", "send-outline": "\U0000F164", "serial-port": "\U0000E65B", "server": "\U0000E48A", "server-minus": "\U0000E48B", "server-network": "\U0000E48C", "server-network-off": "\U0000E48D", "server-off": "\U0000E48E", "server-plus": "\U0000E48F", "server-remove": "\U0000E490", "server-security": "\U0000E491", "set-all": "\U0000E777", "set-center": "\U0000E778", "set-center-right": "\U0000E779", "set-left": "\U0000E77A", "set-left-center": "\U0000E77B", "set-left-right": "\U0000E77C", "set-none": "\U0000E77D", "set-right": "\U0000E77E", "set-top-box": "\U0000E99E", "settings-helper": "\U0000EA6D", "shaker": "\U0000F10D", "shaker-outline": "\U0000F10E", "shape": "\U0000E830", "shape-circle-plus": "\U0000E65C", "shape-outline": "\U0000E831", "shape-oval-plus": "\U0000F1F9", "shape-plus": "\U0000E494", "shape-polygon-plus": "\U0000E65D", "shape-rectangle-plus": "\U0000E65E", "shape-square-plus": "\U0000E65F", "share": "\U0000E495", "share-all": "\U0000F1F3", "share-all-outline": "\U0000F1F4", "share-circle": "\U0000F1AC", "share-off": "\U0000EF22", "share-off-outline": "\U0000EF23", "share-outline": "\U0000E931", "share-variant": "\U0000E496", "sheep": "\U0000ECC5", "shield": "\U0000E497", "shield-account": "\U0000E88E", "shield-account-outline": "\U0000EA11", "shield-airplane": "\U0000E6BA", "shield-airplane-outline": "\U0000ECC6", "shield-alert": "\U0000EECB", "shield-alert-outline": "\U0000EECC", "shield-bug": "\U0000F3D9", "shield-bug-outline": "\U0000F3DA", "shield-car": "\U0000EF82", "shield-check": "\U0000E564", "shield-check-outline": "\U0000ECC7", "shield-cross": "\U0000ECC8", "shield-cross-outline": "\U0000ECC9", "shield-edit": "\U0000F19F", "shield-edit-outline": "\U0000F1A0", "shield-half": "\U0000F35F", "shield-half-full": "\U0000E77F", "shield-home": "\U0000E689", "shield-home-outline": "\U0000ECCA", "shield-key": "\U0000EBC3", "shield-key-outline": "\U0000EBC4", "shield-link-variant": "\U0000ED32", "shield-link-variant-outline": "\U0000ED33", "shield-lock": "\U0000E99C", "shield-lock-outline": "\U0000ECCB", "shield-off": "\U0000E99D", "shield-off-outline": "\U0000E99B", "shield-outline": "\U0000E498", "shield-plus": "\U0000EAD9", "shield-plus-outline": "\U0000EADA", "shield-refresh": "\U0000E0A9", "shield-refresh-outline": "\U0000E1DF", "shield-remove": "\U0000EADB", "shield-remove-outline": "\U0000EADC", "shield-search": "\U0000ED99", "shield-star": "\U0000F13A", "shield-star-outline": "\U0000F13B", "shield-sun": "\U0000F05C", "shield-sun-outline": "\U0000F05D", "shield-sync": "\U0000F1A1", "shield-sync-outline": "\U0000F1A2", "ship-wheel": "\U0000E832", "shoe-formal": "\U0000EB46", "shoe-heel": "\U0000EB47", "shoe-print": "\U0000EDF9", "shopping": "\U0000E499", "shopping-music": "\U0000E49A", "shopping-outline": "\U0000F1D4", "shopping-search": "\U0000EF83", "shovel": "\U0000E70F", "shovel-off": "\U0000E710", "shower": "\U0000E99F", "shower-head": "\U0000E9A0", "shredder": "\U0000E49B", "shuffle": "\U0000E49C", "shuffle-disabled": "\U0000E49D", "shuffle-variant": "\U0000E49E", "shuriken": "\U0000F37E", "sigma": "\U0000E49F", "sigma-lower": "\U0000E62A", "sign-caution": "\U0000E4A0", "sign-direction": "\U0000E780", "sign-direction-minus": "\U0000EFFF", "sign-direction-plus": "\U0000EFDB", "sign-direction-remove": "\U0000EFDC", "sign-real-estate": "\U0000F117", "sign-text": "\U0000E781", "signal": "\U0000E4A1", "signal-2g": "\U0000E711", "signal-3g": "\U0000E712", "signal-4g": "\U0000E713", "signal-5g": "\U0000EA6E", "signal-cellular-1": "\U0000E8BB", "signal-cellular-2": "\U0000E8BC", "signal-cellular-3": "\U0000E8BD", "signal-cellular-outline": "\U0000E8BE", "signal-distance-variant": "\U0000EE63", "signal-hspa": "\U0000E714", "signal-hspa-plus": "\U0000E715", "signal-off": "\U0000E782", "signal-variant": "\U0000E609", "signature": "\U0000EDFA", "signature-freehand": "\U0000EDFB", "signature-image": "\U0000EDFC", "signature-text": "\U0000EDFD", "silo": "\U0000EB48", "silverware": "\U0000E4A2", "silverware-clean": "\U0000EFDD", "silverware-fork": "\U0000E4A3", "silverware-fork-knife": "\U0000EA6F", "silverware-spoon": "\U0000E4A4", "silverware-variant": "\U0000E4A5", "sim": "\U0000E4A6", "sim-alert": "\U0000E4A7", "sim-off": "\U0000E4A8", "simple-icons": "\U0000F31C", "sina-weibo": "\U0000EADE", "sitemap": "\U0000E4A9", "size-l": "\U0000F3A5", "size-m": "\U0000F3A4", "size-s": "\U0000F3A3", "size-xl": "\U0000F3A6", "size-xs": "\U0000F3A2", "size-xxl": "\U0000F3A7", "size-xxs": "\U0000F3A1", "size-xxxl": "\U0000F3A8", "skate": "\U0000ED34", "skew-less": "\U0000ED35", "skew-more": "\U0000ED36", "ski": "\U0000F303", "ski-cross-country": "\U0000F304", "ski-water": "\U0000F305", "skip-backward": "\U0000E4AA", "skip-backward-outline": "\U0000EF24", "skip-forward": "\U0000E4AB", "skip-forward-outline": "\U0000EF25", "skip-next": "\U0000E4AC", "skip-next-circle": "\U0000E660", "skip-next-circle-outline": "\U0000E661", "skip-next-outline": "\U0000EF26", "skip-previous": "\U0000E4AD", "skip-previous-circle": "\U0000E662", "skip-previous-circle-outline": "\U0000E663", "skip-previous-outline": "\U0000EF27", "skull": "\U0000E68B", "skull-crossbones": "\U0000EBC5", "skull-crossbones-outline": "\U0000EBC6", "skull-outline": "\U0000EBC7", "skype": "\U0000E4AE", "skype-business": "\U0000E4AF", "slack": "\U0000E4B0", "slash-forward": "\U0000EFDE", "slash-forward-box": "\U0000EFDF", "sleep": "\U0000E4B1", "sleep-off": "\U0000E4B2", "slope-downhill": "\U0000EDFE", "slope-uphill": "\U0000EDFF", "slot-machine": "\U0000F113", "slot-machine-outline": "\U0000F114", "smart-card": "\U0000F0BC", "smart-card-outline": "\U0000F0BD", "smart-card-reader": "\U0000F0BE", "smart-card-reader-outline": "\U0000F0BF", "smog": "\U0000EA70", "smoke-detector": "\U0000E391", "smoking": "\U0000E4B3", "smoking-off": "\U0000E4B4", "snapchat": "\U0000E4B5", "snowboard": "\U0000F306", "snowflake": "\U0000E716", "snowflake-alert": "\U0000EF28", "snowflake-melt": "\U0000F2CA", "snowflake-variant": "\U0000EF29", "snowman": "\U0000E4B6", "soccer": "\U0000E4B7", "soccer-field": "\U0000E833", "sofa": "\U0000E4B8", "solar-panel": "\U0000ED9A", "solar-panel-large": "\U0000ED9B", "solar-power": "\U0000EA71", "soldering-iron": "\U0000F091", "solid": "\U0000E68C", "sony-playstation": "\U0000E413", "sort": "\U0000E4B9", "sort-alphabetical-ascending": "\U0000E5BC", "sort-alphabetical-ascending-variant": "\U0000F147", "sort-alphabetical-descending": "\U0000E5BE", "sort-alphabetical-descending-variant": "\U0000F148", "sort-alphabetical-variant": "\U0000E4BA", "sort-ascending": "\U0000E4BB", "sort-bool-ascending": "\U0000F384", "sort-bool-ascending-variant": "\U0000F385", "sort-bool-descending": "\U0000F386", "sort-bool-descending-variant": "\U0000F387", "sort-descending": "\U0000E4BC", "sort-numeric-ascending": "\U0000F388", "sort-numeric-ascending-variant": "\U0000E90C", "sort-numeric-descending": "\U0000F389", "sort-numeric-descending-variant": "\U0000EAD1", "sort-numeric-variant": "\U0000E4BD", "sort-reverse-variant": "\U0000E33B", "sort-variant": "\U0000E4BE", "sort-variant-lock": "\U0000ECCC", "sort-variant-lock-open": "\U0000ECCD", "sort-variant-remove": "\U0000F146", "soundcloud": "\U0000E4BF", "source-branch": "\U0000E62B", "source-commit": "\U0000E717", "source-commit-end": "\U0000E718", "source-commit-end-local": "\U0000E719", "source-commit-local": "\U0000E71A", "source-commit-next-local": "\U0000E71B", "source-commit-start": "\U0000E71C", "source-commit-start-next-local": "\U0000E71D", "source-fork": "\U0000E4C0", "source-merge": "\U0000E62C", "source-pull": "\U0000E4C1", "source-repository": "\U0000ECCE", "source-repository-multiple": "\U0000ECCF", "soy-sauce": "\U0000E7ED", "soy-sauce-off": "\U0000F3FB", "spa": "\U0000ECD0", "spa-outline": "\U0000ECD1", "space-invaders": "\U0000EBC8", "space-station": "\U0000F382", "spade": "\U0000EE64", "speaker": "\U0000E4C2", "speaker-bluetooth": "\U0000E9A1", "speaker-multiple": "\U0000ED37", "speaker-off": "\U0000E4C3", "speaker-wireless": "\U0000E71E", "speedometer": "\U0000E4C4", "speedometer-medium": "\U0000EF84", "speedometer-slow": "\U0000EF85", "spellcheck": "\U0000E4C5", "spider": "\U0000F1E9", "spider-thread": "\U0000F1EA", "spider-web": "\U0000EBC9", "spotify": "\U0000E4C6", "spotlight": "\U0000E4C7", "spotlight-beam": "\U0000E4C8", "spray": "\U0000E664", "spray-bottle": "\U0000EADF", "sprinkler": "\U0000F05E", "sprinkler-variant": "\U0000F05F", "sprout": "\U0000EE65", "sprout-outline": "\U0000EE66", "square": "\U0000E763", "square-edit-outline": "\U0000E90B", "square-medium": "\U0000EA12", "square-medium-outline": "\U0000EA13", "square-off": "\U0000F2ED", "square-off-outline": "\U0000F2EE", "square-outline": "\U0000E762", "square-root": "\U0000E783", "square-root-box": "\U0000E9A2", "square-small": "\U0000EA14", "squeegee": "\U0000EAE0", "ssh": "\U0000E8BF", "stack-exchange": "\U0000E60A", "stack-overflow": "\U0000E4CB", "stackpath": "\U0000E358", "stadium": "\U0000EFF8", "stadium-variant": "\U0000E71F", "stairs": "\U0000E4CC", "stairs-box": "\U0000F39D", "stairs-down": "\U0000F2BD", "stairs-up": "\U0000F2BC", "stamper": "\U0000ED38", "standard-definition": "\U0000E7EE", "star": "\U0000E4CD", "star-box": "\U0000EA72", "star-box-multiple": "\U0000F285", "star-box-multiple-outline": "\U0000F286", "star-box-outline": "\U0000EA73", "star-circle": "\U0000E4CE", "star-circle-outline": "\U0000E9A3", "star-face": "\U0000E9A4", "star-four-points": "\U0000EAE1", "star-four-points-outline": "\U0000EAE2", "star-half": "\U0000E245", "star-half-full": "\U0000E4CF", "star-off": "\U0000E4D0", "star-outline": "\U0000E4D1", "star-three-points": "\U0000EAE3", "star-three-points-outline": "\U0000EAE4", "state-machine": "\U0000F1EE", "steam": "\U0000E4D2", "steering": "\U0000E4D3", "steering-off": "\U0000E90D", "step-backward": "\U0000E4D4", "step-backward-2": "\U0000E4D5", "step-forward": "\U0000E4D6", "step-forward-2": "\U0000E4D7", "stethoscope": "\U0000E4D8", "sticker": "\U0000F363", "sticker-alert": "\U0000F364", "sticker-alert-outline": "\U0000F365", "sticker-check": "\U0000F366", "sticker-check-outline": "\U0000F367", "sticker-circle-outline": "\U0000E5CF", "sticker-emoji": "\U0000E784", "sticker-minus": "\U0000F368", "sticker-minus-outline": "\U0000F369", "sticker-outline": "\U0000F36A", "sticker-plus": "\U0000F36B", "sticker-plus-outline": "\U0000F36C", "sticker-remove": "\U0000F36D", "sticker-remove-outline": "\U0000F36E", "stocking": "\U0000E4D9", "stomach": "\U0000F092", "stop": "\U0000E4DA", "stop-circle": "\U0000E665", "stop-circle-outline": "\U0000E666", "store": "\U0000E4DB", "store-24-hour": "\U0000E4DC", "store-outline": "\U0000F360", "storefront": "\U0000E7C6", "storefront-outline": "\U0000F0C0", "stove": "\U0000E4DD", "strategy": "\U0000F1D5", "stretch-to-page": "\U0000EF2A", "stretch-to-page-outline": "\U0000EF2B", "string-lights": "\U0000F2B9", "string-lights-off": "\U0000F2BA", "subdirectory-arrow-left": "\U0000E60B", "subdirectory-arrow-right": "\U0000E60C", "subtitles": "\U0000EA15", "subtitles-outline": "\U0000EA16", "subway": "\U0000E6AB", "subway-alert-variant": "\U0000ED9C", "subway-variant": "\U0000E4DE", "summit": "\U0000E785", "sunglasses": "\U0000E4DF", "surround-sound": "\U0000E5C4", "surround-sound-2-0": "\U0000E7EF", "surround-sound-3-1": "\U0000E7F0", "surround-sound-5-1": "\U0000E7F1", "surround-sound-7-1": "\U0000E7F2", "svg": "\U0000E720", "swap-horizontal": "\U0000E4E0", "swap-horizontal-bold": "\U0000EBCC", "swap-horizontal-circle": "\U0000EFE0", "swap-horizontal-circle-outline": "\U0000EFE1", "swap-horizontal-variant": "\U0000E8C0", "swap-vertical": "\U0000E4E1", "swap-vertical-bold": "\U0000EBCD", "swap-vertical-circle": "\U0000EFE2", "swap-vertical-circle-outline": "\U0000EFE3", "swap-vertical-variant": "\U0000E8C1", "swim": "\U0000E4E2", "switch": "\U0000E4E3", "sword": "\U0000E4E4", "sword-cross": "\U0000E786", "syllabary-hangul": "\U0000F332", "syllabary-hiragana": "\U0000F333", "syllabary-katakana": "\U0000F334", "syllabary-katakana-half-width": "\U0000F335", "symfony": "\U0000EAE5", "sync": "\U0000E4E5", "sync-alert": "\U0000E4E6", "sync-circle": "\U0000F377", "sync-off": "\U0000E4E7", "tab": "\U0000E4E8", "tab-minus": "\U0000EB4A", "tab-plus": "\U0000E75B", "tab-remove": "\U0000EB4B", "tab-unselected": "\U0000E4E9", "table": "\U0000E4EA", "table-account": "\U0000F3B8", "table-alert": "\U0000F3B9", "table-arrow-down": "\U0000F3BA", "table-arrow-left": "\U0000F3BB", "table-arrow-right": "\U0000F3BC", "table-arrow-up": "\U0000F3BD", "table-border": "\U0000EA17", "table-cancel": "\U0000F3BE", "table-chair": "\U0000F060", "table-check": "\U0000F3BF", "table-clock": "\U0000F3C0", "table-cog": "\U0000F3C1", "table-column": "\U0000E834", "table-column-plus-after": "\U0000E4EB", "table-column-plus-before": "\U0000E4EC", "table-column-remove": "\U0000E4ED", "table-column-width": "\U0000E4EE", "table-edit": "\U0000E4EF", "table-eye": "\U0000F093", "table-eye-off": "\U0000F3C2", "table-furniture": "\U0000E5BB", "table-headers-eye": "\U0000F21C", "table-headers-eye-off": "\U0000F21D", "table-heart": "\U0000F3C3", "table-key": "\U0000F3C4", "table-large": "\U0000E4F0", "table-large-plus": "\U0000EF86", "table-large-remove": "\U0000EF87", "table-lock": "\U0000F3C5", "table-merge-cells": "\U0000E9A5", "table-minus": "\U0000F3C6", "table-multiple": "\U0000F3C7", "table-network": "\U0000F3C8", "table-of-contents": "\U0000E835", "table-off": "\U0000F3C9", "table-plus": "\U0000EA74", "table-refresh": "\U0000F39F", "table-remove": "\U0000EA75", "table-row": "\U0000E836", "table-row-height": "\U0000E4F1", "table-row-plus-after": "\U0000E4F2", "table-row-plus-before": "\U0000E4F3", "table-row-remove": "\U0000E4F4", "table-search": "\U0000E90E", "table-settings": "\U0000E837", "table-star": "\U0000F3CA", "table-sync": "\U0000F3A0", "table-tennis": "\U0000EE67", "tablet": "\U0000E4F5", "tablet-android": "\U0000E4F6", "tablet-cellphone": "\U0000E9A6", "tablet-dashboard": "\U0000EECD", "tablet-ipad": "\U0000E4F7", "taco": "\U0000E761", "tag": "\U0000E4F8", "tag-faces": "\U0000E4F9", "tag-heart": "\U0000E68A", "tag-heart-outline": "\U0000EBCE", "tag-minus": "\U0000E90F", "tag-minus-outline": "\U0000F21E", "tag-multiple": "\U0000E4FA", "tag-multiple-outline": "\U0000F2F6", "tag-off": "\U0000F21F", "tag-off-outline": "\U0000F220", "tag-outline": "\U0000E4FB", "tag-plus": "\U0000E721", "tag-plus-outline": "\U0000F221", "tag-remove": "\U0000E722", "tag-remove-outline": "\U0000F222", "tag-text": "\U0000F223", "tag-text-outline": "\U0000E4FC", "tank": "\U0000ED39", "tanker-truck": "\U0000EFE4", "tape-measure": "\U0000EB4C", "target": "\U0000E4FD", "target-account": "\U0000EBCF", "target-variant": "\U0000EA76", "taxi": "\U0000E4FE", "tea": "\U0000ED9D", "tea-outline": "\U0000ED9E", "teach": "\U0000E88F", "teamviewer": "\U0000E4FF", "telegram": "\U0000E500", "telescope": "\U0000EB4D", "television": "\U0000E501", "television-ambient-light": "\U0000F355", "television-box": "\U0000E838", "television-classic": "\U0000E7F3", "television-classic-off": "\U0000E839", "television-clean": "\U0000F10F", "television-guide": "\U0000E502", "television-off": "\U0000E83A", "television-pause": "\U0000EF88", "television-play": "\U0000EECE", "television-stop": "\U0000EF89", "temperature-celsius": "\U0000E503", "temperature-fahrenheit": "\U0000E504", "temperature-kelvin": "\U0000E505", "tennis": "\U0000ED9F", "tennis-ball": "\U0000E506", "tent": "\U0000E507", "terraform": "\U0000F061", "terrain": "\U0000E508", "test-tube": "\U0000E667", "test-tube-empty": "\U0000E910", "test-tube-off": "\U0000E911", "text": "\U0000E9A7", "text-box": "\U0000E219", "text-box-check": "\U0000EEA5", "text-box-check-outline": "\U0000EEA6", "text-box-minus": "\U0000EEA7", "text-box-minus-outline": "\U0000EEA8", "text-box-multiple": "\U0000EAB6", "text-box-multiple-outline": "\U0000EAB7", "text-box-outline": "\U0000E9EC", "text-box-plus": "\U0000EEA9", "text-box-plus-outline": "\U0000EEAA", "text-box-remove": "\U0000EEAB", "text-box-remove-outline": "\U0000EEAC", "text-box-search": "\U0000EEAD", "text-box-search-outline": "\U0000EEAE", "text-recognition": "\U0000F13C", "text-search": "\U0000F3B7", "text-shadow": "\U0000E668", "text-short": "\U0000E9A8", "text-subject": "\U0000E9A9", "text-to-speech": "\U0000E509", "text-to-speech-off": "\U0000E50A", "textarea": "\U0000F094", "textbox": "\U0000E60D", "textbox-lock": "\U0000F35C", "textbox-password": "\U0000E7F4", "texture": "\U0000E50B", "texture-box": "\U0000EFE5", "theater": "\U0000E50C", "theme-light-dark": "\U0000E50D", "thermometer": "\U0000E50E", "thermometer-alert": "\U0000EE00", "thermometer-chevron-down": "\U0000EE01", "thermometer-chevron-up": "\U0000EE02", "thermometer-high": "\U0000F0C1", "thermometer-lines": "\U0000E50F", "thermometer-low": "\U0000F0C2", "thermometer-minus": "\U0000EE03", "thermometer-plus": "\U0000EE04", "thermostat": "\U0000E392", "thermostat-box": "\U0000E890", "thought-bubble": "\U0000E7F5", "thought-bubble-outline": "\U0000E7F6", "thumb-down": "\U0000E510", "thumb-down-outline": "\U0000E511", "thumb-up": "\U0000E512", "thumb-up-outline": "\U0000E513", "thumbs-up-down": "\U0000E514", "ticket": "\U0000E515", "ticket-account": "\U0000E516", "ticket-confirmation": "\U0000E517", "ticket-confirmation-outline": "\U0000F3A9", "ticket-outline": "\U0000E912", "ticket-percent": "\U0000E723", "tie": "\U0000E518", "tilde": "\U0000E724", "timelapse": "\U0000E519", "timeline": "\U0000EBD0", "timeline-alert": "\U0000EF94", "timeline-alert-outline": "\U0000EF97", "timeline-clock": "\U0000F1FA", "timeline-clock-outline": "\U0000F1FB", "timeline-help": "\U0000EF98", "timeline-help-outline": "\U0000EF99", "timeline-outline": "\U0000EBD1", "timeline-plus": "\U0000EF95", "timeline-plus-outline": "\U0000EF96", "timeline-text": "\U0000EBD2", "timeline-text-outline": "\U0000EBD3", "timer": "\U0000F3AA", "timer-10": "\U0000E51B", "timer-3": "\U0000E51C", "timer-off": "\U0000F3AB", "timer-off-outline": "\U0000E51D", "timer-outline": "\U0000E51A", "timer-sand": "\U0000E51E", "timer-sand-empty": "\U0000E6AC", "timer-sand-full": "\U0000E78B", "timetable": "\U0000E51F", "toaster": "\U0000F062", "toaster-off": "\U0000F1B6", "toaster-oven": "\U0000ECD2", "toggle-switch": "\U0000E520", "toggle-switch-off": "\U0000E521", "toggle-switch-off-outline": "\U0000EA18", "toggle-switch-outline": "\U0000EA19", "toilet": "\U0000E9AA", "toolbox": "\U0000E9AB", "toolbox-outline": "\U0000E9AC", "tools": "\U0000F063", "tooltip": "\U0000E522", "tooltip-account": "\U0000E00B", "tooltip-edit": "\U0000E523", "tooltip-edit-outline": "\U0000F2C4", "tooltip-image": "\U0000E524", "tooltip-image-outline": "\U0000EBD4", "tooltip-outline": "\U0000E525", "tooltip-plus": "\U0000EBD5", "tooltip-plus-outline": "\U0000E526", "tooltip-text": "\U0000E527", "tooltip-text-outline": "\U0000EBD6", "tooth": "\U0000E8C2", "tooth-outline": "\U0000E528", "toothbrush": "\U0000F128", "toothbrush-electric": "\U0000F12B", "toothbrush-paste": "\U0000F129", "tortoise": "\U0000ED3A", "toslink": "\U0000F2B7", "tournament": "\U0000E9AD", "tow-truck": "\U0000E83B", "tower-beach": "\U0000E680", "tower-fire": "\U0000E681", "toy-brick": "\U0000F287", "toy-brick-marker": "\U0000F288", "toy-brick-marker-outline": "\U0000F289", "toy-brick-minus": "\U0000F28A", "toy-brick-minus-outline": "\U0000F28B", "toy-brick-outline": "\U0000F28C", "toy-brick-plus": "\U0000F28D", "toy-brick-plus-outline": "\U0000F28E", "toy-brick-remove": "\U0000F28F", "toy-brick-remove-outline": "\U0000F290", "toy-brick-search": "\U0000F291", "toy-brick-search-outline": "\U0000F292", "track-light": "\U0000E913", "trackpad": "\U0000E7F7", "trackpad-lock": "\U0000E932", "tractor": "\U0000E891", "trademark": "\U0000EA77", "traffic-cone": "\U0000F37B", "traffic-light": "\U0000E52A", "train": "\U0000E52B", "train-car": "\U0000EBD7", "train-variant": "\U0000E8C3", "tram": "\U0000E52C", "tram-side": "\U0000EFE6", "transcribe": "\U0000E52D", "transcribe-close": "\U0000E52E", "transfer": "\U0000F064", "transfer-down": "\U0000EDA0", "transfer-left": "\U0000EDA1", "transfer-right": "\U0000E52F", "transfer-up": "\U0000EDA2", "transit-connection": "\U0000ED3B", "transit-connection-variant": "\U0000ED3C", "transit-detour": "\U0000EF8A", "transit-transfer": "\U0000E6AD", "transition": "\U0000E914", "transition-masked": "\U0000E915", "translate": "\U0000E5C9", "translate-off": "\U0000EE05", "transmission-tower": "\U0000ED3D", "trash-can": "\U0000EA78", "trash-can-outline": "\U0000EA79", "tray": "\U0000F293", "tray-alert": "\U0000F294", "tray-full": "\U0000F295", "tray-minus": "\U0000F296", "tray-plus": "\U0000F297", "tray-remove": "\U0000F298", "treasure-chest": "\U0000E725", "tree": "\U0000E530", "tree-outline": "\U0000EE68", "trello": "\U0000E531", "trending-down": "\U0000E532", "trending-neutral": "\U0000E533", "trending-up": "\U0000E534", "triangle": "\U0000E535", "triangle-outline": "\U0000E536", "triforce": "\U0000EBD8", "trophy": "\U0000E537", "trophy-award": "\U0000E538", "trophy-broken": "\U0000EDA3", "trophy-outline": "\U0000E539", "trophy-variant": "\U0000E53A", "trophy-variant-outline": "\U0000E53B", "truck": "\U0000E53C", "truck-check": "\U0000ECD3", "truck-check-outline": "\U0000F299", "truck-delivery": "\U0000E53D", "truck-delivery-outline": "\U0000F29A", "truck-fast": "\U0000E787", "truck-fast-outline": "\U0000F29B", "truck-outline": "\U0000F29C", "truck-trailer": "\U0000E726", "trumpet": "\U0000F095", "tshirt-crew": "\U0000EA7A", "tshirt-crew-outline": "\U0000E53E", "tshirt-v": "\U0000EA7B", "tshirt-v-outline": "\U0000E53F", "tumble-dryer": "\U0000E916", "tumble-dryer-alert": "\U0000F1B9", "tumble-dryer-off": "\U0000F1BA", "tune": "\U0000E62D", "tune-vertical": "\U0000E669", "turnstile": "\U0000ECD4", "turnstile-outline": "\U0000ECD5", "turtle": "\U0000ECD6", "twitch": "\U0000E542", "twitter": "\U0000E543", "twitter-retweet": "\U0000E546", "two-factor-authentication": "\U0000E9AE", "typewriter": "\U0000EF2C", "ubisoft": "\U0000EBD9", "ubuntu": "\U0000E547", "ufo": "\U0000F0C3", "ufo-outline": "\U0000F0C4", "ultra-high-definition": "\U0000E7F8", "umbraco": "\U0000E548", "umbrella": "\U0000E549", "umbrella-closed": "\U0000E9AF", "umbrella-closed-outline": "\U0000F3E1", "umbrella-closed-variant": "\U0000F3E0", "umbrella-outline": "\U0000E54A", "undo": "\U0000E54B", "undo-variant": "\U0000E54C", "unfold-less-horizontal": "\U0000E54D", "unfold-less-vertical": "\U0000E75F", "unfold-more-horizontal": "\U0000E54E", "unfold-more-vertical": "\U0000E760", "ungroup": "\U0000E54F", "unicode": "\U0000EECF", "unity": "\U0000E6AE", "unreal": "\U0000E9B0", "untappd": "\U0000E550", "update": "\U0000E6AF", "upload": "\U0000E551", "upload-lock": "\U0000F372", "upload-lock-outline": "\U0000F373", "upload-multiple": "\U0000E83C", "upload-network": "\U0000E6F5", "upload-network-outline": "\U0000ECD7", "upload-off": "\U0000F0C5", "upload-off-outline": "\U0000F0C6", "upload-outline": "\U0000EE06", "usb": "\U0000E552", "usb-flash-drive": "\U0000F29D", "usb-flash-drive-outline": "\U0000F29E", "usb-port": "\U0000F1EF", "valve": "\U0000F065", "valve-closed": "\U0000F066", "valve-open": "\U0000F067", "van-passenger": "\U0000E7F9", "van-utility": "\U0000E7FA", "vanish": "\U0000E7FB", "vanity-light": "\U0000F1E0", "variable": "\U0000EAE6", "variable-box": "\U0000F110", "vector-arrange-above": "\U0000E553", "vector-arrange-below": "\U0000E554", "vector-bezier": "\U0000EAE7", "vector-circle": "\U0000E555", "vector-circle-variant": "\U0000E556", "vector-combine": "\U0000E557", "vector-curve": "\U0000E558", "vector-difference": "\U0000E559", "vector-difference-ab": "\U0000E55A", "vector-difference-ba": "\U0000E55B", "vector-ellipse": "\U0000E892", "vector-intersection": "\U0000E55C", "vector-line": "\U0000E55D", "vector-link": "\U0000EFE7", "vector-point": "\U0000E55E", "vector-polygon": "\U0000E55F", "vector-polyline": "\U0000E560", "vector-polyline-edit": "\U0000F224", "vector-polyline-minus": "\U0000F225", "vector-polyline-plus": "\U0000F226", "vector-polyline-remove": "\U0000F227", "vector-radius": "\U0000E749", "vector-rectangle": "\U0000E5C5", "vector-selection": "\U0000E561", "vector-square": "\U0000E000", "vector-triangle": "\U0000E562", "vector-union": "\U0000E563", "vhs": "\U0000EA1A", "vibrate": "\U0000E565", "vibrate-off": "\U0000ECD8", "video": "\U0000E566", "video-3d": "\U0000E7FC", "video-3d-off": "\U0000F3D8", "video-3d-variant": "\U0000EED0", "video-4k-box": "\U0000E83D", "video-account": "\U0000E918", "video-box": "\U0000E0FC", "video-box-off": "\U0000E0FD", "video-check": "\U0000F068", "video-check-outline": "\U0000F069", "video-image": "\U0000E919", "video-input-antenna": "\U0000E83E", "video-input-component": "\U0000E83F", "video-input-hdmi": "\U0000E840", "video-input-scart": "\U0000EF8B", "video-input-svideo": "\U0000E841", "video-minus": "\U0000E9B1", "video-minus-outline": "\U0000E2B9", "video-off": "\U0000E567", "video-off-outline": "\U0000EBDA", "video-outline": "\U0000EBDB", "video-plus": "\U0000E9B2", "video-plus-outline": "\U0000E1D2", "video-stabilization": "\U0000E91A", "video-switch": "\U0000E568", "video-switch-outline": "\U0000E78F", "video-vintage": "\U0000EA1B", "video-wireless": "\U0000EED1", "video-wireless-outline": "\U0000EED2", "view-agenda": "\U0000E569", "view-agenda-outline": "\U0000F1D7", "view-array": "\U0000E56A", "view-carousel": "\U0000E56B", "view-column": "\U0000E56C", "view-comfy": "\U0000EE69", "view-compact": "\U0000EE6A", "view-compact-outline": "\U0000EE6B", "view-dashboard": "\U0000E56D", "view-dashboard-outline": "\U0000EA1C", "view-dashboard-variant": "\U0000E842", "view-day": "\U0000E56E", "view-grid": "\U0000E56F", "view-grid-outline": "\U0000F1D8", "view-grid-plus": "\U0000EF8C", "view-grid-plus-outline": "\U0000F1D9", "view-headline": "\U0000E570", "view-list": "\U0000E571", "view-module": "\U0000E572", "view-parallel": "\U0000E727", "view-quilt": "\U0000E573", "view-sequential": "\U0000E728", "view-split-horizontal": "\U0000EBCA", "view-split-vertical": "\U0000EBCB", "view-stream": "\U0000E574", "view-week": "\U0000E575", "vimeo": "\U0000E576", "violin": "\U0000E60E", "virtual-reality": "\U0000E893", "virus": "\U0000F3B5", "virus-outline": "\U0000F3B6", "vk": "\U0000E578", "vlc": "\U0000E57B", "voice-off": "\U0000EED3", "voicemail": "\U0000E57C", "volleyball": "\U0000E9B3", "volume-high": "\U0000E57D", "volume-low": "\U0000E57E", "volume-medium": "\U0000E57F", "volume-minus": "\U0000E75D", "volume-mute": "\U0000E75E", "volume-off": "\U0000E580", "volume-plus": "\U0000E75C", "volume-source": "\U0000F11F", "volume-variant-off": "\U0000EE07", "volume-vibrate": "\U0000F120", "vote": "\U0000EA1E", "vote-outline": "\U0000EA1F", "vpn": "\U0000E581", "vuejs": "\U0000E843", "vuetify": "\U0000EE6C", "walk": "\U0000E582", "wall": "\U0000E7FD", "wall-sconce": "\U0000E91B", "wall-sconce-flat": "\U0000E91C", "wall-sconce-flat-variant": "\U0000E41B", "wall-sconce-round": "\U0000E747", "wall-sconce-round-variant": "\U0000E91D", "wallet": "\U0000E583", "wallet-giftcard": "\U0000E584", "wallet-membership": "\U0000E585", "wallet-outline": "\U0000EBDC", "wallet-plus": "\U0000EF8D", "wallet-plus-outline": "\U0000EF8E", "wallet-travel": "\U0000E586", "wallpaper": "\U0000EE08", "wan": "\U0000E587", "wardrobe": "\U0000EF8F", "wardrobe-outline": "\U0000EF90", "warehouse": "\U0000EF80", "washing-machine": "\U0000E729", "washing-machine-alert": "\U0000F1BB", "washing-machine-off": "\U0000F1BC", "watch": "\U0000E588", "watch-export": "\U0000E589", "watch-export-variant": "\U0000E894", "watch-import": "\U0000E58A", "watch-import-variant": "\U0000E895", "watch-variant": "\U0000E896", "watch-vibrate": "\U0000E6B0", "watch-vibrate-off": "\U0000ECD9", "water": "\U0000E58B", "water-boiler": "\U0000EF91", "water-boiler-alert": "\U0000F1B2", "water-boiler-off": "\U0000F1B3", "water-off": "\U0000E58C", "water-outline": "\U0000EE09", "water-percent": "\U0000E58D", "water-polo": "\U0000F29F", "water-pump": "\U0000E58E", "water-pump-off": "\U0000EF92", "water-well": "\U0000F06A", "water-well-outline": "\U0000F06B", "watermark": "\U0000E611", "wave": "\U0000EF2D", "waves": "\U0000E78C", "waze": "\U0000EBDD", "weather-cloudy": "\U0000E58F", "weather-cloudy-alert": "\U0000EF2E", "weather-cloudy-arrow-right": "\U0000EE6D", "weather-fog": "\U0000E590", "weather-hail": "\U0000E591", "weather-hazy": "\U0000EF2F", "weather-hurricane": "\U0000E897", "weather-lightning": "\U0000E592", "weather-lightning-rainy": "\U0000E67D", "weather-night": "\U0000E593", "weather-night-partly-cloudy": "\U0000EF30", "weather-partly-cloudy": "\U0000E594", "weather-partly-lightning": "\U0000EF31", "weather-partly-rainy": "\U0000EF32", "weather-partly-snowy": "\U0000EF33", "weather-partly-snowy-rainy": "\U0000EF34", "weather-pouring": "\U0000E595", "weather-rainy": "\U0000E596", "weather-snowy": "\U0000E597", "weather-snowy-heavy": "\U0000EF35", "weather-snowy-rainy": "\U0000E67E", "weather-sunny": "\U0000E598", "weather-sunny-alert": "\U0000EF36", "weather-sunset": "\U0000E599", "weather-sunset-down": "\U0000E59A", "weather-sunset-up": "\U0000E59B", "weather-tornado": "\U0000EF37", "weather-windy": "\U0000E59C", "weather-windy-variant": "\U0000E59D", "web": "\U0000E59E", "web-box": "\U0000EF93", "web-clock": "\U0000F249", "webcam": "\U0000E59F", "webhook": "\U0000E62E", "webpack": "\U0000E72A", "webrtc": "\U0000F247", "wechat": "\U0000E610", "weight": "\U0000E5A0", "weight-gram": "\U0000ED3E", "weight-kilogram": "\U0000E5A1", "weight-lifter": "\U0000F15C", "weight-pound": "\U0000E9B4", "whatsapp": "\U0000E5A2", "wheelchair-accessibility": "\U0000E5A3", "whistle": "\U0000E9B5", "whistle-outline": "\U0000F2BB", "white-balance-auto": "\U0000E5A4", "white-balance-incandescent": "\U0000E5A5", "white-balance-iridescent": "\U0000E5A6", "white-balance-sunny": "\U0000E5A7", "widgets": "\U0000E72B", "widgets-outline": "\U0000F354", "wifi": "\U0000E5A8", "wifi-off": "\U0000E5A9", "wifi-star": "\U0000EE0A", "wifi-strength-1": "\U0000E91E", "wifi-strength-1-alert": "\U0000E91F", "wifi-strength-1-lock": "\U0000E920", "wifi-strength-2": "\U0000E921", "wifi-strength-2-alert": "\U0000E922", "wifi-strength-2-lock": "\U0000E923", "wifi-strength-3": "\U0000E924", "wifi-strength-3-alert": "\U0000E925", "wifi-strength-3-lock": "\U0000E926", "wifi-strength-4": "\U0000E927", "wifi-strength-4-alert": "\U0000E928", "wifi-strength-4-lock": "\U0000E929", "wifi-strength-alert-outline": "\U0000E92A", "wifi-strength-lock-outline": "\U0000E92B", "wifi-strength-off": "\U0000E92C", "wifi-strength-off-outline": "\U0000E92D", "wifi-strength-outline": "\U0000E92E", "wikipedia": "\U0000E5AB", "wind-turbine": "\U0000EDA4", "window-close": "\U0000E5AC", "window-closed": "\U0000E5AD", "window-closed-variant": "\U0000F1DA", "window-maximize": "\U0000E5AE", "window-minimize": "\U0000E5AF", "window-open": "\U0000E5B0", "window-open-variant": "\U0000F1DB", "window-restore": "\U0000E5B1", "window-shutter": "\U0000F11B", "window-shutter-alert": "\U0000F11C", "window-shutter-open": "\U0000F11D", "wiper": "\U0000EAE8", "wiper-wash": "\U0000EDA5", "wordpress": "\U0000E5B3", "wrap": "\U0000E5B5", "wrap-disabled": "\U0000EBDE", "wrench": "\U0000E5B6", "wrench-outline": "\U0000EBDF", "xamarin": "\U0000E844", "xamarin-outline": "\U0000E845", "xing": "\U0000E5BD", "xml": "\U0000E5BF", "xmpp": "\U0000E7FE", "y-combinator": "\U0000E623", "yahoo": "\U0000EB4E", "yeast": "\U0000E5C0", "yin-yang": "\U0000E67F", "yoga": "\U0000F17B", "youtube": "\U0000E5C2", "youtube-gaming": "\U0000E847", "youtube-studio": "\U0000E846", "youtube-subscription": "\U0000ED3F", "youtube-tv": "\U0000E447", "z-wave": "\U0000EAE9", "zend": "\U0000EAEA", "zigbee": "\U0000ED40", "zip-box": "\U0000E5C3", "zip-box-outline": "\U0000EFF9", "zip-disk": "\U0000EA22", "zodiac-aquarius": "\U0000EA7C", "zodiac-aries": "\U0000EA7D", "zodiac-cancer": "\U0000EA7E", "zodiac-capricorn": "\U0000EA7F", "zodiac-gemini": "\U0000EA80", "zodiac-leo": "\U0000EA81", "zodiac-libra": "\U0000EA82", "zodiac-pisces": "\U0000EA83", "zodiac-sagittarius": "\U0000EA84", "zodiac-scorpio": "\U0000EA85", "zodiac-taurus": "\U0000EA86", "zodiac-virgo": "\U0000EA87" }
      unknown: "\U0000E2D5"
    pages:
      home: "home"
      weatherpages:
        - "weather01"
        - "weather02"
        - "weather03"
        - "weather04"
        - "weather05"
      climate: "climate"
      settings: "settings"
      boot: "boot"
      screensaver: "screensaver"
      light: "lightsettings"
      cover: "coversettings"
      buttonpages:
        - "buttonpage01"
        - "buttonpage02"
        - "buttonpage03"
        - "buttonpage04"
      notification: "notification"
      qrcode: "qrcode"
      entitypages:
        - "entitypage01"
        - "entitypage02"
        - "entitypage03"
        - "entitypage04"
    pics:
      hvac:
        button:
          blank: "79"
          'off': "80"
          'on': "81"
          unknown: "79"
      hardware:
        button:
          "off": "77"
          "on": "78"
      button:
        'off': "101"
        'on': "102"
      heating:
        button:
          "off": "82"
          "on": "83"
      weather:
        sunny: "{{ '2' if sun_is_up else '15'}}" #some weather providers returns 'sunny' for 'clear-night'
        cloudy: "3"
        rainy: "4"
        pouring: "5"
        snowy: "6"
        hail: "7"
        snowy_rainy: "7"
        fog: "8"
        windy: "9"
        windy_variant: "9"
        windy-variant: "9"
        lightning: "10"
        partlycloudy: "{{ '11' if sun_is_up else '12'}}"
        lightning_rainy: "{{ '13' if sun_is_up else '14'}}"
        execptional: "{{ '13' if sun_is_up else '14'}}"
        clear_night: "15"
        clear-night: "15"
        unknown: ''
        unavailable: ''

  ##### MUI Multilingual User Interface #####
  mui:
    BGR:
      weekdays:
        mon: –ü–æ–Ω–µ–¥–µ–ª–Ω–∏–∫
        tue: –í—Ç–æ—Ä–Ω–∏–∫
        wed: –°—Ä—è–¥–∞
        thu: –ß–µ—Ç–≤—ä—Ä—Ç—ä–∫
        fri: –ü–µ—Ç—ä–∫
        sat: –°—ä–±–æ—Ç–∞
        sun: –ù–µ–¥–µ–ª—è
      relative_day:
        today: –î–Ω–µ—Å
        tomorrow: –£—Ç—Ä–µ
        in_2_days: –°–ª–µ–¥ 2 –¥–Ω–∏
        in_3_days: –°–ª–µ–¥ 3 –¥–Ω–∏
        in_4_days: –°–ª–µ–¥ 4 –¥–Ω–∏
      climate:
        states:
          "on": –í–∫–ª—é—á–µ–Ω
          "off": –ò–∑–∫–ª—é—á–µ–Ω
        heat: –û—Ç–æ–ø–ª–µ–Ω–∏–µ
      please_confirm: –ú–æ–ª—è, –ø–æ—Ç–≤—ä—Ä–¥–µ—Ç–µ
      unavailable: –ù–µ–¥–æ—Å—Ç—ä–ø–µ–Ω
      no_name: –ù—è–º–∞ –∏–º–µ
    CZE:
      weekdays:
        mon: Pondƒõl√≠
        tue: √öter√Ω
        wed: St≈ôeda
        thu: ƒåtvrtek
        fri: P√°tek
        sat: Sobota
        sun: Nedƒõle
      relative_day:
        today: Dnes
        tomorrow: Z√≠tra
        in_2_days: za 2 dny
        in_3_days: za 3 dny
        in_4_days: za 4 dny
      climate:
        states:
          "on": zapnuto
          "off": vypnuto
        heat: topen√≠
      please_confirm: Potvrƒète pros√≠m
      unavailable: Unavailable
      no_name: No name
    DEU:
      weekdays:
        mon: Montag
        tue: Dienstag
        wed: Mittwoch
        thu: Donnerstag
        fri: Freitag
        sat: Samstag
        sun: Sonntag
      relative_day:
        today: Heute
        tomorrow: Morgen
        in_2_days: in 2 Tagen
        in_3_days: in 3 Tagen
        in_4_days: in 4 Tagen
      climate:
        states:
          "on": ein
          "off": aus
        heat: heizen
      please_confirm: Bitte best√§tigen
      unavailable: Unavailable
      no_name: No name
    DNK:
      weekdays:
        mon: Mandag
        tue: Tirsdag
        wed: Onsdag
        thu: Torsdag
        fri: Fredag
        sat: L√∏rdag
        sun: S√∏ndag
      relative_day:
        today: I dag
        tomorrow: I morgen
        in_2_days: om 2 dage
        in_3_days: om 3 dage
        in_4_days: om 4 dage
      climate:
        states:
          "on": p√•
          "off": off
        heat: varme
      please_confirm: Bekr√¶ft venligst
      unavailable: Unavailable
      no_name: No name
    ENG:
      weekdays:
        mon: Monday
        tue: Tuesday
        wed: Wednesday
        thu: Thursday
        fri: Friday
        sat: Saturday
        sun: Sunday
      relative_day:
        today: Today
        tomorrow: Tomorrow
        in_2_days: In 2 days
        in_3_days: In 3 days
        in_4_days: In 4 days
      climate:
        states:
          "on": on
          "off": off
        heat: heat
      please_confirm: Please confirm
      unavailable: Unavailable
      no_name: No name
    ESP:
      weekdays:
        mon: Lunes
        tue: Martes
        wed: Mi√©rcoles
        thu: Jueves
        fri: Viernes
        sat: S√°bado
        sun: Domingo
      relative_day:
        today: Hoy
        tomorrow: Ma√±ana
        in_2_days: En 2 d√≠as
        in_3_days: En 3 d√≠as
        in_4_days: En 4 d√≠as
      climate:
        states:
          "on": Encendido
          "off": Apagado
        heat: calor
      please_confirm: Por favor, confirme
      unavailable: No disponible
      no_name: Sin nombre
    EST:
      weekdays:
        mon: Esmasp√§ev
        tue: Teisip√§ev
        wed: Kolmap√§ev
        thu: Neljap√§ev
        fri: Reede
        sat: Laup√§ev
        sun: P√ºhap√§ev
      relative_day:
        today: T√§na
        tomorrow: Homme
        in_2_days: 2 p√§eva p√§rast
        in_3_days: 3 p√§eva p√§rast
        in_4_days: 4 p√§eva p√§rast
      climate:
        states:
          "on": aadressil
          "off": v√§lja
        heat: soojus
      please_confirm: Palun kinnitage
      unavailable: Unavailable
      no_name: No name
    FIN:
      weekdays:
        mon: Maanantai
        tue: Tiistai
        wed: Keskiviikko
        thu: Torstai
        fri: Perjantai
        sat: Lauantai
        sun: Sunnuntai
      relative_day:
        today: T√§n√§√§n
        tomorrow: Huomenna
        in_2_days: 2 p√§iv√§n p√§√§st√§
        in_3_days: 3 p√§iv√§n p√§√§st√§
        in_4_days: 4 p√§iv√§n p√§√§st√§
      climate:
        states:
          "on": osoitteessa
          "off": off
        heat: l√§mp√∂
      please_confirm: Vahvistakaa
      unavailable: Unavailable
      no_name: No name
    FRA:
      weekdays:
        mon: Lundi
        tue: Mardi
        wed: Mercredi
        thu: Jeudi
        fri: Vendredi
        sat: Samedi
        sun: Dimanche
      relative_day:
        today: Aujourd hui
        tomorrow: Demain
        in_2_days: Dans 2 jours
        in_3_days: Dans 3 jours
        in_4_days: Dans 4 jours
      climate:
        states:
          "on": on
          "off": off
        heat: Chaleur
      please_confirm: Veuillez confirmer
      unavailable: Unavailable
      no_name: No name
    GRC:
      weekdays:
        mon: ŒîŒµœÖœÑŒ≠œÅŒ±
        tue: Œ§œÅŒØœÑŒ∑
        wed: Œ§ŒµœÑŒ¨œÅœÑŒ∑
        thu: Œ†Œ≠ŒºœÄœÑŒ∑
        fri: Œ†Œ±œÅŒ±œÉŒ∫ŒµœÖŒÆ
        sat: Œ£Œ¨Œ≤Œ≤Œ±œÑŒø
        sun: ŒöœÖœÅŒπŒ±Œ∫ŒÆ
      relative_day:
        today: Œ£ŒÆŒºŒµœÅŒ±
        tomorrow: ŒëœçœÅŒπŒø
        in_2_days: œÉŒµ 2 Œ∑ŒºŒ≠œÅŒµœÇ
        in_3_days: œÉŒµ 3 Œ∑ŒºŒ≠œÅŒµœÇ
        in_4_days: œÉŒµ 4 Œ∑ŒºŒ≠œÅŒµœÇ
      climate:
        states:
          "on": ŒïŒΩŒµœÅŒ≥œå
          "off": ŒëŒΩŒµŒΩŒµœÅŒ≥œå
        heat: ŒòŒ≠œÅŒºŒ±ŒΩœÉŒ∑
      please_confirm: Œ†Œ±œÅŒ±Œ∫Œ±Œªœé ŒµœÄŒπŒ≤ŒµŒ≤Œ±ŒπœéœÉœÑŒµ
      unavailable: Unavailable
      no_name: No name
    HEB:
      weekdays:
        mon: ◊ô◊†◊©
        tue: ◊ô◊©◊ô◊ú◊©
        wed: ◊ô◊¢◊ô◊ë◊®
        thu: ◊ô◊©◊ô◊û◊ó
        fri: ◊ô◊©◊ô◊©
        sat: ◊™◊ë◊©
        sun: ◊ü◊ï◊©◊ê◊®
      relative_day:
        today: ◊ù◊ï◊ô◊î
        tomorrow: ◊®◊ó◊û
        in_2_days: ◊ù◊ô◊ô◊û◊ï◊ô ◊ì◊ï◊¢
        in_3_days: ◊ù◊ô◊û◊ô 3 ◊ì◊ï◊¢
        in_4_days: ◊ù◊ô◊û◊ô 4 ◊ì◊ï◊¢
      climate:
        states:
          "on": ◊ß◊ï◊ú◊ì
          "off": ◊ô◊ï◊ë◊õ
        heat: ◊ù◊ï◊ó
      please_confirm: ◊®◊©◊ê ◊î◊©◊ß◊ë◊ë
      unavailable: Unavailable
      no_name: No name
    HRV:
      weekdays:
        mon: Ponedjeljak
        tue: Utorak
        wed: Srijeda
        thu: ƒåetvrtak
        fri: Petak
        sat: Subota
        sun: Nedjelja
      relative_day:
        today: Danas
        tomorrow: Sutra
        in_2_days: Za 2 dana
        in_3_days: Za 3 dana
        in_4_days: Za 4 dana
      climate:
        states:
          "on": Ukljuƒçeno
          "off": Iskljuƒçeno
        heat: Toplina
      please_confirm: Molim potvrdite
      unavailable: Nedostupno
      no_name: Bez imena
    HUN:
      weekdays:
        mon: H√©tf≈ë
        tue: Kedd
        wed: Szerda
        thu: Cs√ºt√∂rt√∂k
        fri: P√©ntek
        sat: Szombat
        sun: Vas√°rnap
      relative_day:
        today: Ma
        tomorrow: Holnap
        in_2_days: 2 nap m√∫lva
        in_3_days: 3 nap m√∫lva
        in_4_days: 4 nap m√∫lva
      climate:
        states:
          "on": a oldalon
          "off": off
        heat: h≈ë
      please_confirm: K√©rj√ºk, er≈ës√≠tse meg
      unavailable: Unavailable
      no_name: No name
    IDN:
      weekdays:
        mon: Senin
        tue: Selasa
        wed: Rabu
        thu: Kamis
        fri: Jumat
        sat: Sabtu
        sun: Minggu
      relative_day:
        today: Hari ini
        tomorrow: Besok
        in_2_days: dalam 2 Hari
        in_3_days: dalam 3 Hari
        in_4_days: dalam 4 Hari
      climate:
        states:
          "on": on
          "off": off
        heat: panas
      please_confirm: Mohon konfirmasi
      unavailable: Unavailable
      no_name: No name
    ITA:
      weekdays:
        mon: Luned√¨
        tue: Marted√¨
        wed: Mercoled√¨
        thu: Gioved√¨
        fri: Venerd√¨
        sat: Sabato
        sun: Domenica
      relative_day:
        today: Oggi
        tomorrow: Domani
        in_2_days: in 2 giorni
        in_3_days: in 3 giorni
        in_4_days: in 4 giorni
      climate:
        states:
          "on": on
          "off": off
        heat: caldo
      please_confirm: Confermare
      unavailable: Unavailable
      no_name: No name
    LTU:
      weekdays:
        mon: Pirmadienis
        tue: Antradienis
        wed: Treƒçiadienis
        thu: Ketvirtadienis
        fri: Penktadienis
        sat: ≈†e≈°tadienis
        sun: Sekmadienis
      relative_day:
        today: ≈†iandien
        tomorrow: Rytoj
        in_2_days: per 2 dienas
        in_3_days: per 3 dienas
        in_4_days: per 4 dienas
      climate:
        states:
          "on": svetainƒóje
          "off": i≈°jungta
        heat: ≈°iluma
      please_confirm: Pra≈°ome patvirtinti
      unavailable: Unavailable
      no_name: No name
    LVA:
      weekdays:
        mon: Pirmdiena
        tue: Otrdiena
        wed: Tre≈°diena
        thu: Ceturtdiena
        fri: Piektdiena
        sat: Sestdiena
        sun: Svƒìtdiena
      relative_day:
        today: ≈†odien
        tomorrow: Rƒ´t
        in_2_days: pƒìc 2 dienƒÅm
        in_3_days: pƒìc 3 dienƒÅm
        in_4_days: pƒìc 4 dienƒÅm
      climate:
        states:
          "on": vietnƒì
          "off": izslƒìgts
        heat: siltums
      please_confirm: L≈´dzu, apstipriniet
      unavailable: Unavailable
      no_name: No name
    NLD:
      weekdays:
        mon: Maandag
        tue: Dinsdag
        wed: Woensdag
        thu: Donderdag
        fri: Vrijdag
        sat: Zaterdag
        sun: Zondag
      relative_day:
        today: Vandaag
        tomorrow: Morgen
        in_2_days: in 2 dagen
        in_3_days: in 3 dagen
        in_4_days: in 4 dagen
      climate:
        states:
          "on": aan
          "off": uit
        heat: verwarm
      please_confirm: Bevestig alstublieft
      unavailable: Unavailable
      no_name: No name
    NOR:
      weekdays:
        mon: Mandag
        tue: Tirsdag
        wed: Onsdag
        thu: Torsdag
        fri: Fredag
        sat: L√∏rdag
        sun: S√∏ndag
      relative_day:
        today: I dag
        tomorrow: I morgen
        in_2_days: om 2 dager
        in_3_days: om 3 dager
        in_4_days: om 4 dager
      climate:
        states:
          "on": p√•
          "off": av
        heat: varme
      please_confirm: Vennligst bekreft
      unavailable: Unavailable
      no_name: No name
    POL:
      weekdays:
        mon: Poniedzia≈Çek
        tue: Wtorek
        wed: ≈öroda
        thu: Czwartek
        fri: PiƒÖtek
        sat: Sobota
        sun: Niedziela
      relative_day:
        today: Dzisiaj
        tomorrow: Jutro
        in_2_days: za 2 dni
        in_3_days: za 3 dni
        in_4_days: za 4 dni
      climate:
        states:
          "on": na
          "off": off
        heat: ciep≈Ço
      please_confirm: Proszƒô o potwierdzenie
      unavailable: Unavailable
      no_name: No name
    PRT:
      weekdays:
        mon: Segunda-feira
        tue: Ter√ßa-feira
        wed: Quarta-feira
        thu: Quinta-feira
        fri: Sexta-feira
        sat: S√°bado
        sun: Domingo
      relative_day:
        today: Hoje
        tomorrow: Amanh√£
        in_2_days: Em 2 dias
        in_3_days: Em 3 dias
        in_4_days: Em 4 dias
      climate:
        states:
          "on": Ligado
          "off": Desligado
        heat: Aquecimento
      please_confirm: Confirme, por favor
      unavailable: Indispon√≠vel
      no_name: Sem nome
    ROU:
      weekdays:
        mon: Luni
        tue: Mar»õi
        wed: Miercuri
        thu: Joi
        fri: Vineri
        sat: S√¢mbƒÉtƒÉ
        sun: DuminicƒÉ
      relative_day:
        today: AstƒÉzi
        tomorrow: M√¢ine
        in_2_days: √Æn 2 zile
        in_3_days: √Æn 3 zile
        in_4_days: √Æn 4 zile
      climate:
        states:
          "on": pe
          "off": off
        heat: cƒÉldurƒÉ
      please_confirm: VƒÉ rugƒÉm sƒÉ confirma»õi
      unavailable: Unavailable
      no_name: No name
    RUS:
      weekdays:
        mon: –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
        tue: –í—Ç–æ—Ä–Ω–∏–∫
        wed: –°—Ä–µ–¥–∞
        thu: –ß–µ—Ç–≤–µ—Ä–≥
        fri: –ü—è—Ç–Ω–∏—Ü–∞
        sat: –°—É–±–±–æ—Ç–∞
        sun: –í–æ—Å–∫—Ä–µ—Å–µ–Ω–∏–µ
      relative_day:
        today: –°–µ–≥–æ–¥–Ω—è
        tomorrow: –ó–∞–≤—Ç—Ä–∞
        in_2_days: –Ω–∞ 2 –¥–Ω—è
        in_3_days: –Ω–∞ 3 –¥–Ω—è
        in_4_days: –Ω–∞ 4 –¥–Ω—è
      climate:
        states:
          "on": –≤–∫–ª—é—á–µ–Ω–æ
          "off": –≤—ã–∫–ª—é—á–µ–Ω–æ
        heat: –Ω–∞–≥—Ä–µ–≤
      please_confirm: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ
      unavailable: Unavailable
      no_name: No name
    SVK:
      weekdays:
        mon: Pondelok
        tue: Utorok
        wed: Streda
        thu: ≈†tvrtok
        fri: Piatok
        sat: Sobota
        sun: Nedeƒæa
      relative_day:
        today: Dnes
        tomorrow: Zajtra
        in_2_days: o 2 dni
        in_3_days: o 3 dni
        in_4_days: o 4 dni
      climate:
        states:
          "on": zapnut√©
          "off": vypnut√©
        heat: k√∫renie
      please_confirm: Potvrƒète, pros√≠m
      unavailable: Unavailable
      no_name: No name
    SVN:
      weekdays:
        mon: Ponedeljek
        tue: Torek
        wed: Sreda
        thu: ƒåetrtek
        fri: Petek
        sat: Sobota
        sun: Nedelja
      relative_day:
        today: Danes
        tomorrow: Jutri
        in_2_days: v 2 dneh
        in_3_days: v 3 dneh
        in_4_days: v 4 dneh
      climate:
        states:
          "on": na
          "off": izklop
        heat: toplota
      please_confirm: Prosimo, potrdite
      unavailable: Unavailable
      no_name: No name
    SWE:
      weekdays:
        mon: M√•ndag
        tue: Tisdag
        wed: Onsdag
        thu: Torsdag
        fri: Fredag
        sat: L√∂rdag
        sun: S√∂ndag
      relative_day:
        today: Idag
        tomorrow: Imorgon
        in_2_days: om 2 dagar
        in_3_days: om 3 dagar
        in_4_days: om 4 dagar
      climate:
        states:
          "on": p√•
          "off": av
        heat: v√§rme
      please_confirm: V√§nligen bekr√§fta
      unavailable: Unavailable
      no_name: No name
    TUR:
      weekdays:
        mon: Pazartesi
        tue: Salƒ±
        wed: √áar≈üamba
        thu: Per≈üembe
        fri: Cuma
        sat: Cumartesi
        sun: Pazar
      relative_day:
        today: Bug√ºn
        tomorrow: Yarƒ±n
        in_2_days: 2 G√ºn ƒ∞√ßinde
        in_3_days: 3 G√ºn ƒ∞√ßinde
        in_4_days: 4 G√ºn ƒ∞√ßinde
      climate:
        states:
          "on": √ºzerinde
          "off": kapalƒ±
        heat: ƒ±sƒ±
      please_confirm: L√ºtfen onaylayƒ±n
      unavailable: Unavailable
      no_name: No name
    UKR:
      weekdays:
        mon: –ü–æ–Ω–µ–¥—ñ–ª–æ–∫
        tue: –í—ñ–≤—Ç–æ—Ä–æ–∫
        wed: —Å–µ—Ä–µ–¥–∞
        thu: —á–µ—Ç–≤–µ—Ä
        fri: –ø —è—Ç–Ω–∏—Ü—è
        sat: –°—É–±–æ—Ç–∞
        sun: –ù–µ–¥—ñ–ª—è
      relative_day:
        today: –°—å–æ–≥–æ–¥–Ω—ñ
        tomorrow: –ó–∞–≤—Ç—Ä–∞
        in_2_days: —á–µ—Ä–µ–∑ 2 –¥–Ω—ñ
        in_3_days: —á–µ—Ä–µ–∑ 3 –¥–Ω—ñ
        in_4_days: —á–µ—Ä–µ–∑ 2 –¥–Ω—ñ
      climate:
        states:
          "on": —É–≤—ñ–º–∫
          "off": –≤–∏–º–∫
        heat: –Ω–∞–≥—Ä—ñ–≤
      please_confirm: –ë—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å
      unavailable: Unavailable
      no_name: No name

  ##### WEATHER ####
  weather_entity_tmp: !input "weather_entity" # used only during the creation of weather in variables
  weather_entity: >
    {% if weather_entity_tmp is string and weather_entity_tmp | length > 0 %} {{ weather_entity_tmp }}
    {% elif states.weather | list | count > 0 %} {{ states.weather | map(attribute='entity_id') | list | first }}
    {% endif %}
  temperature_units: '¬∞'

  ##### Home page #####
  page_home:
    buttons: ### Feature Buttons ###
      - icon: ''    # NOT IN USE
        color_rgb:
          'on': ''  # NOT IN USE
          'off': '' # NOT IN USE
      - icon: ''    # NOT IN USE
        color_rgb:
          'on': ''  # NOT IN USE
          'off': '' # NOT IN USE
      - icon: ''    # NOT IN USE
        color_rgb:
          'on': ''  # NOT IN USE
          'off': '' # NOT IN USE
      - icon: !input "home_button04_icon" #E1ED
        color_rgb:
          'on': !input "home_button04_icon_color01"
          'off': !input "home_button04_icon_color02"
      - icon: !input "home_button05_icon" #E432
        color_rgb:
          'on': !input "home_button05_icon_color"
          'off': '' # NOT IN USE
      - icon: !input "home_button06_icon"  #EDCF
        color_rgb:
          'on': !input "home_button06_icon_color"
          'off': '' # NOT IN USE
      - icon: ''    # NOT IN USE
        color_rgb:
          'on': ''  # NOT IN USE
          'off': '' # NOT IN USE
    general:
      outdoor_temp:
        label:
          color_rgb: !input "home_outdoor_temp_label_color"
      indoor_temp:
        icon:
          icon: !input "home_indoor_temp_icon" #E50E
          color_rgb: !input "home_indoor_temp_icon_color"
        label:
          color_rgb: !input "home_indoor_temp_label_color"
      time:
        label:
          color_rgb: !input "time_label_color"
      date:
        label:
          color_rgb: !input "date_label_color"
    hardware:
      buttons: #### HARDWARE BUTTONS #####
        left:
          entity: !input "left_button_entity"
          name: !input "left_button_name"
          color_rgb: !input "left_button_color"
          hold_select: !input "left_button_hold_select"
          #custom_action: !input "left_button_hold_custom_action"
        right:
          entity: !input "right_button_entity"
          name: !input "right_button_name"
          color_rgb: !input "right_button_color"
          hold_select: !input "right_button_hold_select"
          #custom_action: !input "right_button_hold_custom_action"
  qrcode_enabled: !input "qrcode_enabled"

  ###### SYNC SETTINGS #####
  #delay_boot: !input "delay"              # NOT IN USE
  delay_value: !input "delay"
  #delay_jump_page: !input "delay"         # NOT IN USE
  #sync_slider_ha: !input "sync_slider_ha" # NOT IN USE
  #sync_value_ha: !input "sync_value_ha"   # NOT IN USE
  climate_optimistic: !input "climate_optimistic"

  ##### GENERAL ENTITYS #####
  hotwatertemp: !input "hotwatertemp"
  outdoortemp: !input "outdoortemp"
  indoortemp: !input "indoortemp"
  climate: !input "climate"
  relay_1_local_fallback: !input "relay_1_local_fallback"
  relay_2_local_fallback: !input "relay_2_local_fallback"

  ##### ENTITIES #####
  entitypages_enabled: !input "entitypages_enabled"

#############################################################
##### CLOSE - Variables #####
#############################################################


#############################################################
##### START - Trigger #####
#############################################################

trigger:

 ##### Trigger - General #################################################################################################################

  ##### settings_entity - Trigger "settings_entity" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: "{{ settings_entity }}"
    id: settings_entity

  ##### Reboot - Trigger "nspanel_boot_init" #####
  - platform: template
    value_template: "{{ is_state(nextion_inited, 'on') | default(false) if nextion_inited is string else false }}"
    for:
      seconds: 1
    id: nspanel_boot_init

  ##### NSPanel event changed #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: "{{ nspanelevent }}"
    id: nspanelevent_changed

  ##### Automation reload
  - platform: event
    event_type: automation_reloaded
    id: automation_reloaded

  ##### Trigger - Button State change #################################################################################################################

  ##### Button01 Sync - Trigger "current_state_entity01" #####
  - platform: state
    entity_id: !input "entity01"
    id: current_state_entity01

  ##### Button02 Sync - Trigger "current_state_entity02" #####
  - platform: state
    entity_id: !input "entity02"
    id: current_state_entity02

  ##### Button03 Sync - Trigger "current_state_entity03" #####
  - platform: state
    entity_id: !input "entity03"
    id: current_state_entity03

  ##### Button04 Sync - Trigger "current_state_entity04" #####
  - platform: state
    entity_id: !input "entity04"
    id: current_state_entity04

  ##### Button05 Sync - Trigger "current_state_entity05" #####
  - platform: state
    entity_id: !input "entity05"
    id: current_state_entity05

  ##### Button06 Sync - Trigger "current_state_entity06" #####
  - platform: state
    entity_id: !input "entity06"
    id: current_state_entity06

  ##### Button07 Sync - Trigger "current_state_entity07" #####
  - platform: state
    entity_id: !input "entity07"
    id: current_state_entity07

  ##### Button08 Sync - Trigger "current_state_entity08" #####
  - platform: state
    entity_id: !input "entity08"
    id: current_state_entity08

  ##### Button09 Sync - Trigger "current_state_entity09" #####
  - platform: state
    entity_id: !input "entity09"
    id: current_state_entity09

  ##### Button10 Sync - Trigger "current_state_entity10" #####
  - platform: state
    entity_id: !input "entity10"
    id: current_state_entity10

  ##### Button11 Sync - Trigger "current_state_entity11" #####
  - platform: state
    entity_id: !input "entity11"
    id: current_state_entity11

  ##### Button12 Sync - Trigger "current_state_entity12" #####
  - platform: state
    entity_id: !input "entity12"
    id: current_state_entity12

  ##### Button13 Sync - Trigger "current_state_entity13" #####
  - platform: state
    entity_id: !input "entity13"
    id: current_state_entity13

  ##### Button14 Sync - Trigger "current_state_entity14" #####
  - platform: state
    entity_id: !input "entity14"
    id: current_state_entity14

  ##### Button15 Sync - Trigger "current_state_entity15" #####
  - platform: state
    entity_id: !input "entity15"
    id: current_state_entity15

  ##### Button16 Sync - Trigger "current_state_entity16" #####
  - platform: state
    entity_id: !input "entity16"
    id: current_state_entity16

  ##### Button17 Sync - Trigger "current_state_entity17" #####
  - platform: state
    entity_id: !input "entity17"
    id: current_state_entity17

  ##### Button18 Sync - Trigger "current_state_entity18" #####
  - platform: state
    entity_id: !input "entity18"
    id: current_state_entity18

  ##### Button19 Sync - Trigger "current_state_entity19" #####
  - platform: state
    entity_id: !input "entity19"
    id: current_state_entity19

  ##### Button20 Sync - Trigger "current_state_entity20" #####
  - platform: state
    entity_id: !input "entity20"
    id: current_state_entity20

  ##### Button21 Sync - Trigger "current_state_entity21" #####
  - platform: state
    entity_id: !input "entity21"
    id: current_state_entity21

  ##### Button22 Sync - Trigger "current_state_entity22" #####
  - platform: state
    entity_id: !input "entity22"
    id: current_state_entity22

  ##### Button23 Sync - Trigger "current_state_entity23" #####
  - platform: state
    entity_id: !input "entity23"
    id: current_state_entity23

  ##### Button24 Sync - Trigger "current_state_entity24" #####
  - platform: state
    entity_id: !input "entity24"
    id: current_state_entity24

  ##### Button25 Sync - Trigger "current_state_entity25" #####
  - platform: state
    entity_id: !input "entity25"
    id: current_state_entity25

  ##### Button26 Sync - Trigger "current_state_entity26" #####
  - platform: state
    entity_id: !input "entity26"
    id: current_state_entity26

  ##### Button27 Sync - Trigger "current_state_entity27" #####
  - platform: state
    entity_id: !input "entity27"
    id: current_state_entity27

  ##### Button28 Sync - Trigger "current_state_entity28" #####
  - platform: state
    entity_id: !input "entity28"
    id: current_state_entity28

  ##### Button29 Sync - Trigger "current_state_entity29" #####
  - platform: state
    entity_id: !input "entity29"
    id: current_state_entity29

  ##### Button30 Sync - Trigger "current_state_entity30" #####
  - platform: state
    entity_id: !input "entity30"
    id: current_state_entity30

  ##### Button31 Sync - Trigger "current_state_entity31" #####
  - platform: state
    entity_id: !input "entity31"
    id: current_state_entity31

  ##### Button32 Sync - Trigger "current_state_entity32" #####
  - platform: state
    entity_id: !input "entity32"
    id: current_state_entity32

  ##### Page Button - Trigger "long_press" - Button LONG Press for jump to Lightsetting or Coversetting Page #####
  - platform: template
    value_template: "{{ 'buttonpage' in states(nspanelevent) and 'press' in states(nspanelevent) }}"  ## ATTENTION! THIS NEEDS IMPROVEMENT
    for:
      seconds: 1
    id: long_press

  ##### HOME Value 01 - Trigger "home_value01_state" #####
  - platform: state
    entity_id: !input "home_value01"
    not_to:
      - unknown
      - unavailable
    id: home_value01_state

  ##### HOME Value 02 - Trigger "home_value02_state" #####
  - platform: state
    entity_id: !input "home_value02"
    not_to:
      - unknown
      - unavailable
    id: home_value02_state

  ##### HOME Value 03 - Trigger "home_value03_state" #####
  - platform: state
    entity_id: !input "home_value03"
    not_to:
      - unknown
      - unavailable
    id: home_value03_state

  ##### Relay01 - Trigger "relay01_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: "{{ relay01_entity }}"
    id: relay01_state

  ##### Relay02 - Trigger "relay02_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: "{{ relay02_entity }}"
    id: relay02_state

  ##### Climate - Trigger "climate_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "climate"
    id: climate_state

  ##### Chip 01 - Trigger "chip01_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "chip01"
    id: chip01_state

  ##### Chip 02 - Trigger "chip02_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "chip02"
    id: chip02_state

  ##### Chip 03 - Trigger "chip03_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "chip03"
    id: chip03_state

  ##### Chip 04 - Trigger "chip04_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "chip04"
    id: chip04_state

  ##### Chip 05 - Trigger "chip05_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "chip05"
    id: chip05_state

  ##### Chip 06 - Trigger "chip06_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "chip06"
    id: chip06_state

  ##### Chip 07 - Trigger "chip07_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "chip07"
    id: chip07_state

  ##### Notification Text - Trigger "notification_text_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: "{{ notification_text }}"
    id: notification_text_state

  ##### Notification Text - Trigger "notification_text_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: "{{ notification_unread }}"
    id: notification_unread_state

  ##### Left Button - Trigger "left_button_press" #####
  - platform: template
    value_template: "{{ is_state(left_button, 'on') | default(false) if left_button is string else false }}"
    id: left_button_press

  ##### Right Button - Trigger "right_button_press" #####
  - platform: template
    value_template: "{{ is_state(right_button, 'on') | default(false) if right_button is string else false }}"
    id: right_button_press

  ##### Left Button - State "left_button_state" #####
  - platform: state
    entity_id: !input "left_button_entity"
    to:
      - 'on'
      - 'off'
    id: left_button_state

  ##### Right Button - State "right_button_state" #####
  - platform: state
    entity_id: !input "right_button_entity"
    to:
      - 'on'
      - 'off'
    id: right_button_state

  ##### Time - Trigger "time_state" #####
  - platform: time_pattern
    seconds: 0
    id: time_state

  ##### Outdoor Temp - Trigger "outdoortemp_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "outdoortemp"
    id: outdoortemp_state

  ##### indoor Temp Sensor - Trigger "indoortemp_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "indoortemp"
    id: indoortemp_state

  ##### NSPAnel Temp Sensor - Trigger "nspaneltemp_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: "{{ nspaneltemp }}"
    id: nspaneltemp_state

  #### Weather state changed #######
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "weather_entity"
    id: weather_state_change

  ##### Hot Water Charge - Trigger "hotwatercharge_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "hotwatercharge"
    id: hotwatercharge_state

  ##### Hot Water - Trigger "hotwatertemp_state" #####
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input "hotwatertemp"
    id: hotwatertemp_state

  ##### TFT Upload - Trigger "tft_upload" #####
  - platform: event
    event_type: folder_watcher
    event_data:
      event_type: modified
      path: !input "tft_path"
    id: tft_upload

#############################################################
##### CLOSE - Trigger #####
#############################################################

condition: "{{ is_state(nextion_inited, 'on') | default(false) if nextion_inited is string else false }}"

#############################################################
##### START - Action #####
#############################################################
action:
  # main - alias: "choose alias (name)"
  - alias: Main choices
    choose:
      ##### JUMP TO - settings page lightsettings /coversettings / climate (SETTINGS ENTITY CHANGED) #####
      - alias: "Jump to light/cover/climate settings page"
        conditions:
          - condition: trigger
            id: settings_entity
          - "{{ trigger.event.data.new_state.state not in ['unavailable', 'unknown', None] }}"
        sequence:
          - &variables-settings_entity
            variables:
              settings_entity_state: "{{ states(settings_entity) if settings_entity is string else 'unknown' }}"
              settings_entity_dict: '{{ settings_entity_state if settings_entity_state is mapping else { "page": "home", "entity": "unknown" } }}'
              settings_entity_domain: "{{ settings_entity_dict.entity.split('.')[0] if settings_entity_dict.entity is defined and settings_entity_dict.entity is string and settings_entity_dict.entity.split('.') | count > 0 else 'unknown' }}"
          - if: "{{ settings_entity_domain in ['light', 'cover', 'climate'] }}"
            then:
              - service: "{{ nextion.commands.printf }}"
                data:
                  cmd: "page {{ nextion.pages[settings_entity_domain] }}"
                continue_on_error: true

      ##### BOOT NSPANEL - boot init #####
      - alias: Boot init
        conditions:
          - condition: trigger
            id: nspanel_boot_init
          - "{{ nspanel_event.page != nextion.pages.home or (is_state(settings_entity, ['unavailable', 'unknown', None]) | default(False) if settings_entity is string else False) }}"
        sequence:
          ##### NSPanel boot init only #####
          - delay:
              milliseconds: 100
          - service: "{{ nextion.commands.text_printf }}"
            data:
              component: boot.bluep_version
              message: "{{ blueprint_version }}"
            continue_on_error: true

          ###### Set local fallback ######
          - service: "switch.turn_{{ 'on' if relay_1_local_fallback else 'off' }}"
            data:
              entity_id: 'switch.{{ nspanel_name }}_relay_1_local_fallback'
            continue_on_error: true
          - service: "switch.turn_{{ 'on' if relay_2_local_fallback else 'off' }}"
            data:
              entity_id: 'switch.{{ nspanel_name }}_relay_2_local_fallback'
            continue_on_error: true

          ##### clear notification icon #####
          - service: "{{ nextion.commands.notification_clear }}"
            data: {}
            continue_on_error: true

          ###### NSPanel beep ######
          - delay:
              milliseconds: 2000
          - if: "{{ is_state(notification_sound, 'on') }}"
            then:
              - service: "{{ nextion.commands.play_rtttl }}"
                data:
                  song_str: "two short:d=4,o=5,b=100:16e6,16e6"
                continue_on_error: true

          ##### NSPanel boot init finished and jump to Home Page#####
          - &delay-default
            delay:
              milliseconds: "{{ delay_value }}"
          - service: "{{ nextion.commands.printf }}"
            data:
              cmd: page home
            continue_on_error: true

      ##### NSPanel event #####
      - alias: NSPanel Event
        conditions:
          - condition: trigger
            id: nspanelevent_changed
        sequence:
          - alias: NSPanel Event component changed
            choose:
              - alias: Page changed
                conditions: '{{ nspanel_event.component == "currentpage" }}'
                sequence:
                  - alias: old state
                    variables:
                      old_state: "{{ trigger.event.data.old_state.state }}"
                  ##### climate-page left - apply climate temperature if climate_optimistic ##### ## TODO - remove from here
                  - if: "{{ old_state.page == nextion.pages.climate and climate_optimistic }}"
                    then:
                      - variables:
                          display_target_temperature_state: "{{ states(display_target_temperature) | default('unavailable') if display_target_temperature is string else 'unavailable' }}"
                      - if: "{{ is_number(display_target_temperature_state) }}"
                        then:
                          - *variables-settings_entity
                          - if: "{{ settings_entity_domain == 'climate' }}"
                            then:
                              - service: climate.set_temperature
                                data:
                                  entity_id: "{{ settings_entity_dict.entity }}"
                                  temperature: "{{ display_target_temperature_state }}"
                                continue_on_error: true
                  - choose:
                      ## PAGE HOME ##
                      - alias: Home page
                        conditions: "{{ nspanel_event.page == nextion.pages.home }}"
                        sequence: &refresh_page_home
                          - service: "{{ nextion.commands.set_settings_entity }}"
                            data:
                              entity: "{{ nspanel_event }}"
                            continue_on_error: true
                          ##### NSPanel Date #####
                          ### DATE Font Color ###
                          - *delay-default
                          - service: "{{ nextion.commands.font_color }}"
                            data:
                              component: home.date
                              message: "{{ page_home.general.date.label.color_rgb if is_number(page_home.general.date.label.color_rgb) else ((page_home.general.date.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.date.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.date.label.color_rgb[2] //(2**3)) }}"
                            continue_on_error: true
                          ### DATE Font ###
                          - *delay-default
                          - service: "{{ nextion.commands.text_printf }}"
                            data:
                              component: home.date
                              message: "{{ (dict.values(mui[language].weekdays) | list)[now().weekday()] ~ ', ' ~ as_timestamp(now()) | timestamp_custom(date_format) }}"
                            continue_on_error: true
                          ##### NSPanel Time #####
                          ### TIME Font Color ###
                          - *delay-default
                          - service: "{{ nextion.commands.font_color }}"
                            data:
                              component: home.time
                              message: "{{ page_home.general.time.label.color_rgb if is_number(page_home.general.time.label.color_rgb) else ((page_home.general.time.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.time.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.time.label.color_rgb[2] //(2**3)) }}"
                            continue_on_error: true
                          ### TIME Font ###
                          - *delay-default
                          - service: "{{ nextion.commands.text_printf }}"
                            data:
                              component: home.time
                              message: "{{ time }}"
                            continue_on_error: true
                          - if: "{{ meridiem }}"
                            then:
                              ### TIME Meridiem Font Color ###
                              - *delay-default
                              - service: "{{ nextion.commands.font_color }}"
                                data:
                                  component: home.meridiem
                                  message: "{{ page_home.general.time.label.color_rgb if is_number(page_home.general.time.label.color_rgb) else ((page_home.general.time.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.time.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.time.label.color_rgb[2] //(2**3)) }}"
                                continue_on_error: true
                              ### TIME Meridiem Font ###
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: home.meridiem
                                  message: "{{ meridiem }}"
                                continue_on_error: true

                          ##### NSPanel Outdoor Temp #####
                          - variables:
                              outdoor_temp_state: "{{ states(outdoortemp) | default('unavailable') if outdoortemp is string else 'unavailable' }}"
                              outdoor_temp: "{{ outdoor_temp_state if is_number(outdoor_temp_state) else state_attr(weather_entity, 'temperature') | default('unavailable') if weather_entity is string else 'unavailable' }}"
                          - if: "{{ is_number(outdoor_temp) }}"
                            then:
                              ### LABEL Outdoor Temp Font Color ###
                              - *delay-default
                              - service: "{{ nextion.commands.font_color }}"
                                data:
                                  component: home.outdoor_temp
                                  message: "{{ page_home.general.outdoor_temp.label.color_rgb if is_number(page_home.general.outdoor_temp.label.color_rgb) else ((page_home.general.outdoor_temp.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.outdoor_temp.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.outdoor_temp.label.color_rgb[2] //(2**3)) }}"
                                continue_on_error: true
                              ### LABEL Outdoor Temp Font ###
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: home.outdoor_temp
                                  message: "{{ outdoor_temp | round(1) ~ temperature_units }}"
                                continue_on_error: true

                          ##### NSPanel Indoor Temp #####
                          - variables:
                              indoor_temp_state: "{{ states(indoortemp) | default('unavailable') if indoortemp is string else 'unavailable' }}"
                          - if: "{{ is_number(indoor_temp_state) }}"
                            then:
                              ### ICON Indoor Temp Font Color ###
                              - *delay-default
                              - service: "{{ nextion.commands.font_color }}"
                                data:
                                  component: home.indoortempicon
                                  message: "{{ page_home.general.indoor_temp.icon.color_rgb if is_number(page_home.general.indoor_temp.icon.color_rgb) else ((page_home.general.indoor_temp.icon.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.indoor_temp.icon.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.indoor_temp.icon.color_rgb[2] //(2**3)) }}"
                                continue_on_error: true
                              ### ICON Indoor Temp Font ###
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: home.indoortempicon
                                  message: "{{ nextion.icons.all[page_home.general.indoor_temp.icon.icon.split(':')[1]] | default(page_home.general.indoor_temp.icon.icon if page_home.general.indoor_temp.icon.icon is string else '\U0000E2D5') }}"
                                continue_on_error: true
                              ### LABEL Indoor Temp Font Color ###
                              - *delay-default
                              - service: "{{ nextion.commands.font_color }}"
                                data:
                                  component: home.current_temp
                                  message: "{{ page_home.general.indoor_temp.label.color_rgb if is_number(page_home.general.indoor_temp.label.color_rgb) else ((page_home.general.indoor_temp.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.indoor_temp.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.indoor_temp.label.color_rgb[2] //(2**3)) }}"
                                continue_on_error: true
                              ### LABEL Indoor Temp Font ###
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: home.current_temp
                                  message: "{{ (indoor_temp_state | round(1) ~ temperature_units) if is_number(indoor_temp_state) else (mui[language].unavailable if indoor_temp_state in ['unavailable', 'unknown', None] else indoor_temp_state) }}"
                                continue_on_error: true

                          ##### Weather Icon Home Page #####
                          - *delay-default
                          - service: "{{ nextion.commands.printf }}"
                            data:
                              cmd: home.weather.pic={{ nextion.pics.weather[states(weather_entity) | default('unavailable') if weather_entity is string else 'unavailable'] | default(None) }}
                            continue_on_error: true

                          ##### NSPanel Buttons #####
                          - variables:
                              left_button_state: "{{ states(page_home.hardware.buttons.left.entity) | default('unavailable') if page_home.hardware.buttons.left.entity is string else 'unavailable' }}"
                              right_button_state: "{{ states(page_home.hardware.buttons.right.entity) | default('unavailable') if page_home.hardware.buttons.right.entity is string else 'unavailable' }}"

                          ##### NSPanel Left Button Name #####
                          - if: "{{ page_home.hardware.buttons.left.name | length > 0 }}"
                            then:
                              ### LABEL Font Color ###
                              - *delay-default
                              - service: "{{ nextion.commands.font_color }}"
                                data:
                                  component: home.left_bt_text
                                  message: "{{ page_home.hardware.buttons.left.color_rgb if is_number(page_home.hardware.buttons.left.color_rgb) else ((page_home.hardware.buttons.left.color_rgb[0] //(2**3)) *(2**11))+((page_home.hardware.buttons.left.color_rgb[1] //(2**2)) *(2**5))+(page_home.hardware.buttons.left.color_rgb[2] //(2**3)) }}"
                                continue_on_error: true
                              ### LABEL Font ###
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: home.left_bt_text
                                  message: "{{ page_home.hardware.buttons.left.name }}"
                                continue_on_error: true

                          ##### SET Left Hardware Button PIC on Home Page ####
                          - if: "{{ left_button_state not in ['unavailable', 'unknown', None] }}"
                            then:
                              - variables:
                                  # Hardware Button PIC
                                  left_hardware_button_state: "{{ nextion.pics.hardware.button[left_button_state] | default(None) }}"
                              - *delay-default
                              - service: "{{ nextion.commands.printf }}"
                                data:
                                  cmd: home.left_bt_pic.pic={{ left_hardware_button_state }}
                                continue_on_error: true

                          ##### NSPanel Right Button Name #####
                          - if: "{{ page_home.hardware.buttons.right.name | length > 0 }}"
                            then:
                              ### LABEL Font Color ###
                              - *delay-default
                              - service: "{{ nextion.commands.font_color }}"
                                data:
                                  component: home.right_bt_text
                                  message: "{{ page_home.hardware.buttons.right.color_rgb if is_number(page_home.hardware.buttons.right.color_rgb) else ((page_home.hardware.buttons.right.color_rgb[0] //(2**3)) *(2**11))+((page_home.hardware.buttons.right.color_rgb[1] //(2**2)) *(2**5))+(page_home.hardware.buttons.right.color_rgb[2] //(2**3)) }}"
                                continue_on_error: true
                              ### LABEL Font ###
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: home.right_bt_text
                                  message: "{{ page_home.hardware.buttons.right.name }}"
                                continue_on_error: true

                          ##### SET Right Hardware Button PIC on Home Page #####
                          - if: "{{ right_button_state not in ['unavailable', 'unknown', None] }}"
                            then:
                              - variables:
                              # Hardware Button PIC
                                  right_hardware_button_state: "{{ nextion.pics.hardware.button[right_button_state] | default(None) }}"
                              - *delay-default
                              - service: "{{ nextion.commands.printf }}"
                                data:
                                  cmd: home.right_bt_pic.pic={{ right_hardware_button_state }}
                                continue_on_error: true

                          ###### Status bar ######
                          - &variables-home_page_status_bar
                            variables:
                              thermostat_icon: !input "thermostat_icon" #E50E
                              heat_icon: !input "heat_icon" #\U0000E50F
                              climate_state: "{{ states(climate) | default('unavailable') if climate is string else 'unavailable' }}"
                              climate_action: "{{ state_attr(climate, 'hvac_action') | default('unavailable') if climate is string else 'unavailable'  }}"
                              home_page_status_bar:
                                - entity:         "{{ relay01_entity }}"
                                  icon:           !input "relay01_icon" #E3A5
                                  icon_color_rgb: !input "relay01_icon_color"
                                  page: home
                                  component: icon_top_01
                                - entity:         "{{ relay02_entity }}"
                                  icon:           !input "relay02_icon" #E3A8
                                  icon_color_rgb: !input "relay02_icon_color"
                                  page: home
                                  component: icon_top_02
                                - entity:         "{{ climate }}"
                                  icon: "{{ (nextion.icons.all[heat_icon.split(':')[1]] | default(heat_icon if heat_icon is string else '\U0000E2D5') if climate_action == 'heating' else nextion.icons.all[thermostat_icon.split(':')[1]] | default(thermostat_icon if thermostat_icon is string else '\U0000E2D5')) if climate_state == 'heat' else nextion.icons.blank }}"
                                  icon_color_rgb: !input "thermostat_icon_color"
                                  page: home
                                  component: icon_top_03
                                - entity:         !input "chip01"
                                  icon:           !input "chip01_icon"
                                  icon_color_rgb: !input "chip01_icon_color"
                                  page: home
                                  component: icon_top_04
                                - entity:         !input "chip02"
                                  icon:           !input "chip02_icon"
                                  icon_color_rgb: !input "chip02_icon_color"
                                  page: home
                                  component: icon_top_05
                                - entity:         !input "chip03"
                                  icon:           !input "chip03_icon"
                                  icon_color_rgb: !input "chip03_icon_color"
                                  page: home
                                  component: icon_top_06
                                - entity:         !input "chip04"
                                  icon:           !input "chip04_icon"
                                  icon_color_rgb: !input "chip04_icon_color"
                                  page: home
                                  component: icon_top_07
                                - entity:         !input "chip05"
                                  icon:           !input "chip05_icon"
                                  icon_color_rgb: !input "chip05_icon_color"
                                  page: home
                                  component: icon_top_08
                                - entity:         !input "chip06"
                                  icon:           !input "chip06_icon"
                                  icon_color_rgb: !input "chip06_icon_color"
                                  page: home
                                  component: icon_top_09
                                - entity:         !input "chip07"
                                  icon:           !input "chip07_icon"
                                  icon_color_rgb: !input "chip07_icon_color"
                                  page: home
                                  component: icon_top_10
                          - repeat:
                              for_each: "{{ home_page_status_bar }}"
                              sequence:
                                - &display-home_page_status_bar
                                  if: "{{ repeat.item.entity is defined and repeat.item.entity is string and repeat.item.entity | length > 0 }}"
                                  then:
                                    - variables:
                                        repeat_item_state: "{{ states(repeat.item.entity) | default('unavailable') }}"
                                        repeat_item_state_is_on: "{{ repeat_item_state in ['on', 'open'] }}"
                                        repeat_item_icon: >
                                          {% if repeat_item_state_is_on and repeat.item.icon is string and repeat.item.icon | length > 0 %}{{ nextion.icons.all[repeat.item.icon.split(':')[1]] | default(repeat.item.icon) }}
                                          {% elif repeat_item_state_is_on and state_attr(repeat.item.entity, 'icon') | default('') not in ['unavailable', 'unknown', '', None] %}{{ nextion.icons.all[state_attr(repeat.item.entity, 'icon').split(':')[1]] | default(nextion.icons.blank) }}
                                          {% else %}{{ nextion.icons.blank }}
                                          {% endif %}
                                    - if: "{{ repeat_item_state_is_on }}"
                                      then:
                                        ### ICON Font Color ###
                                        - *delay-default
                                        - service: "{{ nextion.commands.font_color }}"
                                          data:
                                            component: "{{ repeat.item.page }}.{{ repeat.item.component }}"
                                            message: "{{ repeat.item.icon_color_rgb if is_number(repeat.item.icon_color_rgb) else ((repeat.item.icon_color_rgb[0] //(2**3)) *(2**11))+((repeat.item.icon_color_rgb[1] //(2**2)) *(2**5))+(repeat.item.icon_color_rgb[2] //(2**3)) }}"
                                          continue_on_error: true
                                    ### ICON Font ###
                                    - *delay-default
                                    - service: "{{ nextion.commands.text_printf }}"
                                      data:
                                        component: "{{ repeat.item.page }}.{{ repeat.item.component }}"
                                        message: "{{ repeat_item_icon }}"
                                      continue_on_error: true
                                        # {{ is_state(repeat.item.entity, 'on') | default(False) if repeat.item.entity is string else 'unavailable' }}

                          ##### HOME VALUE 01 - 03
                          - *delay-default
                          - &variables-home_page_values
                            variables:
                              home_page_values:
                                - entity:          !input "home_value01"
                                  icon:            !input "home_value01_icon"
                                  icon_color_rgb:  !input "home_value01_icon_color"
                                  label_color_rgb: !input "home_value01_label_color"
                                  page: home
                                  component: value01
                                - entity:          !input "home_value02"
                                  icon:            !input "home_value02_icon"
                                  icon_color_rgb:  !input "home_value02_icon_color"
                                  label_color_rgb: !input "home_value02_label_color"
                                  page: home
                                  component: value02
                                - entity:          !input "home_value03"
                                  icon:            !input "home_value03_icon"
                                  icon_color_rgb:  !input "home_value03_icon_color"
                                  label_color_rgb: !input "home_value03_label_color"
                                  page: home
                                  component: value03
                          - repeat:
                              for_each: "{{ home_page_values }}"
                              sequence:
                                - &display-home_page_value
                                  if: "{{ repeat.item.entity is string and repeat.item.entity is match 'sensor.' and states(repeat.item.entity) not in ['unavailable', 'unknown', None] }}"
                                  then:
                                    - if: "{{ repeat.item.icon | length > 0 }}"
                                      then:
                                        ### ICON Font Color ###
                                        - *delay-default
                                        - service: "{{ nextion.commands.font_color }}"
                                          data:
                                            component: "{{ repeat.item.page }}.{{ repeat.item.component }}_icon"
                                            message: "{{ repeat.item.icon_color_rgb if is_number(repeat.item.icon_color_rgb) else ((repeat.item.icon_color_rgb[0] //(2**3)) *(2**11))+((repeat.item.icon_color_rgb[1] //(2**2)) *(2**5))+(repeat.item.icon_color_rgb[2] //(2**3)) }}"
                                          continue_on_error: true
                                        ### ICON Font ###
                                        - *delay-default
                                        - service: "{{ nextion.commands.text_printf }}"
                                          data:
                                            component: "{{ repeat.item.page }}.{{ repeat.item.component }}_icon"
                                            message: "{{ nextion.icons.all[repeat.item.icon.split(':')[1]] | default(repeat.item.icon if repeat.item.icon is string else '\U0000E2D5') }}"
                                          continue_on_error: true
                                    - variables:
                                        repeat_item_state: "{{ states(repeat.item.entity) | default('unavailable') }}"
                                        repeat_item_state_available: "{{ repeat_item_state not in ['unavailable', 'unknown', None] }}"
                                    - if: "{{ repeat_item_state_available }}"
                                      then:
                                        ### LABEL Font Color ###
                                        - *delay-default
                                        - service: "{{ nextion.commands.font_color }}"
                                          data:
                                            component: "{{ repeat.item.page }}.{{ repeat.item.component }}_state"
                                            message: "{{ repeat.item.label_color_rgb if is_number(repeat.item.label_color_rgb) else ((repeat.item.label_color_rgb[0] //(2**3)) *(2**11))+((repeat.item.label_color_rgb[1] //(2**2)) *(2**5))+(repeat.item.label_color_rgb[2] //(2**3)) }}"
                                          continue_on_error: true
                                        ### LABEL Font ###
                                        - *delay-default
                                        - service: "{{ nextion.commands.text_printf }}"
                                          data:
                                            component: "{{ repeat.item.page }}.{{ repeat.item.component }}_state"
                                            message: "{{ (repeat_item_state | round(1) ~ state_attr(repeat.item.entity, 'unit_of_measurement') | default('')) if is_number(repeat_item_state) else repeat_item_state }}"
                                          continue_on_error: true

                          ##### Set notify icon #####
                          - variables:
                              notification_unread_state: "{{ states(notification_unread) | default('unavailable') if notification_unread is string else 'unavailable' }}"
                          - if: "{{ notification_unread_state in ['on', 'off'] }}"
                            then:
                              - variables:
                                  notification_text_state: "{{ states(notification_text) | default(None) if notification_text is string else None }}"
                                  set_button04_icon: "{{ nextion.icons.all[page_home.buttons[3].icon.split(':')[1]] | default(page_home.buttons[3].icon if page_home.buttons[3].icon is string else '\U0000E2D5') if notification_unread_state == 'on' and notification_text_state | length > 0 else nextion.icons.blank }}"
                                  set_button04_icon_font: "{{ (page_home.buttons[3].color_rgb[notification_unread_state] if is_number(page_home.buttons[3].color_rgb[notification_unread_state]) else ((page_home.buttons[3].color_rgb[notification_unread_state][0] //(2**3)) *(2**11))+((page_home.buttons[3].color_rgb[notification_unread_state][1] //(2**2)) *(2**5))+(page_home.buttons[3].color_rgb[notification_unread_state][2] //(2**3))) if notification_unread_state in ['on', 'off'] and notification_text_state | length > 0 else nextion.colors.grey_light }}"
                              ##### SET ICON Font - Notify #####
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: home.button04_icon
                                  message: "{{ set_button04_icon }}"
                                continue_on_error: true

                              ##### SET ICON Font Color - Notify #####
                              - *delay-default
                              - service: "{{ nextion.commands.font_color }}"
                                data:
                                  component: home.button04_icon
                                  message: "{{ set_button04_icon_font }}"
                                continue_on_error: true

                          ###### QR Code - Icon ######
                          - *delay-default
                          - if: "{{ qrcode_enabled == true }}"
                            then: # Display QR code icon
                              ### ICON Font Color ###
                              - service: "{{ nextion.commands.font_color }}"
                                data:
                                  component: home.button05_icon
                                  message: "{{ page_home.buttons[4].color_rgb.on if is_number(page_home.buttons[4].color_rgb.on) else ((page_home.buttons[4].color_rgb.on[0] //(2**3)) *(2**11))+((page_home.buttons[4].color_rgb.on[1] //(2**2)) *(2**5))+(page_home.buttons[4].color_rgb.on[2] //(2**3)) }}"
                                continue_on_error: true
                              ### ICON Font ###
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: home.button05_icon
                                  message: "{{ nextion.icons.all[page_home.buttons[4].icon.split(':')[1]] | default(page_home.buttons[4].icon if page_home.buttons[4].icon is string else '\U0000E2D5') }}"
                                continue_on_error: true
                            else: # Display blank icon
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: home.button05_icon
                                  message: "{{ nextion.icons.blank }}"
                                continue_on_error: true

                          ###### ENTITIES - Icon ######
                          - *delay-default
                          - if: "{{ entitypages_enabled }}"
                            then: # Display entities icon
                              ### ICON Font Color ###
                              - service: "{{ nextion.commands.font_color }}"
                                data:
                                  component: home.button06_icon
                                  message: "{{ page_home.buttons[5].color_rgb.on if is_number(page_home.buttons[5].color_rgb.on) else ((page_home.buttons[5].color_rgb.on[0] //(2**3)) *(2**11))+((page_home.buttons[5].color_rgb.on[1] //(2**2)) *(2**5))+(page_home.buttons[5].color_rgb.on[2] //(2**3)) }}"
                                continue_on_error: true
                              ### ICON Font ###
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: home.button06_icon
                                  message: "{{ nextion.icons.all[page_home.buttons[5].icon.split(':')[1]] | default(page_home.buttons[5].icon if page_home.buttons[5].icon is string else '\U0000E2D5') }}"
                                continue_on_error: true
                            else: # Display blank icon
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: home.button06_icon
                                  message: "{{ nextion.icons.blank }}"
                                continue_on_error: true

                          ###### SHOW All component when page loading done #####
                          - *delay-default
                          - service: "{{ nextion.commands.show_all }}"
                            continue_on_error: true

                      ## BUTTON PAGES 01 - 04 ##
                      - alias: Button pages
                        conditions: "{{ nspanel_event.page in nextion.pages.buttonpages }}"
                        sequence: &refresh_page_buttonpage
                          - &variables-page_buttons
                            variables:
                              button_page_index: "{{ (nspanel_event.page[-2:] | int(-1)) - 1 }}"
                              first_button: "{{ button_page_index * 8 }}"
                              last_button: "{{ first_button + 8 }}"
                              ##### BUTTON Page Labels #####
                              button_pages_labels:
                                - label: !input button_page01_label
                                - label: !input button_page02_label
                                - label: !input button_page03_label
                                - label: !input button_page04_label
                              ##### BUTTONS Page - Buttons 1 - 32 #####
                              button_pages_buttons:
                                - entity:         !input "entity01"
                                  name:           !input "entity01_name"
                                  icon:           !input "entity01_icon"
                                  icon_color_rgb: !input "entity01_icon_color"
                                  confirm:        !input "entity01_confirm"
                                  page: buttonpage01
                                  component: button01
                                - entity:         !input "entity02"
                                  name:           !input "entity02_name"
                                  icon:           !input "entity02_icon"
                                  icon_color_rgb: !input "entity02_icon_color"
                                  confirm:        !input "entity02_confirm"
                                  page: buttonpage01
                                  component: button02
                                - entity:         !input "entity03"
                                  name:           !input "entity03_name"
                                  icon:           !input "entity03_icon"
                                  icon_color_rgb: !input "entity03_icon_color"
                                  confirm:        !input "entity03_confirm"
                                  page: buttonpage01
                                  component: button03
                                - entity:         !input "entity04"
                                  name:           !input "entity04_name"
                                  icon:           !input "entity04_icon"
                                  icon_color_rgb: !input "entity04_icon_color"
                                  confirm:        !input "entity04_confirm"
                                  page: buttonpage01
                                  component: button04
                                - entity:         !input "entity05"
                                  name:           !input "entity05_name"
                                  icon:           !input "entity05_icon"
                                  icon_color_rgb: !input "entity05_icon_color"
                                  confirm:        !input "entity05_confirm"
                                  page: buttonpage01
                                  component: button05
                                - entity:         !input "entity06"
                                  name:           !input "entity06_name"
                                  icon:           !input "entity06_icon"
                                  icon_color_rgb: !input "entity06_icon_color"
                                  confirm:        !input "entity06_confirm"
                                  page: buttonpage01
                                  component: button06
                                - entity:         !input "entity07"
                                  name:           !input "entity07_name"
                                  icon:           !input "entity07_icon"
                                  icon_color_rgb: !input "entity07_icon_color"
                                  confirm:        !input "entity07_confirm"
                                  page: buttonpage01
                                  component: button07
                                - entity:         !input "entity08"
                                  name:           !input "entity08_name"
                                  icon:           !input "entity08_icon"
                                  icon_color_rgb: !input "entity08_icon_color"
                                  confirm:        !input "entity08_confirm"
                                  page: buttonpage01
                                  component: button08
                                - entity:         !input "entity09"
                                  name:           !input "entity09_name"
                                  icon:           !input "entity09_icon"
                                  icon_color_rgb: !input "entity09_icon_color"
                                  confirm:        !input "entity09_confirm"
                                  page: buttonpage02
                                  component: button01
                                - entity:         !input "entity10"
                                  name:           !input "entity10_name"
                                  icon:           !input "entity10_icon"
                                  icon_color_rgb: !input "entity10_icon_color"
                                  confirm:        !input "entity10_confirm"
                                  page: buttonpage02
                                  component: button02
                                - entity:         !input "entity11"
                                  name:           !input "entity11_name"
                                  icon:           !input "entity11_icon"
                                  icon_color_rgb: !input "entity11_icon_color"
                                  confirm:        !input "entity11_confirm"
                                  page: buttonpage02
                                  component: button03
                                - entity:         !input "entity12"
                                  name:           !input "entity12_name"
                                  icon:           !input "entity12_icon"
                                  icon_color_rgb: !input "entity12_icon_color"
                                  confirm:        !input "entity12_confirm"
                                  page: buttonpage02
                                  component: button04
                                - entity:         !input "entity13"
                                  name:           !input "entity13_name"
                                  icon:           !input "entity13_icon"
                                  icon_color_rgb: !input "entity13_icon_color"
                                  confirm:        !input "entity13_confirm"
                                  page: buttonpage02
                                  component: button05
                                - entity:         !input "entity14"
                                  name:           !input "entity14_name"
                                  icon:           !input "entity14_icon"
                                  icon_color_rgb: !input "entity14_icon_color"
                                  confirm:        !input "entity14_confirm"
                                  page: buttonpage02
                                  component: button06
                                - entity:         !input "entity15"
                                  name:           !input "entity15_name"
                                  icon:           !input "entity15_icon"
                                  icon_color_rgb: !input "entity15_icon_color"
                                  confirm:        !input "entity15_confirm"
                                  page: buttonpage02
                                  component: button07
                                - entity:         !input "entity16"
                                  name:           !input "entity16_name"
                                  icon:           !input "entity16_icon"
                                  icon_color_rgb: !input "entity16_icon_color"
                                  confirm:        !input "entity16_confirm"
                                  page: buttonpage02
                                  component: button08
                                - entity:         !input "entity17"
                                  name:           !input "entity17_name"
                                  icon:           !input "entity17_icon"
                                  icon_color_rgb: !input "entity17_icon_color"
                                  confirm:        !input "entity17_confirm"
                                  page: buttonpage03
                                  component: button01
                                - entity:         !input "entity18"
                                  name:           !input "entity18_name"
                                  icon:           !input "entity18_icon"
                                  icon_color_rgb: !input "entity18_icon_color"
                                  confirm:        !input "entity18_confirm"
                                  page: buttonpage03
                                  component: button02
                                - entity:         !input "entity19"
                                  name:           !input "entity19_name"
                                  icon:           !input "entity19_icon"
                                  icon_color_rgb: !input "entity19_icon_color"
                                  confirm:        !input "entity19_confirm"
                                  page: buttonpage03
                                  component: button03
                                - entity:         !input "entity20"
                                  name:           !input "entity20_name"
                                  icon:           !input "entity20_icon"
                                  icon_color_rgb: !input "entity20_icon_color"
                                  confirm:        !input "entity20_confirm"
                                  page: buttonpage03
                                  component: button04
                                - entity:         !input "entity21"
                                  name:           !input "entity21_name"
                                  icon:           !input "entity21_icon"
                                  icon_color_rgb: !input "entity21_icon_color"
                                  confirm:        !input "entity21_confirm"
                                  page: buttonpage03
                                  component: button05
                                - entity:         !input "entity22"
                                  name:           !input "entity22_name"
                                  icon:           !input "entity22_icon"
                                  icon_color_rgb: !input "entity22_icon_color"
                                  confirm:        !input "entity22_confirm"
                                  page: buttonpage03
                                  component: button06
                                - entity:         !input "entity23"
                                  name:           !input "entity23_name"
                                  icon:           !input "entity23_icon"
                                  icon_color_rgb: !input "entity23_icon_color"
                                  confirm:        !input "entity23_confirm"
                                  page: buttonpage03
                                  component: button07
                                - entity:         !input "entity24"
                                  name:           !input "entity24_name"
                                  icon:           !input "entity24_icon"
                                  icon_color_rgb: !input "entity24_icon_color"
                                  confirm:        !input "entity24_confirm"
                                  page: buttonpage03
                                  component: button08
                                - entity:         !input "entity25"
                                  name:           !input "entity25_name"
                                  icon:           !input "entity25_icon"
                                  icon_color_rgb: !input "entity25_icon_color"
                                  confirm:        !input "entity25_confirm"
                                  page: buttonpage04
                                  component: button01
                                - entity:         !input "entity26"
                                  name:           !input "entity26_name"
                                  icon:           !input "entity26_icon"
                                  icon_color_rgb: !input "entity26_icon_color"
                                  confirm:        !input "entity26_confirm"
                                  page: buttonpage04
                                  component: button02
                                - entity:         !input "entity27"
                                  name:           !input "entity27_name"
                                  icon:           !input "entity27_icon"
                                  icon_color_rgb: !input "entity27_icon_color"
                                  confirm:        !input "entity27_confirm"
                                  page: buttonpage04
                                  component: button03
                                - entity:         !input "entity28"
                                  name:           !input "entity28_name"
                                  icon:           !input "entity28_icon"
                                  icon_color_rgb: !input "entity28_icon_color"
                                  confirm:        !input "entity28_confirm"
                                  page: buttonpage04
                                  component: button04
                                - entity:         !input "entity29"
                                  name:           !input "entity29_name"
                                  icon:           !input "entity29_icon"
                                  icon_color_rgb: !input "entity29_icon_color"
                                  confirm:        !input "entity29_confirm"
                                  page: buttonpage04
                                  component: button05
                                - entity:         !input "entity30"
                                  name:           !input "entity30_name"
                                  icon:           !input "entity30_icon"
                                  icon_color_rgb: !input "entity30_icon_color"
                                  confirm:        !input "entity30_confirm"
                                  page: buttonpage04
                                  component: button06
                                - entity:         !input "entity31"
                                  name:           !input "entity31_name"
                                  icon:           !input "entity31_icon"
                                  icon_color_rgb: !input "entity31_icon_color"
                                  confirm:        !input "entity31_confirm"
                                  page: buttonpage04
                                  component: button07
                                - entity:         !input "entity32"
                                  name:           !input "entity32_name"
                                  icon:           !input "entity32_icon"
                                  icon_color_rgb: !input "entity32_icon_color"
                                  confirm:        !input "entity32_confirm"
                                  page: buttonpage04
                                  component: button08
                          - if: "{{ button_page_index >= 0 and button_page_index <= 3 }}"
                            then:
                              - service: "{{ nextion.commands.set_settings_entity }}"
                                data:
                                  entity: "{{ nspanel_event }}"
                                continue_on_error: true
                              ##### Button Page Label #####
                              - if: "{{ button_pages_labels[button_page_index].label | length > 0 }}"
                                then:
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: "{{ 'bpage%02d_label' | format(button_page_index+1) }}"
                                      message: "{{ button_pages_labels[button_page_index].label }}"
                                    continue_on_error: true

                              ##### NSPanel build Button page #####
                              - repeat:
                                  for_each: "{{ button_pages_buttons[first_button:last_button] }}"
                                  sequence: &display-button_page_button
                                    - if: "{{ repeat.item.entity is string and repeat.item.entity | length > 0 and repeat.item.entity.split('.') | default([]) | count > 0 }}"
                                      then:
                                        - variables:
                                            item_domain: "{{ repeat.item.entity.split('.')[0] | default('unknown') }}"
                                            # {{ states(entity_id) | default('unavailable') if entity_id is string else 'unavailable' }}
                                            current_entity_state: "{{ states(repeat.item.entity) | default('unavailable') }}"
                                            current_entity_state_available: "{{ current_entity_state not in ['unavailable'] }}"
                                            # Button PIC GRAY/WHITE
                                            btn_pic: "{{ nextion.pics.button.on if current_entity_state in ['on', 'open', 'opening', 'home'] or (item_domain == 'climate' and current_entity_state != 'off') else nextion.pics.button.off }}"
                                            # TEXT, BRIGHTNESS and ICON Background
                                            btn_bg: "{{ nextion.colors.white if current_entity_state in ['on', 'open', 'opening', 'home'] or (item_domain == 'climate' and current_entity_state != 'off') else nextion.colors.grey_dark }}"
                                            # ICON Font Color
                                            btn_icon_font: >
                                              {% if not current_entity_state_available %} {{ nextion.colors.red }}
                                              {% elif item_domain in ['button', 'input_button', 'scene'] or current_entity_state in ['off', 'closed', 'closing'] or (item_domain == 'person' and current_entity_state != 'home') %} {{ nextion.colors.grey_light }}
                                              {% elif current_entity_state in ['on', 'open', 'opening', 'home'] or (item_domain == 'climate' and current_entity_state != 'off') %} {{ repeat.item.icon_color_rgb if is_number(repeat.item.icon_color_rgb) else ((repeat.item.icon_color_rgb[0] //(2**3)) *(2**11))+((repeat.item.icon_color_rgb[1] //(2**2)) *(2**5))+(repeat.item.icon_color_rgb[2] //(2**3)) }}
                                              {% else %} {{ nextion.colors.red }}
                                              {% endif %}
                                            # LABEL Font Color
                                            btn_txt_font: >-
                                              {% if not current_entity_state_available %} {{ nextion.colors.white }}
                                              {% elif item_domain in ['button', 'input_button', 'scene'] or current_entity_state in ['off', 'closed', 'closing'] or (item_domain == 'person' and current_entity_state != 'home') %} {{ nextion.colors.white }}
                                              {% elif current_entity_state in ['on', 'open', 'opening', 'home'] or (item_domain == 'climate' and current_entity_state != 'off') %} {{ nextion.colors.grey_dark }}
                                              {% else %} {{ nextion.colors.white }}
                                              {% endif %}
                                            # BRIGHTNESS Font Color
                                            btn_bri_font: "{{ btn_txt_font }}" #"{{ nextion.colors.grey_dark }}"
                                            # ICON Value
                                            btn_icon: >
                                              {% if not current_entity_state_available %} {{ nextion.icons.buttons.unknown }}
                                              {% elif repeat.item.icon | length > 0 %} {{ nextion.icons.all[repeat.item.icon.split(':')[1]] | default(repeat.item.icon if repeat.item.icon is string else '\U0000E2D5') }}
                                              {% elif repeat.item.entity and repeat.item.entity.split('.') | count > 1 %} {{ nextion.icons.buttons[repeat.item.entity.split('.')[0] if repeat.item.entity else 'unknown'] }}
                                              {% else %}  {{ nextion.icons.buttons.unknown }}
                                              {% endif %}
                                            # LABEL Value
                                            btn_label: "{{ repeat.item.name }}"
                                            # BRIGHTNESS Value
                                            btn_bri_txt: >-
                                              {% if not current_entity_state_available %} 0
                                              {% elif item_domain == 'light' and current_entity_state == 'on' and state_attr(repeat.item.entity, 'brightness') != None %} {{ (state_attr(repeat.item.entity, 'brightness') | int * 100 /255) | round(0) }}%
                                              {% elif item_domain == 'cover' and current_entity_state in ['open', 'opening', 'closing'] and state_attr(repeat.item.entity, 'current_position') != None %} {{ (state_attr(repeat.item.entity, 'current_position') | int(100)) | round(0) }}%
                                              {% elif item_domain == 'climate' and current_entity_state != 'off' and state_attr(repeat.item.entity, "current_temperature") != None %} {{ (state_attr(repeat.item.entity, "current_temperature") | float) | round(0) }}{{ temperature_units }}
                                              {% else -%} 0
                                              {% endif -%}
                                        - *delay-default
                                        - service: "{{ nextion.commands.set_button }}"
                                          data:
                                            btn_id: "{{ repeat.item.page }}.{{ repeat.item.component }}"
                                            btn_pic: "{{ btn_pic }}"
                                            btn_bg: "{{ btn_bg }}"
                                            btn_icon_font: "{{ btn_icon_font }}"
                                            btn_txt_font: "{{ btn_txt_font }}"
                                            btn_bri_font: "{{ btn_bri_font }}"
                                            btn_icon: "{{ btn_icon }}"
                                            btn_label: "{{ btn_label }}"
                                            btn_bri_txt: "{{ btn_bri_txt }}"
                                          continue_on_error: true
                          ###### SHOW All component when page loading done #####
                          - *delay-default
                          - service: "{{ nextion.commands.show_all }}"
                            continue_on_error: true

                      ## PAGE LIGHTSETTINGS ##
                      - alias: Light settings page
                        conditions: "{{ nspanel_event.page == nextion.pages.light }}"
                        sequence:
                          - *variables-settings_entity
                          - if: "{{ settings_entity_domain == 'light' }}"
                            then:
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: lightsettings.light_name
                                  message: "{{ settings_entity_dict.name if settings_entity_dict.name is defined and settings_entity_dict.name is string and settings_entity_dict.name | length > 0 else state_attr(settings_entity_dict.entity, 'friendly_name') if state_attr(settings_entity_dict.entity, 'friendly_name') | length > 0 else ('Light' ~ (': ' ~ settings_entity_dict.component) if settings_entity_dict.component is string and settings_entity_dict.component | length > 0) }}"
                                continue_on_error: true
                              ##### LIGHT ICON - ON / OFF #####
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: lightsettings.icon_state
                                  message: "{{ nextion.icons.all[settings_entity_dict.icon.split(':')[1]] | default(settings_entity_dict.icon if settings_entity_dict.icon is defined and settings_entity_dict.icon is string else nextion.icons.buttons.light) if settings_entity_dict.icon not in ['unavailable', 'unknown', None] and settings_entity_dict.icon | length > 0 else nextion.icons.buttons.light }}"
                                continue_on_error: true
                              - *delay-default
                              - service: "{{ nextion.commands.font_color }}"
                                data:
                                  component: lightsettings.icon_state
                                  message: "{{ (settings_entity_dict.icon_color_rgb if is_number(settings_entity_dict.icon_color_rgb) else ((settings_entity_dict.icon_color_rgb[0] //(2**3)) *(2**11))+((settings_entity_dict.icon_color_rgb[1] //(2**2)) *(2**5))+(settings_entity_dict.icon_color_rgb[2] //(2**3))) if is_state(settings_entity_dict.entity, 'on') else nextion.colors.grey_light }}"
                                continue_on_error: true
                              ##### LIGHT State #####
                              - *delay-default
                              - if: "{{ state_attr(settings_entity_dict.entity, 'brightness') != none }}"
                                then:
                                  - service: "{{ nextion.commands.value }}"
                                    data:
                                      component: lightsettings.lightslider
                                      message: "{{ (state_attr(settings_entity_dict.entity, 'brightness') | int * 100 / 255) | round(0) }}"
                                    continue_on_error: true
                                  - *delay-default
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: lightsettings.light_value
                                      message: "{{ (state_attr(settings_entity_dict.entity, 'brightness') | int * 100 / 255) | round(0) }}%"
                                    continue_on_error: true
                                  - *delay-default
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: lightsettings.light_value_2
                                      message: "{{ (state_attr(settings_entity_dict.entity, 'brightness') | int * 100 /255) | round(0) }}%"
                                    continue_on_error: true
                                else:
                                  - service: "{{ nextion.commands.value }}"
                                    data:
                                      component: lightsettings.lightslider
                                      message: '0'
                                    continue_on_error: true
                                  - *delay-default
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: lightsettings.light_value
                                      message: '0 %'
                                    continue_on_error: true
                                  - *delay-default
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: lightsettings.light_value_2
                                      message: '0 %'
                                    continue_on_error: true

                              ##### LIGHT Check Color_Temp Value is available when yes send some current Values #####
                              - if: "{{ state_attr(settings_entity_dict.entity, 'color_temp') != none }}"
                                then:
                                  - *delay-default
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: lightsettings.temp_value
                                      message: "{{ (state_attr(settings_entity_dict.entity, 'color_temp') | int ) | round(0) }}"
                                    continue_on_error: true
                                  - *delay-default
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: lightsettings.temp_value_2
                                      message: "{{ (state_attr(settings_entity_dict.entity, 'color_temp') | int ) | round(0) }}"
                                    continue_on_error: true
                                  - *delay-default
                                  - service: "{{ nextion.commands.value }}"
                                    data:
                                      component: lightsettings.tempslider
                                      message: "{{ (state_attr(settings_entity_dict.entity, 'color_temp') | int ) | round(0) }}"
                                    continue_on_error: true

                      ## PAGE COVERSETTINGS ##
                      - alias: Cover settings page
                        conditions: "{{ nspanel_event.page == nextion.pages.cover }}"
                        sequence:
                          ##### COVER - OPEN / CLOSE #####
                          - *variables-settings_entity
                          - if: "{{ settings_entity_domain == 'cover' }}"
                            then:
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: coversettings.icon_state
                                  message: "{{ nextion.icons.all[settings_entity_dict.icon.split(':')[1]] | default(settings_entity_dict.icon if settings_entity_dict.icon is defined and settings_entity_dict.icon is string else nextion.icons.buttons.cover) if settings_entity_dict.icon not in ['unavailable', 'unknown', None] and settings_entity_dict.icon | length > 0 else nextion.icons.buttons.cover }}"
                                continue_on_error: true
                              - *delay-default
                              - service: "{{ nextion.commands.font_color }}"
                                data:
                                  component: coversettings.icon_state
                                  message: "{{ (settings_entity_dict.icon_color_rgb if is_number(settings_entity_dict.icon_color_rgb) else ((settings_entity_dict.icon_color_rgb[0] //(2**3)) *(2**11))+((settings_entity_dict.icon_color_rgb[1] //(2**2)) *(2**5))+(settings_entity_dict.icon_color_rgb[2] //(2**3))) if states(settings_entity_dict.entity) in ['open', 'opening'] else nextion.colors.grey_light }}"
                                continue_on_error: true
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: coversettings.cover_name
                                  message: "{{ settings_entity_dict.entity }}"
                                continue_on_error: true

                              ##### COVER State
                              - service: "{{ nextion.commands.value }}"
                                data:
                                  component: coversettings.coverslider
                                  message: "{{ (state_attr(settings_entity_dict.entity, 'current_position') | int ) | round(0) }}"
                                continue_on_error: true
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: coversettings.cover_value
                                  message: "{{ (state_attr(settings_entity_dict.entity, 'current_position') | int ) | round(0) }} %"
                                continue_on_error: true

                              ##### COVER Battery ICON Yes / NO #####
                              - variables:
                                  battery_level: >
                                    {% if state_attr(settings_entity_dict.entity, 'battery') | default('unavailable') not in ['unavailable', 'unknown', None] %}
                                      {{ state_attr(settings_entity_dict.entity, 'battery') | default('unavailable') }}
                                    {% elif expand(device_entities(device_id(settings_entity_dict.entity))) | selectattr('attributes.device_class', 'defined') | selectattr('attributes.device_class', 'eq', 'battery') | map(attribute='state') | map('float') | list | count > 0 %}
                                      {{ expand(device_entities(device_id(settings_entity_dict.entity))) | selectattr('attributes.device_class', 'defined') | selectattr('attributes.device_class', 'eq', 'battery') | map(attribute='state') | map('float') | list | first }}
                                    {% elif states(settings_entity_dict.entity | replace('cover.','sensor.') ~ '_battery') | default('unavailable') not in ['unavailable', 'unknown', None] %}
                                      {{ states(settings_entity_dict.entity | replace('cover.','sensor.') ~ '_battery') | default('unavailable') }}
                                    {% elif states(settings_entity_dict.entity | replace('cover.','sensor.') | replace('cover', 'battery')) | default('unavailable') not in ['unavailable', 'unknown', None] %}
                                      {{ states(settings_entity_dict.entity | replace('cover.','sensor.') | replace('cover', 'battery')) | default('unavailable') }}
                                    {% else %} unavailable
                                    {% endif %}
                              - if: "{{ is_number(battery_level) }}"
                                then:
                                  - *delay-default
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: coversettings.battery_value
                                      message: "{{ battery_level | round(0) }} %"
                                    continue_on_error: true
                                  ### ICON Battery Font Color ###
                                  - *delay-default
                                  - service: "{{ nextion.commands.font_color }}"
                                    data:
                                      component: coversettings.battery_icon
                                      message: "{{ nextion.colors.grey_super_light }}"
                                    continue_on_error: true
                                  ### ICON Battery Font ###
                                  - *delay-default
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: coversettings.battery_icon
                                      message: "{{ nextion.icons.battery }}"
                                    continue_on_error: true

                      ## PAGE CLIMATE ##
                      - alias: Climate page
                        conditions: "{{ nspanel_event.page == nextion.pages.climate }}"
                        sequence:
                          - *variables-settings_entity
                          - if: "{{ settings_entity_domain == 'climate' }}"
                            then:
                              - variables:
                                  hvac_mode: "{{ states(settings_entity_dict.entity) | default('unavailable') if settings_entity_dict.entity is string else 'unavailable' }}"
                                  outdoor_temp_state: "{{ states(outdoortemp) | default('unavailable') if outdoortemp is string else 'unavailable' }}"
                                  outdoor_temp: "{{ outdoor_temp_state if is_number(outdoor_temp_state) else state_attr(weather_entity, 'temperature') | default('unavailable') if weather_entity is string else 'unavailable' }}"
                                  heating_state: "{{ mui[language].climate.states.off if hvac_mode == 'off' else mui[language].climate.states.on }}"
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: climate.climate_label
                                  message: "{{ settings_entity_dict.name }}"
                                continue_on_error: true
                              - *delay-default
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: outdoor_temp
                                  message: "{{ (outdoor_temp | round(1) ~ temperature_units) if is_number(outdoor_temp) else (mui[language].unavailable if outdoor_temp in ['unavailable', 'unknown', None] else outdoor_temp) }}"
                                continue_on_error: true

                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: current_temp
                                  message: "{{ (state_attr(settings_entity_dict.entity, 'current_temperature') | round(1) ~ temperature_units) if is_number(state_attr(settings_entity_dict.entity, 'current_temperature')) else '' }}" # mui[language].unavailable?
                                continue_on_error: true
                              - if: "{{ hvac_mode != 'off' and is_number(state_attr(settings_entity_dict.entity, 'temperature')) }}"
                                then:
                                  - variables:
                                      target_temp: "{{state_attr(settings_entity_dict.entity, 'temperature') | round(1)}}"
                                  - service: "{{ nextion.commands.thermostat_cycle }}"
                                    data:
                                      value: "{{ target_temp }}"
                                    continue_on_error: true
                                else:
                                  - service: "{{ nextion.commands.thermostat_cycle }}"
                                    data:
                                      value: "0"
                                    continue_on_error: true
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: target_temp
                                      message: " "
                                    continue_on_error: true
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: heating_state
                                  message: "{{ heating_state }}"
                                continue_on_error: true

                              # HVAC Button PIC
                              - variables:
                                  heating_bt_pic: "{{ nextion.pics.heating.button.off if hvac_mode == 'off' else nextion.pics.heating.button.on }}"
                              - *delay-default
                              - service: "{{ nextion.commands.printf }}"
                                data:
                                  cmd: heating_bt_pic.pic={{ heating_bt_pic }}
                                continue_on_error: true
                              - variables:
                                  hotwatercharge_state: "{{ states(hotwatercharge) | default('unavailable') if hotwatercharge is string else 'unavailable' }}"
                                  hotwatertemp_state: "{{ states(hotwatertemp) | default('unavailable') if hotwatertemp is string else 'unavailable' }}"
                                  hotw_bt_pic: "{{ nextion.pics.hvac.button[hotwatercharge_state] | default(nextion.pics.hvac.button.blank) if hotwatercharge_state not in ['unavailable', 'unknown', None] else nextion.pics.hvac.button.blank }}"
                              - *delay-default
                              - service: "{{ nextion.commands.printf }}"
                                data:
                                  cmd: hotw_bt_pic.pic={{ hotw_bt_pic }}
                                continue_on_error: true
                              - if: "{{ hotwatertemp_state not in ['unavailable', 'unknown', None] }}"
                                then:
                                  - *delay-default
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: climate.hotwater_temp
                                      message: "{{ (hotwatertemp_state | round(1) ~ temperature_units) if is_number(hotwatertemp_state) else hotwatertemp_state }}"
                                    continue_on_error: true

                      ## ENTITY PAGES 01 - 04 ##
                      - alias: Entity pages
                        conditions: "{{ nspanel_event.page in nextion.pages.entitypages }}"
                        sequence: &refresh-entity_pages
                          - &variables-entity_pages
                            variables:
                              ##### Entity pages #####
                              entity_pages_labels:
                                - label: !input "entity_page01_label"
                                - label: !input "entity_page02_label"
                                - label: !input "entity_page03_label"
                                - label: !input "entity_page04_label"
                              entity_pages_entities:
                                - entity: !input "entities_entity01"
                                  name:   !input "entities_entity01_name"
                                  icon:   !input "entities_entity01_icon"
                                  page: entitypage01
                                  component: value01
                                - entity: !input "entities_entity02"
                                  name:   !input "entities_entity02_name"
                                  icon:   !input "entities_entity02_icon"
                                  page: entitypage01
                                  component: value02
                                - entity: !input "entities_entity03"
                                  name:   !input "entities_entity03_name"
                                  icon:   !input "entities_entity03_icon"
                                  page: entitypage01
                                  component: value03
                                - entity: !input "entities_entity04"
                                  name:   !input "entities_entity04_name"
                                  icon:   !input "entities_entity04_icon"
                                  page: entitypage01
                                  component: value04
                                - entity: !input "entities_entity05"
                                  name:   !input "entities_entity05_name"
                                  icon:   !input "entities_entity05_icon"
                                  page: entitypage01
                                  component: value05
                                - entity: !input "entities_entity06"
                                  name:   !input "entities_entity06_name"
                                  icon:   !input "entities_entity06_icon"
                                  page: entitypage01
                                  component: value06
                                - entity: !input "entities_entity07"
                                  name:   !input "entities_entity07_name"
                                  icon:   !input "entities_entity07_icon"
                                  page: entitypage01
                                  component: value07
                                - entity: !input "entities_entity08"
                                  name:   !input "entities_entity08_name"
                                  icon:   !input "entities_entity08_icon"
                                  page: entitypage01
                                  component: value08
                                - entity: !input "entities_entity09"
                                  name:   !input "entities_entity09_name"
                                  icon:   !input "entities_entity09_icon"
                                  page: entitypage02
                                  component: value01
                                - entity: !input "entities_entity10"
                                  name:   !input "entities_entity10_name"
                                  icon:   !input "entities_entity10_icon"
                                  page: entitypage02
                                  component: value02
                                - entity: !input "entities_entity11"
                                  name:   !input "entities_entity11_name"
                                  icon:   !input "entities_entity11_icon"
                                  page: entitypage02
                                  component: value03
                                - entity: !input "entities_entity12"
                                  name:   !input "entities_entity12_name"
                                  icon:   !input "entities_entity12_icon"
                                  page: entitypage02
                                  component: value04
                                - entity: !input "entities_entity13"
                                  name:   !input "entities_entity13_name"
                                  icon:   !input "entities_entity13_icon"
                                  page: entitypage02
                                  component: value05
                                - entity: !input "entities_entity14"
                                  name:   !input "entities_entity14_name"
                                  icon:   !input "entities_entity14_icon"
                                  page: entitypage02
                                  component: value06
                                - entity: !input "entities_entity15"
                                  name:   !input "entities_entity15_name"
                                  icon:   !input "entities_entity15_icon"
                                  page: entitypage02
                                  component: value07
                                - entity: !input "entities_entity16"
                                  name:   !input "entities_entity16_name"
                                  icon:   !input "entities_entity16_icon"
                                  page: entitypage02
                                  component: value08
                                - entity: !input "entities_entity17"
                                  name:   !input "entities_entity17_name"
                                  icon:   !input "entities_entity17_icon"
                                  page: entitypage03
                                  component: value01
                                - entity: !input "entities_entity18"
                                  name:   !input "entities_entity18_name"
                                  icon:   !input "entities_entity18_icon"
                                  page: entitypage03
                                  component: value02
                                - entity: !input "entities_entity19"
                                  name:   !input "entities_entity19_name"
                                  icon:   !input "entities_entity19_icon"
                                  page: entitypage03
                                  component: value03
                                - entity: !input "entities_entity20"
                                  name:   !input "entities_entity20_name"
                                  icon:   !input "entities_entity20_icon"
                                  page: entitypage03
                                  component: value04
                                - entity: !input "entities_entity21"
                                  name:   !input "entities_entity21_name"
                                  icon:   !input "entities_entity21_icon"
                                  page: entitypage03
                                  component: value05
                                - entity: !input "entities_entity22"
                                  name:   !input "entities_entity22_name"
                                  icon:   !input "entities_entity22_icon"
                                  page: entitypage03
                                  component: value06
                                - entity: !input "entities_entity23"
                                  name:   !input "entities_entity23_name"
                                  icon:   !input "entities_entity23_icon"
                                  page: entitypage03
                                  component: value07
                                - entity: !input "entities_entity24"
                                  name:   !input "entities_entity24_name"
                                  icon:   !input "entities_entity24_icon"
                                  page: entitypage03
                                  component: value08
                                - entity: !input "entities_entity25"
                                  name:   !input "entities_entity25_name"
                                  icon:   !input "entities_entity25_icon"
                                  page: entitypage04
                                  component: value01
                                - entity: !input "entities_entity26"
                                  name:   !input "entities_entity26_name"
                                  icon:   !input "entities_entity26_icon"
                                  page: entitypage04
                                  component: value02
                                - entity: !input "entities_entity27"
                                  name:   !input "entities_entity27_name"
                                  icon:   !input "entities_entity27_icon"
                                  page: entitypage04
                                  component: value03
                                - entity: !input "entities_entity28"
                                  name:   !input "entities_entity28_name"
                                  icon:   !input "entities_entity28_icon"
                                  page: entitypage04
                                  component: value04
                                - entity: !input "entities_entity29"
                                  name:   !input "entities_entity29_name"
                                  icon:   !input "entities_entity29_icon"
                                  page: entitypage04
                                  component: value05
                                - entity: !input "entities_entity30"
                                  name:   !input "entities_entity30_name"
                                  icon:   !input "entities_entity30_icon"
                                  page: entitypage04
                                  component: value06
                                - entity: !input "entities_entity31"
                                  name:   !input "entities_entity31_name"
                                  icon:   !input "entities_entity31_icon"
                                  page: entitypage04
                                  component: value07
                                - entity: !input "entities_entity32"
                                  name:   !input "entities_entity32_name"
                                  icon:   !input "entities_entity32_icon"
                                  page: entitypage04
                                  component: value08
                          - variables:
                              entity_page_index: "{{ (nspanel_event.page[-2:] | int(-1)) - 1 }}"
                              first_entity: "{{ entity_page_index * 8 }}"
                              last_entity: "{{ first_entity + 8 }}"
                          ##### Entity page - Label #####
                          - if: "{{ entity_pages_labels[entity_page_index].label | length > 0 }}"
                            then:
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: "{{ 'entity%02d_label' | format(entity_page_index + 1) }}"
                                  message: "{{ entity_pages_labels[entity_page_index].label }}"
                                continue_on_error: true
                              - *delay-default
                          ##### Entities #####
                          - repeat:
                              for_each: "{{ entity_pages_entities[first_entity:last_entity] }}"
                              sequence: &update-entity_page_entity
                                - if: "{{ repeat.item.entity is string and repeat.item.entity | length > 0 }}"
                                  then:
                                    - variables:
                                        repeat_item_state: "{{ states(repeat.item.entity) | default('unavailable') }}"
                                        repeat_item_icon: >
                                          {% if repeat.item.icon is string and repeat.item.icon | length > 0 %}{{ nextion.icons.all[repeat.item.icon.split(':')[1]] | default(repeat.item.icon) }}
                                          {% elif state_attr(repeat.item.entity, 'icon') | default('') not in ['unavailable', 'unknown', '', None] %}{{ nextion.icons.all[state_attr(repeat.item.entity, 'icon').split(':')[1]] | default(None) }}
                                          {% else %}{{ nextion.icons.blank }}
                                          {% endif %}
                                    - service: "{{ nextion.commands.set_entity }}"
                                      data:
                                        ent_id: "{{ repeat.item.page }}.{{ repeat.item.component }}"
                                        ent_icon: "{{ repeat_item_icon }}"
                                        ent_label: >-
                                          {%- if repeat.item.name | length > 0 -%} {{ repeat.item.name }}
                                          {%- elif repeat_item_state in ['unavailable', 'unknown', None] -%} {{ repeat.item.entity }}
                                          {%- else -%} {{ state_attr(repeat.item.entity, 'friendly_name') | default(mui[language].no_name) }}
                                          {%- endif -%}
                                        ent_value: "{{ repeat_item_state ~ ((state_attr(repeat.item.entity, 'unit_of_measurement') | default('')) if state_attr(repeat.item.entity, 'unit_of_measurement') else '') }}"
                                      continue_on_error: true

                      ## PAGE WEATHER (WEATHER01 to WEATHER05) ##
                      - alias: Weather pages
                        conditions: "{{ nspanel_event.page in nextion.pages.weatherpages }}"
                        sequence:
                          - variables:
                              weather_attribution: "{{ state_attr(weather_entity, 'attribution') if weather_entity is string }}"
                              weather_type: >
                                {% if not weather_attribution %} unavailable
                                {% elif 'AccuWeather'     in weather_attribution %} AccuWeather
                                {% elif 'OpenWeatherMap'  in weather_attribution %} OpenWeather
                                {% elif 'SMHI'            in weather_attribution %} SMHI
                                {% elif 'met.no'          in weather_attribution %} Met.no
                                {% elif 'OpenWeatherMap'  in weather_attribution %} OpenWeather
                                {% else %} Other
                                {% endif %}
                              weather_units:
                                hours_of_sun:               "{{ state_attr(weather_entity, 'hours_of_sun_unit')               | default('h') if weather_entity is string and state_attr(weather_entity, 'hours_of_sun_unit')               else 'h' }}"
                                precipitation:              "{{ state_attr(weather_entity, 'precipitation_unit')              | default('')  if weather_entity is string and state_attr(weather_entity, 'precipitation_unit') }}"
                                precipitation_probability:  "{{ state_attr(weather_entity, 'precipitation_probability_unit')  | default('%') if weather_entity is string and state_attr(weather_entity, 'precipitation_probability_unit')  else '%' }}"
                                pressure:                   "{{ state_attr(weather_entity, 'pressure_unit')                   | default('')  if weather_entity is string and state_attr(weather_entity, 'pressure_unit') }}"
                                #temperature:               "{{ state_attr(weather_entity, 'temperature_unit')                | default('¬∞') if weather_entity is string and state_attr(weather_entity, 'temperature_unit')                else '¬∞' }}"
                                thunderstorm_probability:   "{{ state_attr(weather_entity, 'thunderstorm_probability_unit')   | default('%') if weather_entity is string and state_attr(weather_entity, 'thunderstorm_probability_unit')   else '%' }}"
                                uv_index:                   "{{ state_attr(weather_entity, 'uv_index_unit')                   | default('')  if weather_entity is string and state_attr(weather_entity, 'uv_index_unit')   }}"
                                #visibility:                "{{ state_attr(weather_entity, 'visibility_unit')                 | default('')  if weather_entity is string and state_attr(weather_entity, 'visibility_unit') }}"
                                wind_speed:                 "{{ state_attr(weather_entity, 'wind_speed_unit')                 | default('')  if weather_entity is string and state_attr(weather_entity, 'wind_speed_unit') }}"
                              page_name: "{{ nspanel_event.page }}"
                              page_index: "{{ (page_name[-2:] | int(0)) - 1 }}"

                          ##### Display relative day #####
                          - service: "{{ nextion.commands.text_printf }}"
                            data:
                              component: "{{ page_name }}.day"
                              message: "{{ (dict.values(mui[language].relative_day) | list)[page_index] }}"
                            continue_on_error: true
                          - *delay-default

                          ##### Display date (long) #####
                          - service: "{{ nextion.commands.text_printf }}"
                            data:
                              component: "{{ page_name }}.date"
                              message: "{{ (dict.values(mui[language].weekdays) | list)[(now() + timedelta(days= (page_index))).weekday()] ~ ', ' ~ as_timestamp(now() + timedelta(days= (page_index))) | timestamp_custom(date_format) }}"
                            continue_on_error: true
                          - *delay-default

                          ##### Display weather data only when available #####
                          - variables:
                              forecast_day: >
                                {{ state_attr(weather_entity, 'forecast') | default([])
                                  | selectattr('datetime', 'defined')
                                  | selectattr('datetime', '>=', (today_at('00:00') + timedelta(days=  page_index   )) | as_timestamp | timestamp_local )
                                  | selectattr('datetime', '<',  (today_at('00:00') + timedelta(days= (page_index+1))) | as_timestamp | timestamp_local )
                                  | list
                                }}
                          - if: "{{ forecast_day | count > 0 or page_index == 0 }}"
                            then: # Display forecast
                              - variables:
                                  metnoweather: "{{ weather_type == 'Met.no' }}"
                                  metnoweather_hourly_forecast: "{{ state_attr(weather_entity ~ '_hourly', 'forecast') if metnoweather and states(weather_entity ~ '_hourly') not in ['unavailable', 'unknown', None] }}"
                                  forecast_day: >
                                    {% if forecast_day | count > 0 %}{{ forecast_day }}
                                    {% elif metnoweather and metnoweather_hourly_forecast %}
                                      {{ metnoweather_hourly_forecast
                                        | selectattr('datetime', 'defined')
                                        | selectattr('datetime', '>=', (today_at('00:00') + timedelta(days=  page_index   )) | as_timestamp | timestamp_local )
                                        | selectattr('datetime', '<',  (today_at('00:00') + timedelta(days= (page_index+1))) | as_timestamp | timestamp_local )
                                        | list
                                      }}
                                    {% endif %}
                              - variables:
                                  forecast_day: >
                                    {% if forecast_day | count > 0 %}{{ forecast_day }}
                                    {% elif page_index == 0 %}
                                      [ 
                                        {
                                          "condition": "{{ states(weather_entity) }}",
                                          "temperature": "{{ state_attr(weather_entity, 'temperature') }}",
                                          "wind_speed": "{{ state_attr(weather_entity, 'wind_speed') }}"
                                        }
                                      ]
                                    {% endif %}
                              - if: "{{ forecast_day | count > 0 }}"
                                then:
                                  - variables:
                                      accuweather: "{{ weather_type == 'AccuWeather' }}"
                                      accuweather_day_name: "{{ 'day_' ~ page_index }}"
                                      accuweather_sensor_prefix: "{{ 'sensor.' ~ (weather_entity | replace('weather.','')) ~ '_' }}"
                                      accuweather_sensor_sufix: "{{ '_' ~ page_index ~ 'd' }}"
                                      temp_min: >
                                        {{ forecast_day | selectattr('templow', 'defined') | map(attribute='templow') | map('float') | list | min
                                          if forecast_day | selectattr('templow', 'defined') | map(attribute='templow') | map('float') | list | count > 0
                                          else forecast_day | selectattr('temperature', 'defined') | map(attribute='temperature') | map('float') | list | min | default('unknown')
                                        }}
                                      temp_max:                  "{{ forecast_day | selectattr('temperature',               'defined') | map(attribute='temperature')               | map('float') | list | max   if forecast_day | selectattr('temperature',               'defined') | map(attribute='temperature')               | map('float') | list | count > 0 }}"
                                      condition:                 "{{ forecast_day | selectattr('condition',                 'defined') | map(attribute='condition')                                | list | first if forecast_day | selectattr('condition',                 'defined') | map(attribute='condition')                                | list | count > 0 }}"
                                      precipitation:             "{{ forecast_day | selectattr('precipitation',             'defined') | map(attribute='precipitation')             | map('float') | list | sum   if forecast_day | selectattr('precipitation',             'defined') | map(attribute='precipitation')             | map('float') | list | count > 0 }}"
                                      precipitation_probability: "{{ forecast_day | selectattr('precipitation_probability', 'defined') | map(attribute='precipitation_probability') | map('float') | list | max   if forecast_day | selectattr('precipitation_probability', 'defined') | map(attribute='precipitation_probability') | map('float') | list | count > 0 }}"
                                      pressure:                  "{{ forecast_day | selectattr('pressure',                  'defined') | map(attribute='pressure')                  | map('float') | list | max   if forecast_day | selectattr('pressure',                  'defined') | map(attribute='pressure')                  | map('float') | list | count > 0 }}"
                                      wind_speed:                "{{ forecast_day | selectattr('wind_speed',                'defined') | map(attribute='wind_speed')                | map('float') | list | max   if forecast_day | selectattr('wind_speed',                'defined') | map(attribute='wind_speed')                | map('float') | list | count > 0 }}"
                                      hours_of_sun:             "{{ states(accuweather_sensor_prefix ~ 'hours_of_sun'                 ~ accuweather_sensor_sufix) | default('unknown') if accuweather else (forecast_day | selectattr('hours_of_sun',             'defined') | map(attribute='hours_of_sun')             | map('float') | list | sum if forecast_day | selectattr('hours_of_sun',             'defined') | map(attribute='hours_of_sun')             | map('float') | list | count > 0) }}"
                                      uv_index:                 "{{ states(accuweather_sensor_prefix ~ 'uv_index'                     ~ accuweather_sensor_sufix) | default('unknown') if accuweather else (forecast_day | selectattr('uv_index',                 'defined') | map(attribute='uv_index')                 | map('float') | list | max if forecast_day | selectattr('uv_index',                 'defined') | map(attribute='uv_index')                 | map('float') | list | count > 0) }}"
                                      thunderstorm_probability: "{{ states(accuweather_sensor_prefix ~ 'thunderstorm_probability_day' ~ accuweather_sensor_sufix) | default('unknown') if accuweather else (forecast_day | selectattr('thunderstorm_probability', 'defined') | map(attribute='thunderstorm_probability') | map('float') | list | max if forecast_day | selectattr('thunderstorm_probability', 'defined') | map(attribute='thunderstorm_probability') | map('float') | list | count > 0) }}"
                                      parameters:
                                        - name: hours_of_sun
                                          visibility: "{{ is_number(hours_of_sun) }}"
                                          value: "{{ (hours_of_sun | round(0) ~ ' ' ~ weather_units.hours_of_sun) if is_number(hours_of_sun) }}"
                                          icon: "{{ nextion.icons.weather.sun }}"
                                        - name: thunderstorm_probability
                                          visibility: "{{ is_number(thunderstorm_probability) }}"
                                          value: "{{ (thunderstorm_probability | round(0) ~ weather_units.thunderstorm_probability) if is_number(thunderstorm_probability) }}"
                                          icon: "{{ nextion.icons.weather.lightning }}"
                                        - name: precipitation
                                          visibility: "{{ is_number(precipitation) or is_number(precipitation_probability) }}"
                                          value: >
                                            {{ (precipitation | round(0) ~ ' ' ~ weather_units.precipitation) if is_number(precipitation) }}
                                            {{ '-' if is_number(precipitation) and is_number(precipitation_probability) }}
                                            {{ (precipitation_probability | round(0) ~ weather_units.precipitation_probability) if is_number(precipitation_probability) }}
                                          icon: "{{ nextion.icons.weather.rain }}"
                                        - name: uv_index
                                          visibility: "{{ is_number(uv_index) }}"
                                          value: >
                                            {{ (state_attr(accuweather_sensor_prefix ~ 'uv_index' ~ accuweather_sensor_sufix, 'level') | default(None) ~ ': ') if weather_type == 'AccuWeather' }}
                                            {{ (uv_index | round(0) ~ weather_units.uv_index) if is_number(uv_index) }}
                                          icon: "{{ nextion.icons.weather.protect }}"
                                        - name: wind_speed
                                          visibility: "{{ is_number(wind_speed) }}"
                                          value: "{{ (wind_speed | round(0) ~ ' ' ~ weather_units.wind_speed) if is_number(wind_speed) }}"
                                          icon: "{{ nextion.icons.weather.wind }}"
                                        - name: pressure
                                          visibility: "{{ is_number(pressure) }}"
                                          value: "{{ (pressure | round(0) ~ ' ' ~ weather_units.pressure) if is_number(pressure) }}"
                                          icon: "{{ nextion.icons.weather.gauge }}"

                                  ##### Display weather PIC when available
                                  - if: "{{ condition not in ['unknown', None] }}"
                                    then:
                                    - service: "{{ nextion.commands.printf }}"
                                      data:
                                        cmd: "{{ page_name }}.weather_icon.pic={{ nextion.pics.weather[states(weather_entity) | default('unavailable') if weather_entity is string else 'unavailable'] | default(None) if condition == 'unknown' and page_name == nextion.pages.weatherpages[0] else nextion.pics.weather[condition] | default(None) }}"
                                      continue_on_error: true
                                    - *delay-default

                                  ##### Display temperature min/max when available
                                  - variables:
                                      temperature_string: >
                                          {{ (temp_min | round(0) ~ temperature_units) if is_number(temp_min) }}
                                          {{ '/' if is_number(temp_min) and is_number(temp_max) and temp_min != temp_max }}
                                          {{ (temp_max | round(0) ~ temperature_units) if is_number(temp_max) and temp_min != temp_max }}
                                  - if: "{{ (is_number(temp_min) or is_number(temp_max)) and temperature_string is string and temperature_string | length > 0 }}"
                                    then:
                                      - service: "{{ nextion.commands.text_printf }}"
                                        data:
                                          component: "{{ page_name }}.temperature" ### Temperature MIN/MAX ###
                                          message: "{{ temperature_string }}"
                                        continue_on_error: true
                                      - *delay-default

                                  ##### fields 1 to 5 (Parameters) #####
                                  - repeat:
                                      for_each: "{{ (parameters | selectattr('visibility', 'eq', true) | list)[:5] }}"
                                      sequence:
                                      - service: "{{ nextion.commands.text_printf }}"
                                        data:
                                          component: "{{ page_name }}.value0{{ repeat.index }}"
                                          message: "{{ repeat.item.value }}"
                                        continue_on_error: true
                                      - *delay-default
                                      - service: "{{ nextion.commands.text_printf }}"
                                        data:
                                          component: "{{ page_name }}.value0{{ repeat.index }}_icon"
                                          message: "{{ repeat.item.icon }}"
                                        continue_on_error: true
                                      - *delay-default
                                else: &forecast_unavailable
                                  - service: "{{ nextion.commands.text_printf }}"
                                    data:
                                      component: "{{ page_name }}.value01"
                                      message: "{{ mui[language].unavailable }}"
                                    continue_on_error: true
                                  - *delay-default
                            else: *forecast_unavailable

                      ## PAGE NOTIFICATION ##
                      - alias: Notification page
                        conditions: "{{ nspanel_event.page == nextion.pages.notification }}"
                        sequence:
                          - service: "{{ nextion.commands.text_printf }}"
                            data:
                              component: notification.notifi_text01
                              message: "{{ states(notification_text) | default(mui[language].unavailable) if notification_text is string else mui[language].unavailable }}"
                            continue_on_error: true
                          - *delay-default
                          - service: "{{ nextion.commands.text_printf }}"
                            data:
                              component: notification.notifi_label
                              message: "{{ states(notification_label) | default(mui[language].unavailable) if notification_label is string else mui[language].unavailable }}"
                            continue_on_error: true

                      ## PAGE QR Code ##
                      - alias: QRCode page
                        conditions: "{{ nspanel_event.page == nextion.pages.qrcode }}"
                        sequence:
                          - variables:
                              qrcode_label: !input "qrcode_label"
                              qrcode_value: !input "qrcode_value"
                          - if: "{{ qrcode_label | length > 0 }}"
                            then:
                              - service: "{{ nextion.commands.text_printf }}"
                                data:
                                  component: "qrcode_label"
                                  message: "{{ qrcode_label }}"
                                continue_on_error: true
                              - *delay-default
                          - service: "{{ nextion.commands.text_printf }}"
                            data:
                              component: "qrcode_value"
                              message: "{{ qrcode_value }}"
                            continue_on_error: true

                      ## PAGE SETTINGS ##
                      #- alias: Settings page
                      #  conditions: "{{ nspanel_event.page == nextion.pages.settings }}"
                      #  sequence:

                      ## PAGE BOOT ##
                      #- alias: Boot page
                      #  conditions: "{{ nspanel_event.page == nextion.pages.boot }}"
                      #  sequence:

                      ## PAGE SCREENSAVER ##
                      #- alias: Screensaver page
                      #  conditions: "{{ nspanel_event.page == nextion.pages.screensaver }}"
                      #  sequence:

              - alias: Page close # general
                conditions: '{{ nspanel_event.component == "close" and nspanel_event.value == "release" }}'
                sequence:
                  - *variables-settings_entity
                  - service: "{{ nextion.commands.printf }}"
                    data:
                      cmd: "page {{ settings_entity_dict.page if settings_entity_dict.page is defined else nextion.pages.home }}"
                    continue_on_error: true

              - alias: lightsetting # rgb_color, brightness, color_temp
                conditions: '{{ nspanel_event.component in ["rgb_color", "brightness_pct", "color_temp"] }}'
                sequence:
                  - *variables-settings_entity
                  - service: light.turn_on
                    data:
                      entity_id: "{{ settings_entity_dict.entity }}"
                      "{{ nspanel_event.component }}": "{{ nspanel_event.value }}"
                    continue_on_error: true

              - alias: coversetting position
                conditions: '{{ nspanel_event.component == "cover_position" }}'
                sequence:
                  - *variables-settings_entity
                  - service: "cover.set_cover_position"
                    data:
                      entity_id: "{{ settings_entity_dict.entity }}"
                      position: "{{ nspanel_event.value }}"
                    continue_on_error: true

              - alias: coversetting open close stop
                conditions: '{{ nspanel_event.component in ["open_cover", "close_cover", "stop_cover"] }}'
                sequence:
                  - *variables-settings_entity
                  - service: "cover.{{ nspanel_event.component }}"
                    data:
                      entity_id: "{{ settings_entity_dict.entity }}"
                    continue_on_error: true

              - alias: climate hotwater
                conditions: '{{ nspanel_event.component == "hotwater" and nspanel_event.value == "release" }}'
                sequence:
                  - service: >-
                      {% if hotwatercharge is match 'switch.' %}
                        switch.toggle
                      {% elif hotwatercharge is match 'input_boolean.' %}
                        input_boolean.toggle
                      {% endif %}
                    data:
                      entity_id: "{{ hotwatercharge }}"
                    continue_on_error: true

              - alias: climate heating
                conditions: '{{ nspanel_event.component == "heating" and nspanel_event.value == "release" }}'
                sequence:
                  - *variables-settings_entity
                  - if: "{{ settings_entity_dict.entity is string and states(settings_entity_dict.entity) == 'off' }}"
                    then:
                      - service: climate.turn_on
                        data:
                          entity_id: "{{ settings_entity_dict.entity }}"
                        continue_on_error: true
                    else:
                      - service: climate.turn_off
                        data:
                          entity_id: "{{ settings_entity_dict.entity }}"
                        continue_on_error: true

              - alias: climate increasetemp decreasetemp
                conditions: '{{ nspanel_event.component in ["decreasetemp", "increasetemp"] and nspanel_event.value == "release" }}'
                sequence:
                  - *variables-settings_entity
                  - if: "{{ settings_entity_dict.entity is string and states(settings_entity_dict.entity) != 'off' }}"
                    then:
                      - variables:
                          delta: "{{ +0.5 if nspanel_event.component == 'increasetemp' else -0.5 }}"
                      - if: "{{ climate_optimistic == true }}" ## TODO - remove from here
                        then:
                          - variables:
                              current_setpoint: "{{ states(display_target_temperature) | default('unavailable') if display_target_temperature is string else 'unavailable' }}"
                          - if: "{{ is_number(current_setpoint) }}"
                            then:
                              - service: "{{ nextion.commands.thermostat_cycle }}"
                                data:
                                  value: "{{ (current_setpoint + delta) | round(1) }}"
                                continue_on_error: true
                        else:
                          - variables:
                              current_setpoint: "{{state_attr(settings_entity_dict.entity, 'temperature') | default('unavailable') if settings_entity_dict.entity is string else 'unavailable' }}"
                          - if: "{{ is_number(current_setpoint) }}"
                            then:
                              - service: climate.set_temperature
                                data:
                                  entity_id: "{{ settings_entity_dict.entity }}"
                                  #hvac_mode: 'heat'
                                  temperature: "{{ (current_setpoint + delta) | round(1) }}"
                                continue_on_error: true

              - alias: climate climateslider
                conditions: '{{ nspanel_event.component == "climateslider" }}'
                sequence:
                  - *variables-settings_entity
                  - if: "{{ settings_entity_dict.entity is string and states(settings_entity_dict.entity) != 'off' }}"
                    then:
                      - variables:
                          climateslider: "{{ nspanel_event.value | int(-1) }}"
                          new_setpoint: "{{ (13.0 + (climateslider * 0.5)) if climateslider >= 0 and climateslider <= 27 }}"
                      - if: "{{ climate_optimistic == true }}" ## TODO - remove from here
                        then:
                          - service: "{{ nextion.commands.thermostat_cycle }}"
                            data:
                              value: "{{ new_setpoint }}"
                            continue_on_error: true
                        else:
                          - service: climate.set_temperature
                            data:
                              entity_id: "{{ settings_entity_dict.entity }}"
                              #hvac_mode: 'heat'
                              temperature: "{{ new_setpoint }}"
                            continue_on_error: true

              - alias: Button page - Short press
                conditions:
                  - "{{ nspanel_event.page in nextion.pages.buttonpages }}"
                  - "{{ nspanel_event.value == 'release' }}"
                sequence:
                  - *variables-page_buttons
                  - variables:
                      ##### Entity - Page Button - Toggle Entity #####
                      last_click_button: "{{ button_pages_buttons | selectattr('page', 'defined') | selectattr('page', 'eq', nspanel_event.page) | selectattr('component', 'defined') | selectattr('component', 'eq', nspanel_event.component) | list }}"
                  - condition: "{{ last_click_button | count >= 0 }}"
                  - variables:
                      last_click_button: "{{ last_click_button[0] }}"
                      entity_domain: "{{ (last_click_button.entity.split('.')[0] | default('unknown')) if last_click_button.entity is string and last_click_button.entity | length > 0 and last_click_button.entity.split('.') | count > 0 else 'unknown' }}"
                  - condition: "{{ entity_domain not in ['unknown', 'person', 'binary_sensor', 'sensor'] }}"
                  - if: "{{ entity_domain == 'climate' }}"
                    then:
                      - service: "{{ nextion.commands.set_settings_entity }}"
                        data:
                          entity: "{{ last_click_button }}"
                        continue_on_error: true
                    else:
                      - if: "{{ last_click_button.confirm }}"
                        then:
                          - variables:
                              btn_entity_name: >-
                                {%- if state_attr(last_click_button.entity, 'friendly_name') != None -%} {{ state_attr(last_click_button.entity, 'friendly_name') }}
                                {%- elif state_attr(last_click_button.entity, 'name') != None -%} {{ state_attr(last_click_button.entity, 'name') }}
                                {%- else -%} 'unknown'
                                {%- endif -%}
                          #### turn on switch confirmation_message
                          - service: switch.turn_on
                            data:
                              entity_id: "{{ confirmation_message }}"
                            continue_on_error: true
                          - service: "{{ nextion.commands.printf }}"
                            data:
                              cmd: "page {{ nextion.pages.notification }}"
                            continue_on_error: true
                          - service: "{{ nextion.commands.text_printf }}"
                            data:
                              component: notification.notifi_text01
                              message: "{{ btn_entity_name }}"
                            continue_on_error: true
                          - *delay-default
                          - service: "{{ nextion.commands.text_printf }}"
                            data:
                              component: notification.notifi_label
                              message: "{{ mui[language].please_confirm }}"
                            continue_on_error: true
                          - wait_template: "{{ nspanel_event.component in ['notificationacceptrelease', 'notificationclearrelease', 'homepage'] }}"
                            timeout:
                              seconds: 10
                            continue_on_timeout: true
                          - choose:
                            - conditions: "{{ nspanel_event.component == 'notificationacceptrelease' }}"
                              sequence:
                                - service: "{{ nextion.commands.printf }}"
                                  data:
                                    cmd: "page {{ nspanel_event.page }}"
                                  continue_on_error: true
                                - service: switch.turn_off
                                  data:
                                    entity_id: "{{ confirmation_message }}"
                                  continue_on_error: true
                                - &service-button_changed
                                  service: >-
                                    {% if entity_domain in ['light', 'switch', 'cover', 'input_boolean', 'automation', 'fan'] %}
                                      {{ entity_domain }}.toggle
                                    {% elif entity_domain in ['button', 'input_button'] %}
                                      {{ entity_domain }}.press
                                    {% elif entity_domain in ['scene', 'script'] %}
                                      {{ entity_domain }}.turn_on
                                    {% else %}
                                      homeassistant.update_entity
                                    {% endif %}
                                  data:
                                    entity_id: "{{ last_click_button.entity }}"
                                  continue_on_error: true
                            - conditions: "{{ nspanel_event.component == 'notificationclearrelease' }}"
                              sequence:
                                - service: "{{ nextion.commands.printf }}"
                                  data:
                                    cmd: "page {{ nspanel_event.page }}"
                                  continue_on_error: true
                                - service: switch.turn_off
                                  data:
                                    entity_id: "{{ confirmation_message }}"
                                  continue_on_error: true
                            - conditions: "{{ nspanel_event.component == 'homepage' }}"
                              sequence:
                                - service: switch.turn_off
                                  data:
                                    entity_id: "{{ confirmation_message }}"
                                  continue_on_error: true
                            default:
                              - service: switch.turn_off
                                data:
                                  entity_id: "{{ confirmation_message }}"
                                continue_on_error: true
                              - service: "{{ nextion.commands.printf }}"
                                data:
                                  cmd: "page {{ nextion.pages.home }}"
                                continue_on_error: true
                        else:
                          - *service-button_changed

              - alias: Jump to climate page
                conditions:
                  - "{{ nspanel_event.page == nextion.pages.home }} "
                  - '{{ nspanel_event.component == "climate" }}'
                  - "{{ climate | length > 0 }} "
                sequence:
                  - service: "{{ nextion.commands.set_settings_entity }}"
                    data:
                      entity: "{{ nspanel_event }}"
                    continue_on_error: true
                  - service: "{{ nextion.commands.printf }}"
                    data:
                      cmd: "page {{ nextion.pages.climate }}"
                    continue_on_error: true

              - alias: Jump to weather page
                conditions:
                  - "{{ nspanel_event.page == nextion.pages.home }}"
                  - '{{ nspanel_event.component == "weather" }}'
                sequence:
                  - service: "{{ nextion.commands.printf }}"
                    data:
                      cmd: "page {{ nextion.pages.weatherpages[0] }}"
                    continue_on_error: true

              - alias: Jump to QR code page
                conditions:
                  - "{{ qrcode_enabled == true }}"
                  - "{{ nspanel_event.page == nextion.pages.home }}"
                  - '{{ nspanel_event.component == "button05" }}'
                sequence:
                  - service: "{{ nextion.commands.printf }}"
                    data:
                      cmd: "page {{ nextion.pages.qrcode }}"
                    continue_on_error: true

              - alias: Jump to entity page
                conditions:
                  - "{{ entitypages_enabled == true }}"
                  - "{{ nspanel_event.page == nextion.pages.home }}"
                  - '{{ nspanel_event.component == "button06" }}'
                sequence:
                  - service: "{{ nextion.commands.printf }}"
                    data:
                      cmd: "page {{ nextion.pages.entitypages[0] }}"
                    continue_on_error: true

              - alias: Jump to notification page
                conditions:
                  - "{{ nspanel_event.page == nextion.pages.home }}"
                  - '{{ nspanel_event.component == "button04" }}'
                  - "{{ notification_text is string and states(notification_text) | length > 0 }}"
                sequence:
                  - service: "{{ nextion.commands.printf }}"
                    data:
                      cmd: "page {{ nextion.pages.notification }}"
                    continue_on_error: true

              - alias: Show button - Notification clear
                conditions:
                  - "{{ nspanel_event.page == nextion.pages.notification }}"
                  - '{{ nspanel_event.component == "clear" }}'
                  - "{{ confirmation_message is string and states(confirmation_message) | default('unavailable') != 'on' }}"
                sequence:
                  - service: switch.turn_off
                    data:
                      entity_id: "{{ notification_unread }}"
                    continue_on_error: true
                  - service: "{{ nextion.commands.printf }}"
                    data:
                      cmd: "page {{ nextion.pages.home }}"
                    continue_on_error: true

              - alias: Show button - Notification accept
                conditions:
                  - "{{ nspanel_event.page == nextion.pages.notification }}"
                  - '{{ nspanel_event.component == "accept" }}'
                  - "{{ confirmation_message is string and states(confirmation_message) | default('unavailable') != 'on' }}"
                sequence:
                  - service: switch.turn_off
                    data:
                      entity_id: "{{ notification_unread }}"
                    continue_on_error: true
                  - service: "{{ nextion.commands.notification_clear }}"
                    data: {}
                    continue_on_error: true
                  - service: "{{ nextion.commands.printf }}"
                    data:
                      cmd: "page {{ nextion.pages.home }}"
                    continue_on_error: true



      ##### BOOT NSPANEL - automation reload #####
      - alias: Automation reloaded
        conditions:
          - condition: trigger
            id: automation_reloaded
        sequence:
          - choose:
            ## PAGE HOME ##
            - conditions: "{{ nspanel_event.page == nextion.pages.home }}"
              sequence: *refresh_page_home
            
            ## PAGE BUTTON PAGES 01 - 04 ##
            - conditions: "{{ nspanel_event.page in nextion.pages.buttonpages }}"
              sequence: *refresh_page_buttonpage

            ## ENTITY PAGES ##
            - conditions: "{{ nspanel_event.page in nextion.pages.entitypages }}"
              sequence: *refresh-entity_pages

      ##### UPDATE BUTTONS AND PAGES -  button page / lightsettings page / coversettings page  #####
      - alias: "Update buttons & pages"
        conditions:
          - condition: trigger
            id:
              - current_state_entity01
              - current_state_entity02
              - current_state_entity03
              - current_state_entity04
              - current_state_entity05
              - current_state_entity06
              - current_state_entity07
              - current_state_entity08
              - current_state_entity09
              - current_state_entity10
              - current_state_entity11
              - current_state_entity12
              - current_state_entity13
              - current_state_entity14
              - current_state_entity15
              - current_state_entity16
              - current_state_entity17
              - current_state_entity18
              - current_state_entity19
              - current_state_entity20
              - current_state_entity21
              - current_state_entity22
              - current_state_entity23
              - current_state_entity24
              - current_state_entity25
              - current_state_entity26
              - current_state_entity27
              - current_state_entity28
              - current_state_entity29
              - current_state_entity30
              - current_state_entity31
              - current_state_entity32
          - "{{ trigger.to_state.state not in ['unavailable', 'unknown'] }}"
        sequence:
          - alias: choose current page
            choose:
              - alias: buttonpage
                conditions: '{{ nspanel_event.page in nextion.pages.buttonpages }}'
                sequence:
                  - *variables-page_buttons
                  - repeat:
                      for_each: "{{ button_pages_buttons | selectattr('page', 'defined') | selectattr('page', 'eq', nspanel_event.page) | selectattr('component', 'defined') | selectattr('component', 'eq', nspanel_event.component) | selectattr('entity', 'defined') | selectattr('entity', 'eq', trigger.entity_id) | list }}"
                      sequence: *display-button_page_button
                  ##### release button/scene (stateless) #####
                  - if: "{{ trigger.to_state.entity_id is match 'button.' or trigger.to_state.entity_id is match 'input_button.' or trigger.to_state.entity_id is match 'scene.' }}"
                    then:
                      - delay:
                          milliseconds: "1000"
              - alias: page climate
                conditions: '{{ nspanel_event.page == nextion.pages.climate and trigger.entity_id is match "climate." }}'
                sequence:
                  - *variables-settings_entity
                  - if: "{{ trigger.entity_id == settings_entity_dict.entity }}"
                    then:
                      - variables:
                          hvac_mode: "{{ states(settings_entity_dict.entity) | default('unavailable') if settings_entity_dict.entity is string else 'unavailable' }}"
                          heating_state: "{{ mui[language].climate.states.off if hvac_mode == 'off' else mui[language].climate.states.on }}"
                          heating_bt_pic: "{{ nextion.pics.heating.button.off if hvac_mode == 'off' else nextion.pics.heating.button.on }}"
                      - service: "{{ nextion.commands.text_printf }}"
                        data:
                          component: heating_state
                          message: "{{ heating_state }}"
                        continue_on_error: true
                      - *delay-default
                      - service: "{{ nextion.commands.printf }}"
                        data:
                          cmd: heating_bt_pic.pic={{ heating_bt_pic }}
                        continue_on_error: true

      ##### LONG PRESS BUTTON PAGE - save entity for settings pages #####
      - alias: Button page - Long press
        conditions:
          - condition: trigger
            id: long_press
          - "{{ nspanel_event.page in nextion.pages.buttonpages }}"
        sequence:
          - *variables-page_buttons
          - variables:
              last_click_button: "{{ button_pages_buttons | selectattr('component', 'eq', nspanel_event.page ~ '.' ~ nspanel_event.component) | list }}"
          - if: "{{ last_click_button | count > 0}}"
            then:
              - service: "{{ nextion.commands.set_settings_entity }}"
                data:
                  entity: "{{ last_click_button[0] }}"
                continue_on_error: true

      ##### TRIGGER - HOME PAGE ######

      ##### HOME PAGE - Values #####
      - alias: Home page - Values
        conditions:
          - condition: trigger
            id:
              - home_value01_state
              - home_value02_state
              - home_value03_state
          - "{{ nspanel_event.page == nextion.pages.home }}"
        sequence:
          - *variables-home_page_values
          - repeat:
              for_each: "{{ home_page_values | selectattr('entity', 'defined') | selectattr('entity', 'eq', trigger.entity_id) | list }}"
              sequence:
                - *display-home_page_value

      ##### HOME PAGE - Status bar #####
      - alias: Home page - status bar
        conditions:
          - condition: trigger
            id: 
              - relay01_state
              - relay02_state
              - climate_state
              - chip01_state
              - chip02_state
              - chip03_state
              - chip04_state
              - chip05_state
              - chip06_state
              - chip07_state
          - "{{ nspanel_event.page == nextion.pages.home and trigger.event.data.new_state.state not in ['unavailable', 'unknown'] }}"
        sequence:
          - *variables-home_page_status_bar
          - repeat:
              for_each: "{{ home_page_status_bar | selectattr('entity', 'defined') | selectattr('entity', 'eq', trigger.event.data.entity_id) | list }}"
              sequence:
                - *display-home_page_status_bar

      #### SHOW BUTTON - notification ####
      - alias: Show button - Notification
        conditions:
          - condition: trigger
            id:
              - notification_text_state
              - notification_unread_state
          - condition: template
            value_template: "{{ nspanel_event.page == nextion.pages.home and trigger.event.data.new_state.state not in ['unavailable', 'unknown', None] }}"
        sequence:
          - alias: "Set notifiy pic"
            variables:
              notification_text_state: "{{ states(notification_text) | default('unavailable') if notification_text is string else 'unavailable' }}"
              notification_text_available: "{{ notification_text_state not in ['unavailable', 'unknown', None] }}"
              notification_unread_state: "{{ states(notification_unread) | default('unavailable') if notification_unread is string else 'unavailable' }}"
              set_button04_icon: "{{ nextion.icons.all[page_home.buttons[3].icon.split(':')[1]] | default(page_home.buttons[3].icon if page_home.buttons[3].icon is string else '\U0000E2D5') if notification_unread_state in ['on', 'off'] and notification_text_available else nextion.icons.blank }}"
              set_button04_icon_font: >
                {{
                  (page_home.buttons[3].color_rgb[notification_unread_state] if is_number(page_home.buttons[3].color_rgb[notification_unread_state]) else ((page_home.buttons[3].color_rgb[notification_unread_state][0] //(2**3)) *(2**11))+((page_home.buttons[3].color_rgb[notification_unread_state][1] //(2**2)) *(2**5))+(page_home.buttons[3].color_rgb[notification_unread_state][2] //(2**3)))
                  if notification_unread_state in ['on', 'off'] and notification_text_available
                  else nextion.colors.grey_light
                }}
          ##### SET ICON Font - Notify #####
          - *delay-default
          - service: "{{ nextion.commands.text_printf }}"
            data:
              component: home.button04_icon
              message: "{{ set_button04_icon }}"
            continue_on_error: true

          ##### SET ICON Font Color - Notify #####
          - *delay-default
          - service: "{{ nextion.commands.font_color }}"
            data:
              component: home.button04_icon
              message: "{{ set_button04_icon_font }}"
            continue_on_error: true

      ##### BUTTON - press #####
      - alias: Button - Press
        conditions:
          - condition: trigger
            id: 
              - left_button_press
              - right_button_press
        sequence:
          - variables:
              button_context: "{{ page_home.hardware.buttons.left if trigger.id == 'left_button_press' else page_home.hardware.buttons.right }}"
          - wait_template: "{{ is_state(left_button if trigger.id == 'left_button_press' else right_button, 'off') }}"
            timeout: !input hold_delay
            continue_on_timeout: true
          - if: "{{ not wait.completed }}"
            then: # Hold
              - choose:
                  - conditions: "{{ button_context.hold_select == 'Default' and button_context.entity | length > 0 }}"
                    sequence:
                      - service: "{{ nextion.commands.set_settings_entity }}"
                        data:
                          entity: "{{ button_context }}"
                        continue_on_error: true
                  - conditions: "{{ button_context.hold_select == 'Custom Action' and trigger.id == 'left_button_press' }}"
                    sequence: !input left_button_hold_custom_action
                  - conditions: "{{ button_context.hold_select == 'Custom Action' and trigger.id == 'right_button_press' }}"
                    sequence: !input right_button_hold_custom_action
            else: # Single Click
              - condition: template
                value_template: "{{ button_context.entity | length > 0 }}"
              - variables:
                  button_domain: "{{ (button_context.entity.split('.')[0] | default('unknown')) if button_context.entity | length > 0 else 'unknown' }}"
              - service: >
                  {% if button_domain in ['light', 'switch', 'cover', 'input_boolean', 'automation', 'fan'] %}
                    {{ button_domain }}.toggle
                  {% elif button_domain in ['button', 'input_button'] %}
                    {{ button_domain }}.press
                  {% elif button_domain in ['scene', 'script'] %}
                    {{ button_domain }}.turn_on
                  {% else %}
                    homeassistant.update_entity
                  {% endif %}
                data:
                  entity_id: "{{ button_context.entity }}"
                continue_on_error: true

      ##### BUTTON - state #####
      - alias: Button - State
        conditions:
          - condition: trigger
            id: 
              - left_button_state
              - right_button_state
          - condition: template
            value_template: "{{ nspanel_event.page == nextion.pages.home }}"
        sequence:
          - variables:
              # Hardware Button PIC
              current_hardware_button_state: "{{ nextion.pics.hardware.button[trigger.to_state.state] }}"
          ##### SET hardware Button PIC on Home Page ####
          - service: "{{ nextion.commands.printf }}"
            data:
              cmd: "home.{{ 'left' if trigger.id == 'left_button_state' else 'right'}}_bt_pic.pic={{ current_hardware_button_state }}"
            continue_on_error: true

      ##### DATE AND TIME #####
      - alias: "Date & Time"
        conditions:
          - condition: trigger
            id: time_state
          - condition: template
            value_template: "{{ nspanel_event.page == nextion.pages.home }}"
        sequence:
          ### TIME Font Color ###
          - *delay-default
          - service: "{{ nextion.commands.font_color }}"
            data:
              component: home.time
              message: "{{ page_home.general.time.label.color_rgb if is_number(page_home.general.time.label.color_rgb) else ((page_home.general.time.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.time.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.time.label.color_rgb[2] //(2**3)) }}"
            continue_on_error: true
          ### TIME Font ###
          - service: "{{ nextion.commands.text_printf }}"
            data:
              component: home.time
              message: "{{ time }}"
            continue_on_error: true
          ### TIME Meridiem Font Color ###
          - *delay-default
          - service: "{{ nextion.commands.font_color }}"
            data:
              component: home.meridiem
              message: "{{ page_home.general.time.label.color_rgb if is_number(page_home.general.time.label.color_rgb) else ((page_home.general.time.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.time.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.time.label.color_rgb[2] //(2**3)) }}"
            continue_on_error: true
          ### TIME Meridiem Font ###
          - *delay-default
          - service: "{{ nextion.commands.text_printf }}"
            data:
              component: home.meridiem
              message: "{{ meridiem }}"
            continue_on_error: true

          ### DATE Font Color ###
          - *delay-default
          - service: "{{ nextion.commands.font_color }}"
            data:
              component: home.date
              message: "{{ page_home.general.date.label.color_rgb if is_number(page_home.general.date.label.color_rgb) else ((page_home.general.date.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.date.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.date.label.color_rgb[2] //(2**3)) }}"
            continue_on_error: true
          ### DATE Font ###
          - *delay-default
          - service: "{{ nextion.commands.text_printf }}"
            data:
              component: home.date
              message: "{{ (dict.values(mui[language].weekdays) | list)[now().weekday()] ~ ', ' ~ as_timestamp(now()) | timestamp_custom(date_format) }}"
            continue_on_error: true

      ##### OUTDOOR TEMP - entity #####
      - alias: Outdoor temp - Entity
        conditions:
          - condition: trigger
            id: outdoortemp_state
          - condition: template
            value_template: "{{ nspanel_event.page == nextion.pages.home and is_number(trigger.event.data.new_state.state) }}"
        sequence:
          ### LABEL Outdoor Temp Font Color ###
          - *delay-default
          - service: "{{ nextion.commands.font_color }}"
            data:
              component: home.outdoor_temp
              message: "{{ page_home.general.outdoor_temp.label.color_rgb if is_number(page_home.general.outdoor_temp.label.color_rgb) else ((page_home.general.outdoor_temp.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.outdoor_temp.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.outdoor_temp.label.color_rgb[2] //(2**3)) }}"
            continue_on_error: true
          ### LABEL Outdoor Temp Font ###
          - *delay-default
          - service: "{{ nextion.commands.text_printf }}"
            data:
              component: home.outdoor_temp
              message: "{{ trigger.event.data.new_state.state | round(1) }}{{ temperature_units }}"
            continue_on_error: true

      ##### INDOOR TEMP - entity #####
      - alias: Indoor temp - Entity
        conditions:
          - condition: trigger
            id: indoortemp_state
          - condition: template
            value_template: "{{ nspanel_event.page == nextion.pages.home and trigger.event.data.new_state.state not in ['unavailable', 'unknown', None] }}"
        sequence:
          ### LABEL Indoor Temp Font Color ###
          - *delay-default
          - service: "{{ nextion.commands.font_color }}"
            data:
              component: home.current_temp
              message: "{{ page_home.general.indoor_temp.label.color_rgb if is_number(page_home.general.indoor_temp.label.color_rgb) else ((page_home.general.indoor_temp.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.indoor_temp.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.indoor_temp.label.color_rgb[2] //(2**3)) }}"
            continue_on_error: true
          ### LABEL Indoor Temp Font ###
          - *delay-default
          - service: "{{ nextion.commands.text_printf }}"
            data:
              component: home.current_temp
              message: "{{ trigger.event.data.new_state.state | round(1) }}{{ temperature_units }}"
            continue_on_error: true

      ##### INDOOR TEMP - nspanel #####
      - alias: Indoor temp - NSPanel
        conditions:
          - condition: trigger
            id: nspaneltemp_state
          - condition: template
            value_template: "{{ nspanel_event.page == nextion.pages.home and is_number(trigger.event.data.new_state.state) }}"
        sequence:
          - if: "{{ indoortemp is not match 'sensor.' }}"
            then:
              ### LABEL Indoor Temp Font Color ###
              - *delay-default
              - service: "{{ nextion.commands.font_color }}"
                data:
                  component: home.current_temp
                  message: "{{ page_home.general.indoor_temp.label.color_rgb if is_number(page_home.general.indoor_temp.label.color_rgb) else ((page_home.general.indoor_temp.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.indoor_temp.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.indoor_temp.label.color_rgb[2] //(2**3)) }}"
                continue_on_error: true
              ### LABEL Indoor Temp Font ###
              - *delay-default
              - service: "{{ nextion.commands.text_printf }}"
                data:
                  component: home.current_temp
                  message: "{{ trigger.event.data.new_state.state | round(1) }}{{ temperature_units }}"
                continue_on_error: true

      ##### WEATHER STATE - change update #####
      - alias: Weather - State changed
        conditions:
          - condition: trigger
            id: weather_state_change
          - condition: template
            value_template: "{{ nspanel_event.page == nextion.pages.home and trigger.event.data.new_state.state not in ['unavailable', 'unknown', None] }}"
        sequence:
          - if: "{{ outdoortemp is not match 'sensor.' }}"
            then:
              ### LABEL Outdoor Temp Font Color ###
              - *delay-default
              - service: "{{ nextion.commands.font_color }}"
                data:
                  component: home.outdoor_temp
                  message: "{{ page_home.general.outdoor_temp.label.color_rgb if is_number(page_home.general.outdoor_temp.label.color_rgb) else ((page_home.general.outdoor_temp.label.color_rgb[0] //(2**3)) *(2**11))+((page_home.general.outdoor_temp.label.color_rgb[1] //(2**2)) *(2**5))+(page_home.general.outdoor_temp.label.color_rgb[2] //(2**3)) }}"
                continue_on_error: true
              ### LABEL Outdoor Temp Font ###
              - *delay-default
              - service: "{{ nextion.commands.text_printf }}"
                data:
                  component: home.outdoor_temp
                  message: "{{trigger.event.data.new_state.attributes.temperature | round(1)}}{{ temperature_units }}"
                continue_on_error: true
              - service: "{{ nextion.commands.text_printf }}"
                data:
                  component: climate.outdoor_temp
                  message: "{{trigger.event.data.new_state.attributes.temperature | round(1)}}{{ temperature_units }}"

          - service: "{{ nextion.commands.printf }}"
            data:
              cmd: home.weather.pic={{ nextion.pics.weather[trigger.event.data.new_state.state | default('unknown')] }}
            continue_on_error: true

      ##### Sync Climate ##### -> muss noch in page changed climate wwenn climate page fertig
      - alias: Climate - Sync
        conditions:
          - condition: trigger
            id: climate_state
          - "{{ trigger.event.data.new_state.state not in ['unavailable', 'unknown', None] }}"
          # - condition: template
          #   value_template: "{{ nspanel_event.page == nextion.pages.climate }}"
          # - condition: template
          #   value_template: "{{ climate_optimistic == false }}"
        sequence:
          - variables:
              heating_state: "{{ mui[language].climate.states.off if trigger.event.data.new_state.state == 'off' else mui[language].climate.states.on }}"
              heating_bt_pic: "{{ nextion.pics.heating.button.off if trigger.event.data.new_state.state == 'off' else nextion.pics.heating.button.on }}"

          - service: "{{ nextion.commands.text_printf }}"
            data:
              component: current_temp
              message: "{{ trigger.event.data.new_state.attributes.current_temperature | round(1)}}{{ temperature_units }}"
            continue_on_error: true
          - service: "{{ nextion.commands.text_printf }}"
            data:
              component: heating_state
              message: "{{heating_state}}"
            continue_on_error: true
          - service: "{{ nextion.commands.printf }}"
            data:
              cmd: heating_bt_pic.pic={{ heating_bt_pic }}
            continue_on_error: true
          - if: "{{ trigger.event.data.new_state.state != 'off' }}" #### TODO AND->OR (not) not optimistic-mode
            then:
              - service: "{{ nextion.commands.thermostat_cycle }}"
                data:
                  value: "{{trigger.event.data.new_state.attributes.temperature | round(1)}}"
                continue_on_error: true
            else:
              - service: "{{ nextion.commands.thermostat_cycle }}"
                data:
                  value: "0"
                continue_on_error: true
              - service: "{{ nextion.commands.text_printf }}"
                data:
                  component: target_temp
                  message: " "
                continue_on_error: true

      ##### Sync Hotwater Charge button-symbol ##### -> kann wenn climate page fertig
      - alias: Hotwater - Sync
        conditions:
          - condition: trigger
            id: hotwatercharge_state
          - "{{ nspanel_event.page == nextion.pages.climate }}"
        sequence:
          - variables:
              hotw_bt_pic: "{{ nextion.pics.hvac.button[trigger.event.data.new_state.state] }}"
          - service: "{{ nextion.commands.printf }}"
            data:
              cmd: hotw_bt_pic.pic={{ hotw_bt_pic }}
            continue_on_error: true

      ##### Hotwater Temp ##### kann raus und wird durch neue value 01 und value 02 ersetzt wenn climate page fertig
      - alias: Hotwater - Temp
        conditions:
          - condition: trigger
            id: hotwatertemp_state
          - "{{ nspanel_event.page == nextion.pages.climate and trigger.event.data.new_state.state not in ['unavailable', 'unknown', None] }}"
        sequence:
          - service: "{{ nextion.commands.text_printf }}"
            data:
              component: home.hotwater_temp
              message: "{{ trigger.event.data.new_state.state | round(1) }}{{ temperature_units }}"
            continue_on_error: true
          - *delay-default
          - service: "{{ nextion.commands.text_printf }}"
            data:
              component: climate.hotwater_temp
              message: "{{ trigger.event.data.new_state.state | round(1) }}{{ temperature_units }}"
            continue_on_error: true
          # - delay:
          #     milliseconds: "{{ delay_value }}"
          # - service: "{{ nextion.commands.printf }}"
          #   data:
          #     cmd: home.hotwater_pic.pic={{ hotwater_pic_on }}

      #### TFT Upload Automation #####
      - alias: TFT auto-upload
        conditions:
          - condition: trigger
            id: tft_upload
        sequence:
          - delay:
              seconds: 2
          - service: "{{ nextion.commands.tft_upload }}"
            data: {}
            continue_on_error: true


#############################################################
##### CLOSE - Action #####
#############################################################
